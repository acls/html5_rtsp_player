{"version":3,"file":"html5_rtsp_player.js","sources":["../node_modules/bp_logger/logger.js","../src/core/iso-bmff/mp4-generator.js","../src/core/elementary/AACFrame.js","../src/core/util/binary.js","../src/core/parsers/aac.js","../src/core/elementary/AACAsm.js","../node_modules/bp_event/event.js","../src/core/presentation/mse.js","../src/core/remuxer/base.js","../src/core/remuxer/aac.js","../src/core/elementary/NALU.js","../src/core/elementary/NALUAsm.js","../src/core/util/exp-golomb.js","../src/core/parsers/h264.js","../src/core/remuxer/h264.js","../src/core/defs.js","../src/core/remuxer/remuxer.js","../node_modules/bp_statemachine/statemachine.js","../src/core/parsers/sdp.js","../src/client/rtsp/rtp/rtp.js","../src/client/rtsp/rtp/factory.js","../src/client/rtsp/message.js","../src/client/rtsp/rtp/payload/parser.js","../src/core/base_client.js","../src/client/rtsp/client.js","../src/core/base_transport.js","../src/core/util/browser.js","../node_modules/jsencrypt/lib/asn1js/asn1.js","../node_modules/jsencrypt/lib/jsbn/prng4.js","../node_modules/jsencrypt/lib/jsbn/rng.js","../node_modules/jsencrypt/lib/jsbn/jsbn.js","../node_modules/jsencrypt/lib/jsbn/jsbn2.js","../node_modules/jsencrypt/lib/jsrsasign/asn1-1.0.js","../src/transport/websocket.js","../src/player.js","../html5_rtsp_player.js"],"sourcesContent":["// ERROR=0, WARN=1, LOG=2, DEBUG=3\nexport const LogLevel = {\n    Error: 0,\n    Warn: 1,\n    Log: 2,\n    Debug: 3\n};\n\nlet DEFAULT_LOG_LEVEL = LogLevel.Debug;\n\nexport function setDefaultLogLevel(level) {\n    DEFAULT_LOG_LEVEL = level;\n}\nexport class Logger {\n    constructor(level = DEFAULT_LOG_LEVEL, tag) {\n        this.tag = tag;\n        this.setLevel(level);\n    }\n    \n    setLevel(level) {\n        this.level = level;\n    }\n    \n    static get level_map() { return {\n        [LogLevel.Debug]:'log',\n        [LogLevel.Log]:'log',\n        [LogLevel.Warn]:'warn',\n        [LogLevel.Error]:'error'\n    }};\n\n    _log(lvl, args) {\n        args = Array.prototype.slice.call(args);\n        if (this.tag) {\n            args.unshift(`[${this.tag}]`);\n        }\n        if (this.level>=lvl) console[Logger.level_map[lvl]].apply(console, args);\n    }\n    log(){\n        this._log(LogLevel.Log, arguments)\n    }\n    debug(){\n        this._log(LogLevel.Debug, arguments)\n    }\n    error(){\n        this._log(LogLevel.Error, arguments)\n    }\n    warn(){\n        this._log(LogLevel.Warn, arguments)\n    }\n}\n\nconst taggedLoggers = new Map();\nexport function getTagged(tag) {\n    if (!taggedLoggers.has(tag)) {\n        taggedLoggers.set(tag, new Logger(DEFAULT_LOG_LEVEL, tag));\n    }\n    return taggedLoggers.get(tag);\n}\nexport const Log = new Logger();\n","/**\n * Generate MP4 Box\n * got from: https://github.com/dailymotion/hls.js\n */\n\nexport class MP4 {\n    static init() {\n        MP4.types = {\n            avc1: [], // codingname\n            avcC: [],\n            btrt: [],\n            dinf: [],\n            dref: [],\n            esds: [],\n            ftyp: [],\n            hdlr: [],\n            mdat: [],\n            mdhd: [],\n            mdia: [],\n            mfhd: [],\n            minf: [],\n            moof: [],\n            moov: [],\n            mp4a: [],\n            mvex: [],\n            mvhd: [],\n            sdtp: [],\n            stbl: [],\n            stco: [],\n            stsc: [],\n            stsd: [],\n            stsz: [],\n            stts: [],\n            tfdt: [],\n            tfhd: [],\n            traf: [],\n            trak: [],\n            trun: [],\n            trex: [],\n            tkhd: [],\n            vmhd: [],\n            smhd: []\n        };\n\n        var i;\n        for (i in MP4.types) {\n            if (MP4.types.hasOwnProperty(i)) {\n                MP4.types[i] = [\n                    i.charCodeAt(0),\n                    i.charCodeAt(1),\n                    i.charCodeAt(2),\n                    i.charCodeAt(3)\n                ];\n            }\n        }\n\n        var videoHdlr = new Uint8Array([\n            0x00, // version 0\n            0x00, 0x00, 0x00, // flags\n            0x00, 0x00, 0x00, 0x00, // pre_defined\n            0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n            0x00, 0x00, 0x00, 0x00, // reserved\n            0x00, 0x00, 0x00, 0x00, // reserved\n            0x00, 0x00, 0x00, 0x00, // reserved\n            0x56, 0x69, 0x64, 0x65,\n            0x6f, 0x48, 0x61, 0x6e,\n            0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n        ]);\n\n        var audioHdlr = new Uint8Array([\n            0x00, // version 0\n            0x00, 0x00, 0x00, // flags\n            0x00, 0x00, 0x00, 0x00, // pre_defined\n            0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n            0x00, 0x00, 0x00, 0x00, // reserved\n            0x00, 0x00, 0x00, 0x00, // reserved\n            0x00, 0x00, 0x00, 0x00, // reserved\n            0x53, 0x6f, 0x75, 0x6e,\n            0x64, 0x48, 0x61, 0x6e,\n            0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n        ]);\n\n        MP4.HDLR_TYPES = {\n            'video': videoHdlr,\n            'audio': audioHdlr\n        };\n\n        var dref = new Uint8Array([\n            0x00, // version 0\n            0x00, 0x00, 0x00, // flags\n            0x00, 0x00, 0x00, 0x01, // entry_count\n            0x00, 0x00, 0x00, 0x0c, // entry_size\n            0x75, 0x72, 0x6c, 0x20, // 'url' type\n            0x00, // version 0\n            0x00, 0x00, 0x01 // entry_flags\n        ]);\n\n        var stco = new Uint8Array([\n            0x00, // version\n            0x00, 0x00, 0x00, // flags\n            0x00, 0x00, 0x00, 0x00 // entry_count\n        ]);\n\n        MP4.STTS = MP4.STSC = MP4.STCO = stco;\n\n        MP4.STSZ = new Uint8Array([\n            0x00, // version\n            0x00, 0x00, 0x00, // flags\n            0x00, 0x00, 0x00, 0x00, // sample_size\n            0x00, 0x00, 0x00, 0x00, // sample_count\n        ]);\n        MP4.VMHD = new Uint8Array([\n            0x00, // version\n            0x00, 0x00, 0x01, // flags\n            0x00, 0x00, // graphicsmode\n            0x00, 0x00,\n            0x00, 0x00,\n            0x00, 0x00 // opcolor\n        ]);\n        MP4.SMHD = new Uint8Array([\n            0x00, // version\n            0x00, 0x00, 0x00, // flags\n            0x00, 0x00, // balance\n            0x00, 0x00 // reserved\n        ]);\n\n        MP4.STSD = new Uint8Array([\n            0x00, // version 0\n            0x00, 0x00, 0x00, // flags\n            0x00, 0x00, 0x00, 0x01]);// entry_count\n\n        var majorBrand = new Uint8Array([105,115,111,109]); // isom\n        var avc1Brand = new Uint8Array([97,118,99,49]); // avc1\n        var minorVersion = new Uint8Array([0, 0, 0, 1]);\n\n        MP4.FTYP = MP4.box(MP4.types.ftyp, majorBrand, minorVersion, majorBrand, avc1Brand);\n        MP4.DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, dref));\n    }\n\n    static box(type, ...payload) {\n        var size = 8,\n            i = payload.length,\n            len = i,\n            result;\n        // calculate the total size we need to allocate\n        while (i--) {\n            size += payload[i].byteLength;\n        }\n        result = new Uint8Array(size);\n        result[0] = (size >> 24) & 0xff;\n        result[1] = (size >> 16) & 0xff;\n        result[2] = (size >> 8) & 0xff;\n        result[3] = size  & 0xff;\n        result.set(type, 4);\n        // copy the payload into the result\n        for (i = 0, size = 8; i < len; ++i) {\n            // copy payload[i] array @ offset size\n            result.set(payload[i], size);\n            size += payload[i].byteLength;\n        }\n        return result;\n    }\n\n    static hdlr(type) {\n        return MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type]);\n    }\n\n    static mdat(data) {\n        return MP4.box(MP4.types.mdat, data);\n    }\n\n    static mdhd(timescale, duration) {\n        return MP4.box(MP4.types.mdhd, new Uint8Array([\n            0x00, // version 0\n            0x00, 0x00, 0x00, // flags\n            0x00, 0x00, 0x00, 0x02, // creation_time\n            0x00, 0x00, 0x00, 0x03, // modification_time\n            (timescale >> 24) & 0xFF,\n            (timescale >> 16) & 0xFF,\n            (timescale >>  8) & 0xFF,\n            timescale & 0xFF, // timescale\n            (duration >> 24),\n            (duration >> 16) & 0xFF,\n            (duration >>  8) & 0xFF,\n            duration & 0xFF, // duration\n            0x55, 0xc4, // 'und' language (undetermined)\n            0x00, 0x00\n        ]));\n    }\n\n    static mdia(track) {\n        return MP4.box(MP4.types.mdia, MP4.mdhd(track.timescale, track.duration), MP4.hdlr(track.type), MP4.minf(track));\n    }\n\n    static mfhd(sequenceNumber) {\n        return MP4.box(MP4.types.mfhd, new Uint8Array([\n            0x00,\n            0x00, 0x00, 0x00, // flags\n            (sequenceNumber >> 24),\n            (sequenceNumber >> 16) & 0xFF,\n            (sequenceNumber >>  8) & 0xFF,\n            sequenceNumber & 0xFF, // sequence_number\n        ]));\n    }\n\n    static minf(track) {\n        if (track.type === 'audio') {\n            return MP4.box(MP4.types.minf, MP4.box(MP4.types.smhd, MP4.SMHD), MP4.DINF, MP4.stbl(track));\n        } else {\n            return MP4.box(MP4.types.minf, MP4.box(MP4.types.vmhd, MP4.VMHD), MP4.DINF, MP4.stbl(track));\n        }\n    }\n\n    static moof(sn, baseMediaDecodeTime, track) {\n        return MP4.box(MP4.types.moof, MP4.mfhd(sn), MP4.traf(track,baseMediaDecodeTime));\n    }\n    /**\n     * @param tracks... (optional) {array} the tracks associated with this movie\n     */\n    static moov(tracks, duration, timescale) {\n        var\n            i = tracks.length,\n            boxes = [];\n\n        while (i--) {\n            boxes[i] = MP4.trak(tracks[i]);\n        }\n\n        return MP4.box.apply(null, [MP4.types.moov, MP4.mvhd(timescale, duration)].concat(boxes).concat(MP4.mvex(tracks)));\n    }\n\n    static mvex(tracks) {\n        var\n            i = tracks.length,\n            boxes = [];\n\n        while (i--) {\n            boxes[i] = MP4.trex(tracks[i]);\n        }\n        return MP4.box.apply(null, [MP4.types.mvex].concat(boxes));\n    }\n\n    static mvhd(timescale,duration) {\n        var\n            bytes = new Uint8Array([\n                0x00, // version 0\n                0x00, 0x00, 0x00, // flags\n                0x00, 0x00, 0x00, 0x01, // creation_time\n                0x00, 0x00, 0x00, 0x02, // modification_time\n                (timescale >> 24) & 0xFF,\n                (timescale >> 16) & 0xFF,\n                (timescale >>  8) & 0xFF,\n                timescale & 0xFF, // timescale\n                (duration >> 24) & 0xFF,\n                (duration >> 16) & 0xFF,\n                (duration >>  8) & 0xFF,\n                duration & 0xFF, // duration\n                0x00, 0x01, 0x00, 0x00, // 1.0 rate\n                0x01, 0x00, // 1.0 volume\n                0x00, 0x00, // reserved\n                0x00, 0x00, 0x00, 0x00, // reserved\n                0x00, 0x00, 0x00, 0x00, // reserved\n                0x00, 0x01, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x01, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00, // pre_defined\n                0xff, 0xff, 0xff, 0xff // next_track_ID\n            ]);\n        return MP4.box(MP4.types.mvhd, bytes);\n    }\n\n    static sdtp(track) {\n        var\n            samples = track.samples || [],\n            bytes = new Uint8Array(4 + samples.length),\n            flags,\n            i;\n        // leave the full box header (4 bytes) all zero\n        // write the sample table\n        for (i = 0; i < samples.length; i++) {\n            flags = samples[i].flags;\n            bytes[i + 4] = (flags.dependsOn << 4) |\n                (flags.isDependedOn << 2) |\n                (flags.hasRedundancy);\n        }\n\n        return MP4.box(MP4.types.sdtp, bytes);\n    }\n\n    static stbl(track) {\n        return MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.box(MP4.types.stts, MP4.STTS), MP4.box(MP4.types.stsc, MP4.STSC), MP4.box(MP4.types.stsz, MP4.STSZ), MP4.box(MP4.types.stco, MP4.STCO));\n    }\n\n    static avc1(track) {\n        var sps = [], pps = [], i, data, len;\n        // assemble the SPSs\n\n        for (i = 0; i < track.sps.length; i++) {\n            data = track.sps[i];\n            len = data.byteLength;\n            sps.push((len >>> 8) & 0xFF);\n            sps.push((len & 0xFF));\n            sps = sps.concat(Array.prototype.slice.call(data)); // SPS\n        }\n\n        // assemble the PPSs\n        for (i = 0; i < track.pps.length; i++) {\n            data = track.pps[i];\n            len = data.byteLength;\n            pps.push((len >>> 8) & 0xFF);\n            pps.push((len & 0xFF));\n            pps = pps.concat(Array.prototype.slice.call(data));\n        }\n\n        var avcc = MP4.box(MP4.types.avcC, new Uint8Array([\n                0x01,   // version\n                sps[3], // profile\n                sps[4], // profile compat\n                sps[5], // level\n                0xfc | 3, // lengthSizeMinusOne, hard-coded to 4 bytes\n                0xE0 | track.sps.length // 3bit reserved (111) + numOfSequenceParameterSets\n            ].concat(sps).concat([\n                track.pps.length // numOfPictureParameterSets\n            ]).concat(pps))), // \"PPS\"\n            width = track.width,\n            height = track.height;\n        //console.log('avcc:' + Hex.hexDump(avcc));\n        return MP4.box(MP4.types.avc1, new Uint8Array([\n                0x00, 0x00, 0x00, // reserved\n                0x00, 0x00, 0x00, // reserved\n                0x00, 0x01, // data_reference_index\n                0x00, 0x00, // pre_defined\n                0x00, 0x00, // reserved\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00, // pre_defined\n                (width >> 8) & 0xFF,\n                width & 0xff, // width\n                (height >> 8) & 0xFF,\n                height & 0xff, // height\n                0x00, 0x48, 0x00, 0x00, // horizresolution\n                0x00, 0x48, 0x00, 0x00, // vertresolution\n                0x00, 0x00, 0x00, 0x00, // reserved\n                0x00, 0x01, // frame_count\n                0x12,\n                0x62, 0x69, 0x6E, 0x65, //binelpro.ru\n                0x6C, 0x70, 0x72, 0x6F,\n                0x2E, 0x72, 0x75, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, // compressorname\n                0x00, 0x18,   // depth = 24\n                0x11, 0x11]), // pre_defined = -1\n            avcc,\n            MP4.box(MP4.types.btrt, new Uint8Array([\n                0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n                0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n                0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n    }\n\n    static esds(track) {\n        var configlen = track.config.byteLength;\n        let data = new Uint8Array(26+configlen+3);\n        data.set([\n            0x00, // version 0\n            0x00, 0x00, 0x00, // flags\n\n            0x03, // descriptor_type\n            0x17+configlen, // length\n            0x00, 0x01, //es_id\n            0x00, // stream_priority\n\n            0x04, // descriptor_type\n            0x0f+configlen, // length\n            0x40, //codec : mpeg4_audio\n            0x15, // stream_type\n            0x00, 0x00, 0x00, // buffer_size\n            0x00, 0x00, 0x00, 0x00, // maxBitrate\n            0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n            0x05, // descriptor_type\n            configlen\n        ]);\n        data.set(track.config, 26);\n        data.set([0x06, 0x01, 0x02], 26+configlen);\n        // return new Uint8Array([\n        //     0x00, // version 0\n        //     0x00, 0x00, 0x00, // flags\n        //\n        //     0x03, // descriptor_type\n        //     0x17+configlen, // length\n        //     0x00, 0x01, //es_id\n        //     0x00, // stream_priority\n        //\n        //     0x04, // descriptor_type\n        //     0x0f+configlen, // length\n        //     0x40, //codec : mpeg4_audio\n        //     0x15, // stream_type\n        //     0x00, 0x00, 0x00, // buffer_size\n        //     0x00, 0x00, 0x00, 0x00, // maxBitrate\n        //     0x00, 0x00, 0x00, 0x00, // avgBitrate\n        //\n        //     0x05 // descriptor_type\n        // ].concat([configlen]).concat(track.config).concat([0x06, 0x01, 0x02])); // GASpecificConfig)); // length + audio config descriptor\n        return data;\n    }\n\n    static mp4a(track) {\n        var audiosamplerate = track.audiosamplerate;\n        return MP4.box(MP4.types.mp4a, new Uint8Array([\n                0x00, 0x00, 0x00, // reserved\n                0x00, 0x00, 0x00, // reserved\n                0x00, 0x01, // data_reference_index\n                0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00, // reserved\n                0x00, track.channelCount, // channelcount\n                0x00, 0x10, // sampleSize:16bits\n                0x00, 0x00, // pre_defined\n                0x00, 0x00, // reserved2\n                (audiosamplerate >> 8) & 0xFF,\n                audiosamplerate & 0xff, //\n                0x00, 0x00]),\n            MP4.box(MP4.types.esds, MP4.esds(track)));\n    }\n\n    static stsd(track) {\n        if (track.type === 'audio') {\n            return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp4a(track));\n        } else {\n            return MP4.box(MP4.types.stsd, MP4.STSD, MP4.avc1(track));\n        }\n    }\n\n    static tkhd(track) {\n        var id = track.id,\n            duration = track.duration,\n            width = track.width,\n            height = track.height,\n            volume = track.volume;\n        return MP4.box(MP4.types.tkhd, new Uint8Array([\n            0x00, // version 0\n            0x00, 0x00, 0x07, // flags\n            0x00, 0x00, 0x00, 0x00, // creation_time\n            0x00, 0x00, 0x00, 0x00, // modification_time\n            (id >> 24) & 0xFF,\n            (id >> 16) & 0xFF,\n            (id >> 8) & 0xFF,\n            id & 0xFF, // track_ID\n            0x00, 0x00, 0x00, 0x00, // reserved\n            (duration >> 24),\n            (duration >> 16) & 0xFF,\n            (duration >>  8) & 0xFF,\n            duration & 0xFF, // duration\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, // reserved\n            0x00, 0x00, // layer\n            0x00, 0x00, // alternate_group\n            (volume>>0)&0xff, (((volume%1)*10)>>0)&0xff, // track volume // FIXME\n            0x00, 0x00, // reserved\n            0x00, 0x01, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x01, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00,\n            0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n            (width >> 8) & 0xFF,\n            width & 0xFF,\n            0x00, 0x00, // width\n            (height >> 8) & 0xFF,\n            height & 0xFF,\n            0x00, 0x00 // height\n        ]));\n    }\n\n    static traf(track,baseMediaDecodeTime) {\n        var sampleDependencyTable = MP4.sdtp(track),\n            id = track.id;\n        return MP4.box(MP4.types.traf,\n            MP4.box(MP4.types.tfhd, new Uint8Array([\n                0x00, // version 0\n                0x00, 0x00, 0x00, // flags\n                (id >> 24),\n                (id >> 16) & 0XFF,\n                (id >> 8) & 0XFF,\n                (id & 0xFF) // track_ID\n            ])),\n            MP4.box(MP4.types.tfdt, new Uint8Array([\n                0x00, // version 0\n                0x00, 0x00, 0x00, // flags\n                (baseMediaDecodeTime >>24),\n                (baseMediaDecodeTime >> 16) & 0XFF,\n                (baseMediaDecodeTime >> 8) & 0XFF,\n                (baseMediaDecodeTime & 0xFF) // baseMediaDecodeTime\n            ])),\n            MP4.trun(track,\n                sampleDependencyTable.length +\n                16 + // tfhd\n                16 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8),  // mdat header\n            sampleDependencyTable);\n    }\n\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n    static trak(track) {\n        track.duration = track.duration || 0xffffffff;\n        return MP4.box(MP4.types.trak, MP4.tkhd(track), MP4.mdia(track));\n    }\n\n    static trex(track) {\n        var id = track.id;\n        return MP4.box(MP4.types.trex, new Uint8Array([\n            0x00, // version 0\n            0x00, 0x00, 0x00, // flags\n            (id >> 24),\n            (id >> 16) & 0XFF,\n            (id >> 8) & 0XFF,\n            (id & 0xFF), // track_ID\n            0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n            0x00, 0x00, 0x00, 0x00, // default_sample_duration\n            0x00, 0x00, 0x00, 0x00, // default_sample_size\n            0x00, 0x01, 0x00, 0x01 // default_sample_flags\n        ]));\n    }\n\n    static trun(track, offset) {\n        var samples= track.samples || [],\n            len = samples.length,\n            arraylen = 12 + (16 * len),\n            array = new Uint8Array(arraylen),\n            i,sample,duration,size,flags,cts;\n        offset += 8 + arraylen;\n        array.set([\n            0x00, // version 0\n            0x00, 0x0f, 0x01, // flags\n            (len >>> 24) & 0xFF,\n            (len >>> 16) & 0xFF,\n            (len >>> 8) & 0xFF,\n            len & 0xFF, // sample_count\n            (offset >>> 24) & 0xFF,\n            (offset >>> 16) & 0xFF,\n            (offset >>> 8) & 0xFF,\n            offset & 0xFF // data_offset\n        ],0);\n        for (i = 0; i < len; i++) {\n            sample = samples[i];\n            duration = sample.duration;\n            size = sample.size;\n            flags = sample.flags;\n            cts = sample.cts;\n            array.set([\n                (duration >>> 24) & 0xFF,\n                (duration >>> 16) & 0xFF,\n                (duration >>> 8) & 0xFF,\n                duration & 0xFF, // sample_duration\n                (size >>> 24) & 0xFF,\n                (size >>> 16) & 0xFF,\n                (size >>> 8) & 0xFF,\n                size & 0xFF, // sample_size\n                (flags.isLeading << 2) | flags.dependsOn,\n                (flags.isDependedOn << 6) |\n                (flags.hasRedundancy << 4) |\n                (flags.paddingValue << 1) |\n                flags.isNonSync,\n                flags.degradPrio & 0xF0 << 8,\n                flags.degradPrio & 0x0F, // sample_flags\n                (cts >>> 24) & 0xFF,\n                (cts >>> 16) & 0xFF,\n                (cts >>> 8) & 0xFF,\n                cts & 0xFF // sample_composition_time_offset\n            ],12+16*i);\n        }\n        return MP4.box(MP4.types.trun, array);\n    }\n\n    static initSegment(tracks, duration, timescale) {\n        if (!MP4.types) {\n            MP4.init();\n        }\n        var movie = MP4.moov(tracks, duration, timescale), result;\n        result = new Uint8Array(MP4.FTYP.byteLength + movie.byteLength);\n        result.set(MP4.FTYP);\n        result.set(movie, MP4.FTYP.byteLength);\n        return result;\n    }\n}\n","export class AACFrame {\n\n    constructor(data, dts, pts) {\n        this.dts = dts;\n        this.pts = pts ? pts : this.dts;\n\n        this.data=data;//.subarray(offset);\n    }\n\n    getData() {\n        return this.data;\n    }\n\n    getSize() {\n        return this.data.byteLength;\n    }\n}","// TODO: asm.js\n\nexport function appendByteArray(buffer1, buffer2) {\n    let tmp = new Uint8Array((buffer1.byteLength|0) + (buffer2.byteLength|0));\n    tmp.set(buffer1, 0);\n    tmp.set(buffer2, buffer1.byteLength|0);\n    return tmp;\n}\n\nexport function appendByteArrayAsync(buffer1, buffer2) {\n    return new Promise((resolve, reject)=>{\n        let blob = new Blob([buffer1, buffer2]);\n        let reader = new FileReader();\n        reader.addEventListener(\"loadend\", function() {\n            resolve();\n        });\n        reader.readAsArrayBuffer(blob);\n    });\n}\nexport function base64ToArrayBuffer(base64) {\n    var binary_string =  window.atob(base64);\n    var len = binary_string.length;\n    var bytes = new Uint8Array( len );\n    for (var i = 0; i < len; i++)        {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes.buffer;\n}\n\nexport function hexToByteArray(hex) {\n    let len = hex.length >> 1;\n    var bufView = new Uint8Array(len);\n    for (var i = 0; i < len; i++) {\n        bufView[i] = parseInt(hex.substr(i<<1,2),16);\n    }\n    return bufView;\n}\n\nexport function concatenate(resultConstructor, ...arrays) {\n    let totalLength = 0;\n    for (let arr of arrays) {\n        totalLength += arr.length;\n    }\n    let result = new resultConstructor(totalLength);\n    let offset = 0;\n    for (let arr of arrays) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\n\nexport function bitSlice(bytearray, start=0, end=bytearray.byteLength*8) {\n    let byteLen = Math.ceil((end-start)/8);\n    let res = new Uint8Array(byteLen);\n    let startByte = start >>> 3;   // /8\n    let endByte = (end>>>3) - 1;    // /8\n    let bitOffset = start & 0x7;     // %8\n    let nBitOffset = 8 - bitOffset;\n    let endOffset = 8 - end & 0x7;   // %8\n    for (let i=0; i<byteLen; ++i) {\n        let tail = 0;\n        if (i<endByte) {\n            tail = bytearray[startByte+i+1] >> nBitOffset;\n            if (i == endByte-1 && endOffset < 8) {\n                tail >>= endOffset;\n                tail <<= endOffset;\n            }\n        }\n        res[i]=(bytearray[startByte+i]<<bitOffset) | tail;\n    }\n    return res;\n}\n\nexport class BitArray {\n\n    constructor(src) {\n        this.src    = new DataView(src.buffer, src.byteOffset, src.byteLength);\n        this.bitpos = 0;\n        this.byte   = this.src.getUint8(0); /* This should really be undefined, uint wont allow it though */\n        this.bytepos = 0;\n    }\n\n    readBits(length) {\n        if (32 < (length|0) || 0 === (length|0)) {\n            /* To big for an uint */\n            throw new Error(\"too big\");\n        }\n\n        let result = 0;\n        for (let i = length; i > 0; --i) {\n\n            /* Shift result one left to make room for another bit,\n             then add the next bit on the stream. */\n            result = ((result|0) << 1) | (((this.byte|0) >> (8 - (++this.bitpos))) & 0x01);\n            if ((this.bitpos|0)>=8) {\n                this.byte = this.src.getUint8(++this.bytepos);\n                this.bitpos &= 0x7;\n            }\n        }\n\n        return result;\n    }\n    skipBits(length) {\n        this.bitpos += (length|0) & 0x7; // %8\n        this.bytepos += (length|0) >>> 3;  // *8\n        if (this.bitpos > 7) {\n            this.bitpos &= 0x7;\n            ++this.bytepos;\n        }\n\n        if (!this.finished()) {\n            this.byte = this.src.getUint8(this.bytepos);\n            return 0;\n        } else {\n            return this.bytepos-this.src.byteLength-this.src.bitpos;\n        }\n    }\n    \n    finished() {\n        return this.bytepos >= this.src.byteLength;\n    }\n}","import {BitArray, bitSlice} from '../util/binary';\n\nexport class AACParser {\n    static get SampleRates() {return  [\n        96000, 88200,\n        64000, 48000,\n        44100, 32000,\n        24000, 22050,\n        16000, 12000,\n        11025, 8000,\n        7350];}\n\n    // static Profile = [\n    //     0: Null\n    //     1: AAC Main\n    //     2: AAC LC (Low Complexity)\n    //     3: AAC SSR (Scalable Sample Rate)\n    //     4: AAC LTP (Long Term Prediction)\n    //     5: SBR (Spectral Band Replication)\n    //     6: AAC Scalable\n    // ]\n\n    static parseAudioSpecificConfig(bytesOrBits) {\n        let config;\n        if (bytesOrBits.byteLength) { // is byteArray\n            config = new BitArray(bytesOrBits);\n        } else {\n            config = bytesOrBits;\n        }\n\n        let bitpos = config.bitpos+(config.src.byteOffset+config.bytepos)*8;\n        let prof = config.readBits(5);\n        this.codec = `mp4a.40.${prof}`;\n        let sfi = config.readBits(4);\n        if (sfi == 0xf) config.skipBits(24);\n        let channels = config.readBits(4);\n\n        return {\n            config: bitSlice(new Uint8Array(config.src.buffer), bitpos, bitpos+16),\n            codec: `mp4a.40.${prof}`,\n            samplerate: AACParser.SampleRates[sfi],\n            channels: channels\n        }\n    }\n\n    static parseStreamMuxConfig(bytes) {\n        // ISO_IEC_14496-3 Part 3 Audio. StreamMuxConfig\n        let config = new BitArray(bytes);\n\n        if (!config.readBits(1)) {\n            config.skipBits(14);\n            return AACParser.parseAudioSpecificConfig(config);\n        }\n    }\n}\n","import {AACFrame} from './AACFrame';\nimport {AACParser} from \"../parsers/aac\";\n// TODO: asm.js\nexport class AACAsm {\n    constructor() {\n        this.config = null;\n    }\n\n    onAACFragment(pkt) {\n        let rawData = pkt.getPayload();\n        if (!pkt.media) {\n            return null;\n        }\n        let data = new DataView(rawData.buffer, rawData.byteOffset, rawData.byteLength);\n\n        let sizeLength = Number(pkt.media.fmtp['sizelength'] || 0);\n        let indexLength = Number(pkt.media.fmtp['indexlength'] || 0);\n        let indexDeltaLength = Number(pkt.media.fmtp['indexdeltalength'] || 0);\n        let CTSDeltaLength = Number(pkt.media.fmtp['ctsdeltalength'] || 0);\n        let DTSDeltaLength = Number(pkt.media.fmtp['dtsdeltalength'] || 0);\n        let RandomAccessIndication = Number(pkt.media.fmtp['randomaccessindication'] || 0);\n        let StreamStateIndication = Number(pkt.media.fmtp['streamstateindication'] || 0);\n        let AuxiliaryDataSizeLength = Number(pkt.media.fmtp['auxiliarydatasizelength'] || 0);\n\n        let configHeaderLength =\n            sizeLength + Math.max(indexLength, indexDeltaLength) + CTSDeltaLength + DTSDeltaLength +\n            RandomAccessIndication + StreamStateIndication + AuxiliaryDataSizeLength;\n\n\n        let auHeadersLengthPadded = 0;\n        if (0 !== configHeaderLength) {\n            /* The AU header section is not empty, read it from payload */\n            let auHeadersLengthInBits = data.getUint16(0); // Always 2 octets, without padding\n            auHeadersLengthPadded = 2 + ((auHeadersLengthInBits + (auHeadersLengthInBits & 0x7)) >>> 3); // Add padding\n\n            //this.config = AACParser.parseAudioSpecificConfig(new Uint8Array(rawData, 0 , auHeadersLengthPadded));\n            // TODO: parse config\n        }\n\n        let aacData = rawData.subarray(auHeadersLengthPadded);\n        let offset = 0;\n        while (true) {\n            if (aacData[offset] !=255) break;\n            ++offset;\n        }\n\n        ++offset;\n        let ts = (Math.round(pkt.getTimestampMS()/1024) << 10) * 90000 / this.config.samplerate;\n        return new AACFrame(rawData.subarray(auHeadersLengthPadded+offset), ts);\n    }\n}","const listener = Symbol(\"event_listener\");\nconst listeners = Symbol(\"event_listeners\");\n\nexport class DestructibleEventListener {\n    constructor(eventListener) {\n        this[listener] = eventListener;\n        this[listeners] = new Map();\n    }\n\n    destroy() {\n        this[listeners].forEach((listener_set, event)=>{\n            listener_set.forEach((fn)=>{\n                this[listener].removeEventListener(event, fn);\n            });\n            listener_set = null;\n        });\n        this[listeners] = null;\n    }\n\n    addEventListener(event, fn) {\n        if (!this[listeners].has(event)) {\n            this[listeners].set(event, new Set());\n        }\n        this[listeners].get(event).add(fn);\n        this[listener].addEventListener(event, fn, false);\n    }\n\n    removeEventListener(event, fn) {\n        this[listener].removeEventListener(event, fn, false);\n        if (this[listeners].has(event)) {\n            this[listeners].set(event, new Set());\n            let ev = this[listeners].get(event);\n            ev.delete(fn);\n            if (!ev.size) {\n                this[listeners].delete(event);\n            }\n        }\n    }\n\n    dispatchEvent(event) {\n        this[listener].dispatchEvent(event);\n    }\n}\n\nexport class EventEmitter {\n    constructor() {\n        this[listener] = new DestructibleEventListener(document.createElement('div'));\n    }\n\n    destroy() {\n        this[listener].destroy();\n        this[listener] = null;\n    }\n\n    addEventListener(event, fn) {\n        this[listener].addEventListener(event, fn, false);\n    }\n\n    removeEventListener(event, fn) {\n        this[listener].removeEventListener(event, fn, false);\n    }\n\n    dispatchEvent(event, data) {\n        this[listener].dispatchEvent(new CustomEvent(event, {detail: data}))\n    }\n}\n","import {EventEmitter} from 'bp_event';\nimport {MP4Inspect} from '../iso-bmff/mp4-inspector';\nimport {getTagged} from 'bp_logger';\n\nconst LOG_TAG = \"mse\";\nconst Log = getTagged(LOG_TAG);\n\nexport class Buffer {\n    constructor(parent, codec) {\n        this.mediaSource = parent.mediaSource;\n        this.players = parent.players;\n        this.cleaning = false;\n        this.parent = parent;\n        this.queue = [];\n        this.cleanResolvers = [];\n        this.codec = codec;\n        this.cleanRanges = [];\n\n        Log.debug(`Use codec: ${codec}`);\n\n        this.sourceBuffer = this.mediaSource.addSourceBuffer(codec);\n\n        this.sourceBuffer.addEventListener('updatestart', (e)=> {\n            // this.updating = true;\n            // Log.debug('update start');\n            if (this.cleaning) {\n                Log.debug(`${this.codec} cleaning start`);\n            }\n        });\n\n        this.sourceBuffer.addEventListener('update', (e)=> {\n            // this.updating = true;\n            if (this.cleaning) {\n                Log.debug(`${this.codec} cleaning update`);\n            }\n        });\n\n        this.sourceBuffer.addEventListener('updateend', (e)=> {\n            // Log.debug('update end');\n            // this.updating = false;\n            if (this.cleaning) {\n                Log.debug(`${this.codec} cleaning end`);\n\n                try {\n                    if (this.sourceBuffer.buffered.length && this.players[0].currentTime < this.sourceBuffer.buffered.start(0)) {\n                        this.players[0].currentTime = this.sourceBuffer.buffered.start(0);\n                    }\n                } catch (e) {\n                    // TODO: do something?\n                }\n                while (this.cleanResolvers.length) {\n                    let resolver = this.cleanResolvers.shift();\n                    resolver();\n                }\n                this.cleaning = false;\n\n                if (this.cleanRanges.length) {\n                    this.doCleanup();\n                    return;\n                }\n            } else {\n                // Log.debug(`buffered: ${this.sourceBuffer.buffered.end(0)}, current ${this.players[0].currentTime}`);\n            }\n            this.feedNext();\n        });\n\n        this.sourceBuffer.addEventListener('error', (e)=> {\n            Log.debug(`Source buffer error: ${this.mediaSource.readyState}`);\n            if (this.mediaSource.sourceBuffers.length) {\n                this.mediaSource.removeSourceBuffer(this.sourceBuffer);\n            }\n            this.parent.eventSource.dispatchEvent('error');\n        });\n\n        this.sourceBuffer.addEventListener('abort', (e)=> {\n            Log.debug(`Source buffer aborted: ${this.mediaSource.readyState}`);\n            if (this.mediaSource.sourceBuffers.length) {\n                this.mediaSource.removeSourceBuffer(this.sourceBuffer);\n            }\n            this.parent.eventSource.dispatchEvent('error');\n        });\n\n        if (!this.sourceBuffer.updating) {\n            this.feedNext();\n        }\n        // TODO: cleanup every hour for live streams\n    }\n\n    destroy() {\n        this.clear();\n        this.queue = [];\n        this.mediaSource.removeSourceBuffer(this.sourceBuffer);\n    }\n\n    clear() {\n        this.queue = [];\n        let promises = [];\n        for (let i=0; i< this.sourceBuffer.buffered.length; ++i) {\n            // TODO: await remove\n            this.cleaning = true;\n            promises.push(new Promise((resolve, reject)=>{\n                this.cleanResolvers.push(resolve);\n                this.sourceBuffer.remove(this.sourceBuffer.buffered.start(i), this.sourceBuffer.buffered.end(i));\n                resolve();\n            }));\n        }\n        return Promise.all(promises);\n    }\n\n    setLive(is_live) {\n        this.is_live = is_live;\n    }\n\n    feedNext() {\n        // Log.debug(\"feed next \", this.sourceBuffer.updating);\n        if (!this.sourceBuffer.updating && !this.cleaning && this.queue.length) {\n            this.doAppend(this.queue.shift());\n            // TODO: if is live and current position > 1hr => clean all and restart\n        }\n    }\n\n    doCleanup() {\n        if (!this.cleanRanges.length) {\n            this.cleaning = false;\n            this.feedNext();\n            return;\n        }\n        let range = this.cleanRanges.shift();\n        Log.debug(`${this.codec} remove range [${range[0]} - ${range[1]}).\n                    \\nUpdating: ${this.sourceBuffer.updating}\n                    `);\n        this.cleaning = true;\n        this.sourceBuffer.remove(range[0], range[1]);\n    }\n\n    initCleanup() {\n        if (this.sourceBuffer.buffered.length && !this.sourceBuffer.updating && !this.cleaning) {\n            Log.debug(`${this.codec} cleanup`);\n            let removeBound = this.sourceBuffer.buffered.end(this.sourceBuffer.buffered.length-1) - 2;\n\n            for (let i=0; i< this.sourceBuffer.buffered.length; ++i) {\n                let removeStart = this.sourceBuffer.buffered.start(i);\n                let removeEnd = this.sourceBuffer.buffered.end(i);\n                if ((this.players[0].currentTime <= removeStart) || (removeBound <= removeStart)) continue;\n\n                if ((removeBound <= removeEnd) && (removeBound >= removeStart)) {\n                    Log.debug(`Clear [${removeStart}, ${removeBound}), leave [${removeBound}, ${removeEnd}]`);\n                    removeEnd = removeBound;\n                    if (removeEnd!=removeStart) {\n                        this.cleanRanges.push([removeStart, removeEnd]);\n                    }\n                    continue; // Do not cleanup buffered range after current position\n                }\n                this.cleanRanges.push([removeStart, removeEnd]);\n            }\n\n            this.doCleanup();\n\n            // let bufferStart = this.sourceBuffer.buffered.start(0);\n            // let removeEnd = this.sourceBuffer.buffered.start(0) + (this.sourceBuffer.buffered.end(0) - this.sourceBuffer.buffered.start(0))/2;\n            // if (this.players[0].currentTime < removeEnd) {\n            //     this.players[0].currentTime = removeEnd;\n            // }\n            // let removeEnd = Math.max(this.players[0].currentTime - 3, this.sourceBuffer.buffered.end(0) - 3);\n            //\n            // if (removeEnd < bufferStart) {\n            //     removeEnd = this.sourceBuffer.buffered.start(0) + (this.sourceBuffer.buffered.end(0) - this.sourceBuffer.buffered.start(0))/2;\n            //     if (this.players[0].currentTime < removeEnd) {\n            //         this.players[0].currentTime = removeEnd;\n            //     }\n            // }\n\n            // if (removeEnd > bufferStart && (removeEnd - bufferStart > 0.5 )) {\n            //     // try {\n            //         Log.debug(`${this.codec} remove range [${bufferStart} - ${removeEnd}).\n            //         \\nBuffered end: ${this.sourceBuffer.buffered.end(0)}\n            //         \\nUpdating: ${this.sourceBuffer.updating}\n            //         `);\n            //         this.cleaning = true;\n            //         this.sourceBuffer.remove(bufferStart, removeEnd);\n            //     // } catch (e) {\n            //     //     // TODO: implement\n            //     //     Log.error(e);\n            //     // }\n            // } else {\n            //     this.feedNext();\n            // }\n        } else {\n            this.feedNext();\n        }\n    }\n\n    doAppend(data) {\n        // console.log(MP4Inspect.mp4toJSON(data));\n        let err = this.players[0].error;\n        if (err) {\n            Log.error(`Error occured: ${MSE.ErrorNotes[err.code]}`);\n            try {\n                this.players.forEach((video)=>{video.stop();});\n                this.mediaSource.endOfStream();\n            } catch (e){\n\n            }\n            this.parent.eventSource.dispatchEvent('error');\n        } else {\n            try {\n                this.sourceBuffer.appendBuffer(data);\n            } catch (e) {\n                if (e.name === 'QuotaExceededError') {\n                    Log.debug(`${this.codec} quota fail`);\n                    this.queue.unshift(data);\n                    this.initCleanup();\n                    return;\n                }\n\n                // reconnect on fail\n                Log.error(`Error occured while appending buffer. ${e.name}: ${e.message}`);\n                this.parent.eventSource.dispatchEvent('error');\n            }\n        }\n\n    }\n\n    feed(data) {\n        this.queue = this.queue.concat(data);\n        // Log.debug(this.sourceBuffer.updating, this.updating, this.queue.length);\n        if (this.sourceBuffer && !this.sourceBuffer.updating && !this.cleaning) {\n            // Log.debug('enq feed');\n            this.feedNext();\n        }\n    }\n}\n\nexport class MSE {\n    // static CODEC_AVC_BASELINE = \"avc1.42E01E\";\n    // static CODEC_AVC_MAIN = \"avc1.4D401E\";\n    // static CODEC_AVC_HIGH = \"avc1.64001E\";\n    // static CODEC_VP8 = \"vp8\";\n    // static CODEC_AAC = \"mp4a.40.2\";\n    // static CODEC_VORBIS = \"vorbis\";\n    // static CODEC_THEORA = \"theora\";\n\n    static get ErrorNotes() {return  {\n        [MediaError.MEDIA_ERR_ABORTED]: 'fetching process aborted by user',\n        [MediaError.MEDIA_ERR_NETWORK]: 'error occurred when downloading',\n        [MediaError.MEDIA_ERR_DECODE]: 'error occurred when decoding',\n        [MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED]: 'audio/video not supported'\n    }};\n\n    static isSupported(codecs) {\n        return (window.MediaSource && window.MediaSource.isTypeSupported(`video/mp4; codecs=\"${codecs.join(',')}\"`));\n    }\n\n    constructor (players) {\n        this.players = players;\n        const playing = this.players.map((video, idx) => {\n            video.onplaying = function() {\n                playing[idx] = true;\n            };\n            video.onpause = function() {\n                playing[idx] = false;\n            };\n            return !video.paused;\n        });\n        this.playing = playing;\n        this.eventSource = new EventEmitter();\n        this.mediaSource = new MediaSource();\n        this.reset();\n    }\n\n    destroy() {\n        this.clear();\n        this.eventSource.destroy();\n    }\n\n    play() {\n        this.players.forEach((video, idx)=>{\n            if (video.paused && !this.playing[idx]) {\n                video.play();\n            }\n        });\n    }\n\n    setLive(is_live) {\n        for (let idx in this.buffers) {\n            this.buffers[idx].setLive(is_live);\n        }\n        this.is_live = is_live;\n    }\n\n    resetBuffers() {\n        this.players.forEach((video)=>{\n            if (!video.paused && this.playing[idx]) {\n                video.pause();\n            }\n            video.currentTime = 0;\n        });\n\n        let promises = [];\n        for (let buffer of this.buffers.values()) {\n            promises.push(buffer.clear());\n        }\n        return Promise.all(promises).then(()=>{\n            this.mediaSource.endOfStream();\n            this.mediaSource.duration = 0;\n            this.mediaSource.clearLiveSeekableRange();\n            this.play();\n        });\n    }\n\n    clear() {\n        for (let track in this.buffers) {\n            this.buffers[track].destroy();\n            delete this.buffers[track];\n        }\n        if (this.mediaSource.readyState === 'open') {\n            this.mediaSource.duration = 0;\n            this.mediaSource.endOfStream();\n        }\n        this.players.forEach((video)=>{video.src = URL.createObjectURL(this.mediaSource)});\n\n        return this.setupEvents();\n    }\n\n    setupEvents() {\n        if (this._sourceOpen) this.mediaSource.removeEventListener('sourceopen', this._sourceOpen);\n        if (this._sourceEnded) this.mediaSource.removeEventListener('sourceended', this._sourceEnded);\n        if (this._sourceClose) this.mediaSource.removeEventListener('sourceclose', this._sourceClose);\n        this.resolved = false;\n        this.mediaReady = new Promise((resolve, reject)=> {\n            this._sourceOpen = ()=> {\n                Log.debug(`Media source opened: ${this.mediaSource.readyState}`);\n                if (!this.resolved) {\n                    this.resolved = true;\n                    resolve();\n                }\n            };\n            this._sourceEnded = ()=>{\n                Log.debug(`Media source ended: ${this.mediaSource.readyState}`);\n            };\n            this._sourceClose = ()=>{\n                Log.debug(`Media source closed: ${this.mediaSource.readyState}`);\n                if (this.resolved) {\n                    this.eventSource.dispatchEvent('sourceclose');\n                }\n            };\n            this.mediaSource.addEventListener('sourceopen', this._sourceOpen);\n            this.mediaSource.addEventListener('sourceended', this._sourceEnded);\n            this.mediaSource.addEventListener('sourceclose', this._sourceClose);\n        });\n        return this.mediaReady;\n    }\n\n    reset() {\n        this.updating = false;\n        this.resolved = false;\n        this.buffers = {};\n        // this.players.forEach((video)=>{video.src = URL.createObjectURL(this.mediaSource)});\n        // TODO: remove event listeners for existing media source\n        // this.setupEvents();\n        // this.clear();\n    }\n\n    setCodec(track, mimeCodec) {\n        return this.mediaReady.then(()=>{\n            this.buffers[track] = new Buffer(this, mimeCodec);\n            this.buffers[track].setLive(this.is_live);\n        });\n    }\n\n    feed(track, data) {\n        if (this.buffers[track]) {\n            this.buffers[track].feed(data);\n        }\n    }\n}","import {getTagged} from 'bp_logger';\nconst Log = getTagged('remuxer:base');\nlet track_id = 1;\nexport class BaseRemuxer {\n\n    static get MP4_TIMESCALE() { return 90000;}\n\n    // TODO: move to ts parser\n    // static PTSNormalize(value, reference) {\n    //\n    //     let offset;\n    //     if (reference === undefined) {\n    //         return value;\n    //     }\n    //     if (reference < value) {\n    //         // - 2^33\n    //         offset = -8589934592;\n    //     } else {\n    //         // + 2^33\n    //         offset = 8589934592;\n    //     }\n    //     /* PTS is 33bit (from 0 to 2^33 -1)\n    //      if diff between value and reference is bigger than half of the amplitude (2^32) then it means that\n    //      PTS looping occured. fill the gap */\n    //     while (Math.abs(value - reference) > 4294967296) {\n    //         value += offset;\n    //     }\n    //     return value;\n    // }\n\n    static getTrackID() {\n        return track_id++;\n    }\n\n    constructor(timescale, scaleFactor, params) {\n        this.timeOffset = 0;\n        this.timescale = timescale;\n        this.scaleFactor = scaleFactor;\n        this.readyToDecode = false;\n        this.samples = [];\n        this.seq = 1;\n        this.tsAlign = 1;\n    }\n\n    shifted(timestamp) {\n        return timestamp - this.timeOffset;\n    }\n\n    scaled(timestamp) {\n        return timestamp / this.scaleFactor;\n    }\n\n    unscaled(timestamp) {\n        return timestamp * this.scaleFactor;\n    }\n\n    remux(unit) {\n        if (unit && this.timeOffset >= 0) {\n            this.samples.push({\n                unit: unit,\n                pts: this.shifted(unit.pts),\n                dts: this.shifted(unit.dts)\n            });\n            return true;\n        }\n        return false;\n    }\n\n    static toMS(timestamp) {\n        return timestamp/90;\n    }\n    \n    setConfig(config) {\n        \n    }\n\n    insertDscontinuity() {\n        this.samples.push(null);\n    }\n\n    init(initPTS, initDTS, shouldInitialize=true) {\n        this.initPTS = Math.min(initPTS, this.samples[0].dts - this.unscaled(this.timeOffset));\n        this.initDTS = Math.min(initDTS, this.samples[0].dts - this.unscaled(this.timeOffset));\n        Log.debug(`Initial pts=${this.initPTS} dts=${this.initDTS}`);\n        this.initialized = shouldInitialize;\n    }\n\n    flush() {\n        this.seq++;\n        this.mp4track.len = 0;\n        this.mp4track.samples = [];\n    }\n\n    getPayloadBase(sampleFunction, setupSample) {\n        if (!this.readyToDecode || !this.initialized || !this.samples.length) return null;\n        this.samples.sort(function(a, b) {\n            return (a.dts-b.dts);\n        });\n        return true;\n\n        let payload = new Uint8Array(this.mp4track.len);\n        let offset = 0;\n        let samples=this.mp4track.samples;\n        let mp4Sample, lastDTS, pts, dts;\n\n        while (this.samples.length) {\n            let sample = this.samples.shift();\n            if (sample === null) {\n                // discontinuity\n                this.nextDts = undefined;\n                break;\n            }\n\n            let unit = sample.unit;\n\n            pts = Math.round((sample.pts - this.initDTS)/this.tsAlign)*this.tsAlign;\n            dts = Math.round((sample.dts - this.initDTS)/this.tsAlign)*this.tsAlign;\n            // ensure DTS is not bigger than PTS\n            dts = Math.min(pts, dts);\n\n            // sampleFunction(pts, dts);   // TODO:\n\n            // mp4Sample = setupSample(unit, pts, dts);    // TODO:\n\n            payload.set(unit.getData(), offset);\n            offset += unit.getSize();\n\n            samples.push(mp4Sample);\n            lastDTS = dts;\n        }\n        if (!samples.length) return null;\n\n        // samplesPostFunction(samples); // TODO:\n\n        return new Uint8Array(payload.buffer, 0, this.mp4track.len);\n    }\n}","import {AACAsm} from '../elementary/AACAsm';\nimport {AACFrame} from '../elementary/AACFrame';\nimport {MSE} from '../presentation/mse';\nimport {BaseRemuxer} from './base';\nimport {BitArray, hexToByteArray, bitSlice} from '../util/binary';\nimport {getTagged} from 'bp_logger';\n\nconst Log = getTagged(\"remuxer:aac\");\n// TODO: asm.js\nexport class AACRemuxer extends BaseRemuxer {\n\n    constructor(timescale, scaleFactor = 1, params={}) {\n        super(timescale, scaleFactor);\n\n        this.codecstring=MSE.CODEC_AAC;\n        this.units = [];\n        this.initDTS = undefined;\n        this.nextAacPts = undefined;\n        this.lastPts = 0;\n        this.firstDTS = 0;\n        this.firstPTS = 0;\n        this.duration = params.duration || 1;\n        this.initialized = false;\n\n        this.mp4track={\n            id:BaseRemuxer.getTrackID(),\n            type: 'audio',\n            fragmented:true,\n            channelCount:0,\n            audiosamplerate: this.timescale,\n            duration: 0,\n            timescale: this.timescale,\n            volume: 1,\n            samples: [],\n            config: '',\n            len: 0\n        };\n        if (params.config) {\n            this.setConfig(params.config);\n        }\n    }\n\n    setConfig(config) {\n        this.mp4track.channelCount = config.channels;\n        this.mp4track.audiosamplerate = config.samplerate;\n        if (!this.mp4track.duration) {\n            this.mp4track.duration = (this.duration?this.duration:1)*config.samplerate;\n        }\n        this.mp4track.timescale = config.samplerate;\n        this.mp4track.config = config.config;\n        this.mp4track.codec = config.codec;\n        this.timescale = config.samplerate;\n        this.scaleFactor = BaseRemuxer.MP4_TIMESCALE / config.samplerate;\n        this.expectedSampleDuration = 1024 * this.scaleFactor;\n        this.readyToDecode = true;\n    }\n\n    remux(aac) {\n        if (super.remux.call(this, aac)) {\n            this.mp4track.len += aac.getSize();\n        }\n    }\n    \n    getPayload() {\n        if (!this.readyToDecode || !this.samples.length) return null;\n        this.samples.sort(function(a, b) {\n            return (a.dts-b.dts);\n        });\n\n        let payload = new Uint8Array(this.mp4track.len);\n        let offset = 0;\n        let samples=this.mp4track.samples;\n        let mp4Sample, lastDTS, pts, dts;\n\n        while (this.samples.length) {\n            let sample = this.samples.shift();\n            if (sample === null) {\n                // discontinuity\n                this.nextDts = undefined;\n                break;\n            }\n            let unit = sample.unit;\n            pts = sample.pts - this.initDTS;\n            dts = sample.dts - this.initDTS;\n\n            if (lastDTS === undefined) {\n                if (this.nextDts) {\n                    let delta = Math.round(this.scaled(pts - this.nextAacPts));\n                    // if fragment are contiguous, or delta less than 600ms, ensure there is no overlap/hole between fragments\n                    if (/*contiguous || */Math.abs(delta) < 600) {\n                        // log delta\n                        if (delta) {\n                            if (delta > 0) {\n                                Log.log(`${delta} ms hole between AAC samples detected,filling it`);\n                                // if we have frame overlap, overlapping for more than half a frame duraion\n                            } else if (delta < -12) {\n                                // drop overlapping audio frames... browser will deal with it\n                                Log.log(`${(-delta)} ms overlapping between AAC samples detected, drop frame`);\n                                this.mp4track.len -= unit.getSize();\n                                continue;\n                            }\n                            // set DTS to next DTS\n                            pts = dts = this.nextAacPts;\n                        }\n                    }\n                }\n                // remember first PTS of our aacSamples, ensure value is positive\n                this.firstDTS = Math.max(0, dts);\n            }\n\n            mp4Sample = {\n                size: unit.getSize(),\n                cts: 0,\n                duration:1024,\n                flags: {\n                    isLeading: 0,\n                    isDependedOn: 0,\n                    hasRedundancy: 0,\n                    degradPrio: 0,\n                    dependsOn: 1\n                }\n            };\n\n            payload.set(unit.getData(), offset);\n            offset += unit.getSize();\n            samples.push(mp4Sample);\n            lastDTS = dts;\n        }\n        if (!samples.length) return null;\n        this.nextDts =pts+this.expectedSampleDuration;\n        return new Uint8Array(payload.buffer, 0, this.mp4track.len);\n    }\n}\n//test.bundle.js:42 [remuxer:h264] skip frame from the past at DTS=18397972271140676 with expected DTS=18397998040950484","import {appendByteArray} from '../util/binary';\n\nexport class NALU {\n\n    static get NDR() {return 1;}\n    static get IDR() {return 5;}\n    static get SEI() {return 6;}\n    static get SPS() {return 7;}\n    static get PPS() {return 8;}\n\n    static get TYPES() {return {\n        [NALU.IDR]: 'IDR',\n        [NALU.SEI]: 'SEI',\n        [NALU.SPS]: 'SPS',\n        [NALU.PPS]: 'PPS',\n        [NALU.NDR]: 'NDR'\n    }};\n\n    static type(nalu) {\n        if (nalu.ntype in NALU.TYPES) {\n            return NALU.TYPES[nalu.ntype];\n        } else {\n            return 'UNKNOWN';\n        }\n    }\n\n    constructor(ntype, nri, data, dts, pts) {\n\n        this.data = data;\n        this.ntype = ntype;\n        this.nri = nri;\n        this.dts = dts;\n        this.pts = pts ? pts : this.dts;\n\n    }\n\n    appendData(idata) {\n        this.data = appendByteArray(this.data, idata);\n    }\n\n    type() {\n        return this.ntype;\n    }\n\n    isKeyframe() {\n        return this.ntype == NALU.IDR;\n    }\n\n    getSize() {\n        return 4 + 1 + this.data.byteLength;\n    }\n\n    getData() {\n        let header = new Uint8Array(5 + this.data.byteLength);\n        let view = new DataView(header.buffer);\n        view.setUint32(0, this.data.byteLength + 1);\n        view.setUint8(4, (0x0 & 0x80) | (this.nri & 0x60) | (this.ntype & 0x1F));\n        header.set(this.data, 5);\n        return header;\n    }\n}\n","import {NALU} from './NALU';\nimport {Log} from 'bp_logger';\n// TODO: asm.js\nexport class NALUAsm {\n    static get NALTYPE_FU_A() {return 28;}\n    static get NALTYPE_FU_B() {return 29;}\n\n    constructor() {\n        this.nalu = null;\n    }\n\n    onNALUFragment(rawData, dts, pts) {\n\n        var data = new DataView(rawData.buffer, rawData.byteOffset, rawData.byteLength);\n\n        var nalhdr = data.getUint8(0);\n\n        var nri = nalhdr & 0x60;\n        var naltype = nalhdr & 0x1F;\n        var nal_start_idx = 1;\n\n        if (27 >= naltype && 0 < naltype) {\n            /* This RTP package is a single NALU, dispatch and forget, 0 is undefined */\n            return new NALU(naltype, nri, rawData.subarray(nal_start_idx), dts, pts);\n            //return;\n        }\n\n        if (NALUAsm.NALTYPE_FU_A !== naltype && NALUAsm.NALTYPE_FU_B !== naltype) {\n            /* 30 - 31 is undefined, ignore those (RFC3984). */\n            Log.log('Undefined NAL unit, type: ' + naltype);\n            return null;\n        }\n        nal_start_idx++;\n\n        var nalfrag = data.getUint8(1);\n        var nfstart = (nalfrag & 0x80) >>> 7;\n        var nfend = (nalfrag & 0x40) >>> 6;\n        var nftype = nalfrag & 0x1F;\n\n        var nfdon = 0;\n        if (NALUAsm.NALTYPE_FU_B === naltype) {\n            nfdon = data.getUint16(2);\n            nal_start_idx+=2;\n        }\n\n        if (null === this.nalu || nfstart) {\n            if (!nfstart) {\n                console.log('broken chunk (continuation of lost frame)');\n                return null;\n            }  // Ignore broken chunks\n\n            /* Create a new NAL unit from multiple fragmented NAL units */\n            this.nalu = new NALU(nftype, nri, rawData.subarray(nal_start_idx), dts, pts);\n        } else {\n            if (this.nalu.dts != dts) {\n                // debugger;\n                // Frames lost\n                console.log('broken chunk (continuation of frame with other timestamp)');\n                this.nalu = null;\n                return null;\n            }\n            /* We've already created the NAL unit, append current data */\n            this.nalu.appendData(rawData.subarray(nal_start_idx));\n        }\n\n        if (1 === nfend) {\n            let ret = this.nalu;\n            this.nalu = null;\n            return ret;\n        }\n    }\n}\n","/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding scheme used by h264.\n*/\n// TODO: asm.js\nimport {Log as logger} from 'bp_logger';\n\nexport class ExpGolomb {\n\n  constructor(data) {\n    this.data = data;\n    // the number of bytes left to examine in this.data\n    this.bytesAvailable = this.data.byteLength;\n    // the current word being examined\n    this.word = 0; // :uint\n    // the number of bits left to examine in the current word\n    this.bitsAvailable = 0; // :uint\n  }\n\n  // ():void\n  loadWord() {\n    var\n      position = this.data.byteLength - this.bytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, this.bytesAvailable);\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n    workingBytes.set(this.data.subarray(position, position + availableBytes));\n    this.word = new DataView(workingBytes.buffer, workingBytes.byteOffset, workingBytes.byteLength).getUint32(0);\n    // track the amount of this.data that has been processed\n    this.bitsAvailable = availableBytes * 8;\n    this.bytesAvailable -= availableBytes;\n  }\n\n  // (count:int):void\n  skipBits(count) {\n    var skipBytes; // :int\n    if (this.bitsAvailable > count) {\n      this.word <<= count;\n      this.bitsAvailable -= count;\n    } else {\n      count -= this.bitsAvailable;\n      skipBytes = count >> 3;\n      count -= (skipBytes >> 3);\n      this.bytesAvailable -= skipBytes;\n      this.loadWord();\n      this.word <<= count;\n      this.bitsAvailable -= count;\n    }\n  }\n\n  // (size:int):uint\n  readBits(size) {\n    var\n      bits = Math.min(this.bitsAvailable, size), // :uint\n      valu = this.word >>> (32 - bits); // :uint\n    if (size > 32) {\n      logger.error('Cannot read more than 32 bits at a time');\n    }\n    this.bitsAvailable -= bits;\n    if (this.bitsAvailable > 0) {\n      this.word <<= bits;\n    } else if (this.bytesAvailable > 0) {\n      this.loadWord();\n    }\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    } else {\n      return valu;\n    }\n  }\n\n  // ():uint\n  skipLZ() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < this.bitsAvailable; ++leadingZeroCount) {\n      if (0 !== (this.word & (0x80000000 >>> leadingZeroCount))) {\n        // the first bit of working word is 1\n        this.word <<= leadingZeroCount;\n        this.bitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n    // we exhausted word and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLZ();\n  }\n\n  // ():void\n  skipUEG() {\n    this.skipBits(1 + this.skipLZ());\n  }\n\n  // ():void\n  skipEG() {\n    this.skipBits(1 + this.skipLZ());\n  }\n\n  // ():uint\n  readUEG() {\n    var clz = this.skipLZ(); // :uint\n    return this.readBits(clz + 1) - 1;\n  }\n\n  // ():int\n  readEG() {\n    var valu = this.readUEG(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    } else {\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }\n  }\n\n  // Some convenience functions\n  // :Boolean\n  readBoolean() {\n    return 1 === this.readBits(1);\n  }\n\n  // ():int\n  readUByte() {\n    return this.readBits(8);\n  }\n\n  // ():int\n  readUShort() {\n    return this.readBits(16);\n  }\n    // ():int\n  readUInt() {\n    return this.readBits(32);\n  }  \n}\n","import {ExpGolomb} from '../util/exp-golomb';\nimport {NALU} from '../elementary/NALU';\n\nexport class H264Parser {\n\n    constructor(remuxer) {\n        this.remuxer = remuxer;\n        this.track = remuxer.mp4track;\n    }\n\n    msToScaled(timestamp) {\n        return (timestamp - this.remuxer.timeOffset) * this.remuxer.scaleFactor;\n    }\n\n    parseSPS(sps) {\n        var config = H264Parser.readSPS(new Uint8Array(sps));\n\n        this.track.width = config.width;\n        this.track.height = config.height;\n        this.track.sps = [new Uint8Array(sps)];\n        // this.track.timescale = this.remuxer.timescale;\n        // this.track.duration = this.remuxer.timescale; // TODO: extract duration for non-live client\n        this.track.codec = 'avc1.';\n\n        let codecarray = new DataView(sps.buffer, sps.byteOffset+1, 4);\n        for (let i = 0; i < 3; ++i) {\n            var h = codecarray.getUint8(i).toString(16);\n            if (h.length < 2) {\n                h = '0' + h;\n            }\n            this.track.codec  += h;\n        }\n    }\n\n    parsePPS(pps) {\n        this.track.pps = [new Uint8Array(pps)];\n    }\n\n    parseNAL(unit) {\n        if (!unit) return false;\n        \n        let push = false;\n        switch (unit.type()) {\n            case NALU.NDR:\n                push = true;\n                break;\n            case NALU.IDR:\n                push = true;\n                break;\n            case NALU.PPS:\n                if (!this.track.pps) {\n                    this.parsePPS(unit.getData().subarray(4));\n                    if (!this.remuxer.readyToDecode && this.track.pps && this.track.sps) {\n                        this.remuxer.readyToDecode = true;\n                    }\n                }\n                break;\n            case NALU.SPS:\n                if(!this.track.sps) {\n                    this.parseSPS(unit.getData().subarray(4));\n                    if (!this.remuxer.readyToDecode && this.track.pps && this.track.sps) {\n                        this.remuxer.readyToDecode = true;\n                    }\n                }\n                break;\n            case NALU.SEI:\n                // console.log('SEI');\n                break;\n            default:\n        }\n        return push;\n    }\n\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param decoder {ExpGolomb} exp golomb decoder\n     * @param count {number} the number of entries in this scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n    static skipScalingList(decoder, count) {\n        let lastScale = 8,\n            nextScale = 8,\n            deltaScale;\n        for (let j = 0; j < count; j++) {\n            if (nextScale !== 0) {\n                deltaScale = decoder.readEG();\n                nextScale = (lastScale + deltaScale + 256) % 256;\n            }\n            lastScale = (nextScale === 0) ? lastScale : nextScale;\n        }\n    }\n\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n    static readSPS(data) {\n        let decoder = new ExpGolomb(data);\n        let frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            profileIdc,profileCompat,levelIdc,\n            numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount;\n        decoder.readUByte();\n        profileIdc = decoder.readUByte(); // profile_idc\n        profileCompat = decoder.readBits(5); // constraint_set[0-4]_flag, u(5)\n        decoder.skipBits(3); // reserved_zero_3bits u(3),\n        levelIdc = decoder.readUByte(); //level_idc u(8)\n        decoder.skipUEG(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n        if (profileIdc === 100 ||\n            profileIdc === 110 ||\n            profileIdc === 122 ||\n            profileIdc === 244 ||\n            profileIdc === 44  ||\n            profileIdc === 83  ||\n            profileIdc === 86  ||\n            profileIdc === 118 ||\n            profileIdc === 128) {\n            var chromaFormatIdc = decoder.readUEG();\n            if (chromaFormatIdc === 3) {\n                decoder.skipBits(1); // separate_colour_plane_flag\n            }\n            decoder.skipUEG(); // bit_depth_luma_minus8\n            decoder.skipUEG(); // bit_depth_chroma_minus8\n            decoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n            if (decoder.readBoolean()) { // seq_scaling_matrix_present_flag\n                scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n                for (let i = 0; i < scalingListCount; ++i) {\n                    if (decoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n                        if (i < 6) {\n                            H264Parser.skipScalingList(decoder, 16);\n                        } else {\n                            H264Parser.skipScalingList(decoder, 64);\n                        }\n                    }\n                }\n            }\n        }\n        decoder.skipUEG(); // log2_max_frame_num_minus4\n        var picOrderCntType = decoder.readUEG();\n        if (picOrderCntType === 0) {\n            decoder.readUEG(); //log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n            decoder.skipBits(1); // delta_pic_order_always_zero_flag\n            decoder.skipEG(); // offset_for_non_ref_pic\n            decoder.skipEG(); // offset_for_top_to_bottom_field\n            numRefFramesInPicOrderCntCycle = decoder.readUEG();\n            for(let i = 0; i < numRefFramesInPicOrderCntCycle; ++i) {\n                decoder.skipEG(); // offset_for_ref_frame[ i ]\n            }\n        }\n        decoder.skipUEG(); // max_num_ref_frames\n        decoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n        picWidthInMbsMinus1 = decoder.readUEG();\n        picHeightInMapUnitsMinus1 = decoder.readUEG();\n        frameMbsOnlyFlag = decoder.readBits(1);\n        if (frameMbsOnlyFlag === 0) {\n            decoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n        decoder.skipBits(1); // direct_8x8_inference_flag\n        if (decoder.readBoolean()) { // frame_cropping_flag\n            frameCropLeftOffset = decoder.readUEG();\n            frameCropRightOffset = decoder.readUEG();\n            frameCropTopOffset = decoder.readUEG();\n            frameCropBottomOffset = decoder.readUEG();\n        }\n        if (decoder.readBoolean()) {\n            // vui_parameters_present_flag\n            if (decoder.readBoolean()) {\n                // aspect_ratio_info_present_flag\n                let sarRatio;\n                const aspectRatioIdc = decoder.readUByte();\n                switch (aspectRatioIdc) {\n                    case 1: sarRatio = [1,1]; break;\n                    case 2: sarRatio = [12,11]; break;\n                    case 3: sarRatio = [10,11]; break;\n                    case 4: sarRatio = [16,11]; break;\n                    case 5: sarRatio = [40,33]; break;\n                    case 6: sarRatio = [24,11]; break;\n                    case 7: sarRatio = [20,11]; break;\n                    case 8: sarRatio = [32,11]; break;\n                    case 9: sarRatio = [80,33]; break;\n                    case 10: sarRatio = [18,11]; break;\n                    case 11: sarRatio = [15,11]; break;\n                    case 12: sarRatio = [64,33]; break;\n                    case 13: sarRatio = [160,99]; break;\n                    case 14: sarRatio = [4,3]; break;\n                    case 15: sarRatio = [3,2]; break;\n                    case 16: sarRatio = [2,1]; break;\n                    case 255: {\n                        sarRatio = [decoder.readUByte() << 8 | decoder.readUByte(), decoder.readUByte() << 8 | decoder.readUByte()];\n                        break;\n                    }\n                }\n                if (sarRatio) {\n                    sarScale = sarRatio[0] / sarRatio[1];\n                }\n            }\n            if (decoder.readBoolean()) {decoder.skipBits(1);}\n\n            if (decoder.readBoolean()) {\n                decoder.skipBits(4);\n                if (decoder.readBoolean()) {\n                    decoder.skipBits(24);\n                }\n            }\n            if (decoder.readBoolean()) {\n                decoder.skipUEG();\n                decoder.skipUEG();\n            }\n            if (decoder.readBoolean()) {\n                let unitsInTick = decoder.readUInt();\n                let timeScale = decoder.readUInt();\n                let fixedFrameRate = decoder.readBoolean();\n                let frameDuration = timeScale/(2*unitsInTick);\n                console.log(`timescale: ${timeScale}; unitsInTick: ${unitsInTick}; fixedFramerate: ${fixedFrameRate}; avgFrameDuration: ${frameDuration}`);\n            }\n        }\n        return {\n            width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n            height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - ((frameMbsOnlyFlag? 2 : 4) * (frameCropTopOffset + frameCropBottomOffset))\n        };\n    }\n\n    static readSliceType(decoder) {\n        // skip NALu type\n        decoder.readUByte();\n        // discard first_mb_in_slice\n        decoder.readUEG();\n        // return slice_type\n        return decoder.readUEG();\n    }\n}","import {NALUAsm} from '../elementary/NALUAsm';\nimport {H264Parser} from '../parsers/h264';\nimport {base64ToArrayBuffer} from '../util/binary';\nimport {BaseRemuxer} from './base';\nimport {getTagged} from 'bp_logger';\n\nconst Log = getTagged(\"remuxer:h264\"); \n// TODO: asm.js\nexport class H264Remuxer extends BaseRemuxer {\n\n    constructor(timescale, scaleFactor=1, params={}) {\n        super(timescale, scaleFactor);\n\n        this.nextDts = undefined;\n        this.readyToDecode = false;\n        this.initialized = false;\n\n        this.firstDTS=0;\n        this.firstPTS=0;\n        this.lastDTS=undefined;\n        this.lastSampleDuration = 0;\n        this.lastDurations = [];\n        // this.timescale = 90000;\n        this.tsAlign = Math.round(this.timescale/60);\n\n        this.mp4track={\n            id:BaseRemuxer.getTrackID(),\n            type: 'video',\n            len:0,\n            fragmented:true,\n            sps:'',\n            pps:'',\n            width:0,\n            height:0,\n            timescale: timescale,\n            duration: timescale,\n            samples: []\n        };\n        this.samples = [];\n\n        this.h264 = new H264Parser(this);\n\n        if (params.sps) {\n            this.setSPS(new Uint8Array(params.sps));\n        }\n        if (params.pps) {\n            this.setPPS(new Uint8Array(params.pps));\n        }\n\n        if (this.mp4track.pps && this.mp4track.sps) {\n            this.readyToDecode = true;\n        }\n    }\n\n    _scaled(timestamp) {\n        return timestamp >>> this.scaleFactor;\n    }\n\n    _unscaled(timestamp) {\n        return timestamp << this.scaleFactor;\n    }\n\n    setSPS(sps) {\n        this.h264.parseSPS(sps);\n    }\n\n    setPPS(pps) {\n        this.h264.parsePPS(pps);\n    }\n\n    remux(nalu) {\n        if (this.h264.parseNAL(nalu) && super.remux.call(this, nalu)) {\n            this.mp4track.len += nalu.getSize();\n        }\n    }\n\n    getPayload() {\n        if (!this.getPayloadBase()) {\n            return null;\n        }\n\n        let payload = new Uint8Array(this.mp4track.len);\n        let offset = 0;\n        let samples=this.mp4track.samples;\n        let mp4Sample, lastDTS, pts, dts;\n\n\n        // Log.debug(this.samples.map((e)=>{\n        //     return Math.round((e.dts - this.initDTS));\n        // }));\n\n        // let minDuration = Number.MAX_SAFE_INTEGER;\n        while (this.samples.length) {\n            let sample = this.samples.shift();\n            if (sample === null) {\n                // discontinuity\n                this.nextDts = undefined;\n                break;\n            }\n\n            let unit = sample.unit;\n            \n            pts = /*Math.round(*/(sample.pts - this.initDTS)/*/this.tsAlign)*this.tsAlign*/;\n            dts = /*Math.round(*/(sample.dts - this.initDTS)/*/this.tsAlign)*this.tsAlign*/;\n            // ensure DTS is not bigger than PTS\n            dts = Math.min(pts,dts);\n\n            // if not first AVC sample of video track, normalize PTS/DTS with previous sample value\n            // and ensure that sample duration is positive\n            if (lastDTS !== undefined) {\n                let sampleDuration = this.scaled(dts - lastDTS);\n                // Log.debug(`Sample duration: ${sampleDuration}`);\n                if (sampleDuration <= 0) {\n                    Log.log(`invalid AVC sample duration at PTS/DTS: ${pts}/${dts}|lastDTS: ${lastDTS}:${sampleDuration}`);\n                    this.mp4track.len -= unit.getSize();\n                    continue;\n                }\n                // minDuration = Math.min(sampleDuration, minDuration);\n                this.lastDurations.push(sampleDuration);\n                if (this.lastDurations.length > 100) {\n                    this.lastDurations.shift();\n                }\n                mp4Sample.duration = sampleDuration;\n            } else {\n                if (this.nextDts) {\n                    let delta = dts - this.nextDts;\n                    // if fragment are contiguous, or delta less than 600ms, ensure there is no overlap/hole between fragments\n                    if (/*contiguous ||*/ Math.abs(Math.round(BaseRemuxer.toMS(delta))) < 600) {\n\n                        if (delta) {\n                            // set DTS to next DTS\n                            // Log.debug(`Video/PTS/DTS adjusted: ${pts}->${Math.max(pts - delta, this.nextDts)}/${dts}->${this.nextDts},delta:${delta}`);\n                            dts = this.nextDts;\n                            // offset PTS as well, ensure that PTS is smaller or equal than new DTS\n                            pts = Math.max(pts - delta, dts);\n                        }\n                    } else {\n                        if (delta < 0) {\n                            Log.log(`skip frame from the past at DTS=${dts} with expected DTS=${this.nextDts}`);\n                            this.mp4track.len -= unit.getSize();\n                            continue;\n                        }\n                    }\n                }\n                // remember first DTS of our avcSamples, ensure value is positive\n                this.firstDTS = Math.max(0, dts);\n            }\n\n            mp4Sample = {\n                size: unit.getSize(),\n                duration: 0,\n                cts: this.scaled(pts - dts),\n                flags: {\n                    isLeading: 0,\n                    isDependedOn: 0,\n                    hasRedundancy: 0,\n                    degradPrio: 0\n                }\n            };\n            let flags = mp4Sample.flags;\n            if (sample.unit.isKeyframe() === true) {\n                // the current sample is a key frame\n                flags.dependsOn = 2;\n                flags.isNonSync = 0;\n            } else {\n                flags.dependsOn = 1;\n                flags.isNonSync = 1;\n            }\n\n            payload.set(unit.getData(), offset);\n            offset += unit.getSize();\n\n            samples.push(mp4Sample);\n            lastDTS = dts;\n        }\n\n        if (!samples.length) return null;\n\n        let avgDuration = this.lastDurations.reduce(function(a, b) { return (a|0) + (b|0); }, 0) / (this.lastDurations.length||1)|0;\n        if (samples.length >= 2) {\n            this.lastSampleDuration = avgDuration;\n            mp4Sample.duration = avgDuration;\n        } else {\n            mp4Sample.duration = this.lastSampleDuration;\n        }\n\n        if(samples.length && (!this.nextDts /*|| navigator.userAgent.toLowerCase().indexOf('chrome') > -1*/)) {\n            let flags = samples[0].flags;\n            // chrome workaround, mark first sample as being a Random Access Point to avoid sourcebuffer append issue\n            // https://code.google.com/p/chromium/issues/detail?id=229412\n            flags.dependsOn = 2;\n            flags.isNonSync = 0;\n        }\n\n        // next AVC sample DTS should be equal to last sample DTS + last sample duration\n        this.nextDts = dts + this.unscaled(this.lastSampleDuration);\n        // Log.debug(`next dts: ${this.nextDts}, last duration: ${this.lastSampleDuration}, last dts: ${dts}`);\n\n        return new Uint8Array(payload.buffer, 0, this.mp4track.len);\n    }\n}","export class StreamType {\n    static get VIDEO() {return 1;}\n    static get AUDIO() {return 2;}\n\n    static get map() {return {\n        [StreamType.VIDEO]: 'video',\n        [StreamType.AUDIO]: 'audio'\n    }};\n}\n\nexport class PayloadType {\n    static get H264() {return 1;}\n    static get AAC() {return 2;}\n\n    static get map() {return {\n        [PayloadType.H264]: 'video',\n        [PayloadType.AAC]: 'audio'\n    }};\n\n    static get string_map() {return  {\n        H264: PayloadType.H264,\n        AAC: PayloadType.AAC,\n        'MP4A-LATM': PayloadType.AAC,\n        'MPEG4-GENERIC': PayloadType.AAC\n    }}\n}","import {MP4} from '../iso-bmff/mp4-generator';\nimport {AACRemuxer} from './aac';\nimport {H264Remuxer} from './h264';\nimport {MSE} from '../presentation/mse';\nimport {EventEmitter} from 'bp_event';\nimport {PayloadType} from \"../defs\";\n\nimport {getTagged} from \"bp_logger\";\n\nconst LOG_TAG = \"remuxer\";\nconst Log = getTagged(LOG_TAG);\n\nexport class Remuxer {\n    static get TrackConverters() {return {\n        [PayloadType.H264]: H264Remuxer,\n        [PayloadType.AAC]:  AACRemuxer\n    }};\n\n    static get TrackScaleFactor() {return {\n        [PayloadType.H264]: 1,//4,\n        [PayloadType.AAC]:  0\n    }};\n\n    static get TrackTimescale() {return {\n        [PayloadType.H264]: 90000,//22500,\n        [PayloadType.AAC]:  0\n    }};\n\n    constructor(mediaElement) {\n        this.mse = new MSE([mediaElement]);\n        this.eventSource = new EventEmitter();\n        this.mse_ready = true;\n\n        this.reset();\n\n        this.errorListener = this.mseClose.bind(this);\n        this.closeListener = this.mseClose.bind(this);\n        this.samplesListener = this.onSamples.bind(this);\n        this.audioConfigListener = this.onAudioConfig.bind(this);\n\n        this.mse.eventSource.addEventListener('error', this.errorListener);\n        this.mse.eventSource.addEventListener('sourceclose', this.closeListener);\n        \n        this.eventSource.addEventListener('ready', this.init.bind(this));\n    }\n\n    reset() {\n        this.tracks = {};\n        this.initialized = false;\n        this.initSegments = {};\n        this.codecs = [];\n        this.streams = {};\n        this.enabled = false;\n    }\n\n    destroy() {\n        this.mse.destroy();\n        this.mse = null;\n\n        this.detachClient();\n\n        this.eventSource.destroy();\n    }\n\n    onTracks(tracks) {\n        Log.debug(tracks.detail);\n        // store available track types\n        for (let track of tracks.detail) {\n            this.tracks[track.type] = new Remuxer.TrackConverters[track.type](Remuxer.TrackTimescale[track.type], Remuxer.TrackScaleFactor[track.type], track.params);\n            if (track.offset) {\n                this.tracks[track.type].timeOffset = track.offset;\n            }\n            if (track.duration) {\n                this.tracks[track.type].mp4track.duration = track.duration*(this.tracks[track.type].timescale || Remuxer.TrackTimescale[track.type]);\n                this.tracks[track.type].duration = track.duration;\n            } else {\n                this.tracks[track.type].duration = 1;\n            }\n\n            // this.tracks[track.type].duration\n        }\n        this.mse.setLive(!this.client.seekable);\n    }\n\n    setTimeOffset(timeOffset, track) {\n        if (this.tracks[track.type]) {\n            this.tracks[track.type].timeOffset = timeOffset;///this.tracks[track.type].scaleFactor;\n        }\n    }\n\n    init() {\n        let tracks = [];\n        this.codecs = [];\n        let initmse = [];\n        let initPts = Infinity;\n        let initDts = Infinity;\n        for (let track_type in this.tracks) {\n            let track = this.tracks[track_type];\n            if (!MSE.isSupported([track.mp4track.codec])) {\n                throw new Error(`${track.mp4track.type} codec ${track.mp4track.codec} is not supported`);\n            }\n            tracks.push(track.mp4track);\n            this.codecs.push(track.mp4track.codec);\n            track.init(initPts, initDts/*, false*/);\n            // initPts = Math.min(track.initPTS, initPts);\n            // initDts = Math.min(track.initDTS, initDts);\n        }\n\n        for (let track_type in this.tracks) {\n            let track = this.tracks[track_type];\n            //track.init(initPts, initDts);\n            this.initSegments[track_type] = MP4.initSegment([track.mp4track], track.duration*track.timescale, track.timescale);\n            initmse.push(this.initMSE(track_type, track.mp4track.codec));\n        }\n        this.initialized = true;\n        Promise.all(initmse).then(()=>{\n            this.mse.play();\n            this.enabled = true;\n        });\n        \n    }\n\n    initMSE(track_type, codec) {\n        if (MSE.isSupported(this.codecs)) {\n            return this.mse.setCodec(track_type, `${PayloadType.map[track_type]}/mp4; codecs=\"${codec}\"`).then(()=>{\n                this.mse.feed(track_type, this.initSegments[track_type]);\n                // this.mse.play();\n                // this.enabled = true;\n            });\n        } else {\n            throw new Error('Codecs are not supported');\n        }\n    }\n\n    mseClose() {\n        // this.mse.clear();\n        this.eventSource.dispatchEvent('stopped');\n    }\n\n    flush() {\n        this.onSamples();\n        if (!this.initialized) {\n            if (Object.keys(this.tracks).length) {\n                for (let track_type in this.tracks) {\n                    if (!this.tracks[track_type].readyToDecode || !this.tracks[track_type].samples.length) return;\n                }\n                this.eventSource.dispatchEvent('ready');\n            }\n        } else {\n            for (let track_type in this.tracks) {\n                let track = this.tracks[track_type];\n                let pay = track.getPayload();\n                if (pay && pay.byteLength) {\n                    this.mse.feed(track_type, [MP4.moof(track.seq, track.scaled(track.firstDTS), track.mp4track), MP4.mdat(pay)]);\n                    track.flush();\n                }\n            }\n        }\n    }\n\n    onSamples(ev) {\n        // TODO: check format\n        // let data = ev.detail;\n        // if (this.tracks[data.pay] && this.client.sampleQueues[data.pay].length) {\n            // console.log(`video ${data.units[0].dts}`);\n        for (let qidx in this.client.sampleQueues) {\n            let queue = this.client.sampleQueues[qidx];\n            while (queue.length) {\n                let units = queue.shift();\n                for (let chunk of units) {\n                    this.tracks[qidx].remux(chunk);\n                }\n            }\n        }\n        // }\n    }\n\n    onAudioConfig(ev) {\n        if (this.tracks[ev.detail.pay]) {\n            this.tracks[ev.detail.pay].setConfig(ev.detail.config);\n        }\n    }\n\n    attachClient(client) {\n        this.detachClient();\n        this.client = client;\n        this.client.eventSource.addEventListener('samples', this.samplesListener);\n        this.client.eventSource.addEventListener('audio_config', this.audioConfigListener);\n        this.client.eventSource.addEventListener('tracks', this.onTracks.bind(this));\n        this.client.eventSource.addEventListener('flush', this.flush.bind(this));\n        this.client.eventSource.addEventListener('clear', ()=>{\n            this.reset();\n            this.mse.clear().then(()=>{\n                this.mse.play();\n            });\n        });\n    }\n\n    detachClient() {\n        if (this.client) {\n            this.client.eventSource.removeEventListener('samples', this.samplesListener);\n            this.client.eventSource.removeEventListener('audio_config', this.audioConfigListener);\n            // TODO: clear other listeners\n            // this.client.eventSource.removeEventListener('clear');\n            this.client = null;\n        }\n    }\n}","class State {\n    constructor(name, stateMachine) {\n        this.stateMachine = stateMachine;\n        this.transitions = new Set();\n        this.name = name;\n    }\n\n\n    activate() {\n        return Promise.resolve(null);\n    }\n\n    finishTransition() {}\n\n    deactivate() {\n        return Promise.resolve(null);\n    }\n}\n\nexport class StateMachine {\n    constructor() {\n        this.storage = {};\n        this.currentState = null;\n        this.states = new Map();\n    }\n\n    addState(name, {activate, finishTransition, deactivate}) {\n        let state = new State(name, this);\n        if (activate) state.activate = activate;\n        if (finishTransition) state.finishTransition = finishTransition;\n        if (deactivate) state.deactivate = deactivate;\n        this.states.set(name, state);\n        return this;\n    }\n\n    addTransition(fromName, toName){\n        if (!this.states.has(fromName)) {\n            throw ReferenceError(`No such state: ${fromName} while connecting to ${toName}`);\n        }\n        if (!this.states.has(toName)) {\n            throw ReferenceError(`No such state: ${toName} while connecting from ${fromName}`);\n        }\n        this.states.get(fromName).transitions.add(toName);\n        return this;\n    }\n\n    _promisify(res) {\n        let promise;\n        try {\n            promise = res;\n            if (!promise.then) {\n                promise = Promise.resolve(promise);\n            }\n        } catch (e) {\n            promise = Promise.reject(e);\n        }\n        return promise;\n    }\n\n    transitionTo(stateName) {\n        if (this.currentState == null) {\n            let state = this.states.get(stateName);\n            return this._promisify(state.activate.call(this))\n                .then((data)=> {\n                    this.currentState = state;\n                    return data;\n                }).then(state.finishTransition.bind(this));\n        }\n        if (this.currentState.name == stateName) return Promise.resolve();\n        if (this.currentState.transitions.has(stateName)) {\n            let state = this.states.get(stateName);\n            return this._promisify(state.deactivate.call(this))\n                .then(state.activate.bind(this)).then((data)=> {\n                    this.currentState = state;\n                    return data;\n                }).then(state.finishTransition.bind(this));\n        } else {\n            return Promise.reject(`No such transition: ${this.currentState.name} to ${stateName}`);\n        }\n    }\n\n}\n","import {PayloadType} from '../defs';\n\nimport {getTagged} from 'bp_logger';\nconst Log = getTagged(\"parser:sdp\");\n\nexport class SDPParser {\n    constructor(){\n        this.version = -1;\n        this.origin = null;\n        this.sessionName = null;\n        this.timing = null;\n        this.sessionBlock = {};\n        this.media = {};\n        this.tracks = {};\n        this.mediaMap = {};\n    }\n\n    parse(content) {\n        Log.debug(content);\n        // return new Promise((resolve, reject)=>{\n            var dataString = content;\n            var success = true;\n            var currentMediaBlock = this.sessionBlock;\n\n            // TODO: multiple audio/video tracks\n\n            for (let line of dataString.split(\"\\n\")) {\n                line = line.replace(/\\r/, '');\n                if (0 === line.length) {\n                    /* Empty row (last row perhaps?), skip to next */\n                    continue;\n                }\n\n                switch (line.charAt(0)) {\n                    case 'v':\n                        if (-1 !== this.version) {\n                            Log.log('Version present multiple times in SDP');\n                            // reject();\n                            return false;\n                        }\n                        success = success && this._parseVersion(line);\n                        break;\n\n                    case 'o':\n                        if (null !== this.origin) {\n                            Log.log('Origin present multiple times in SDP');\n                            // reject();\n                            return false;\n                        }\n                        success = success && this._parseOrigin(line);\n                        break;\n\n                    case 's':\n                        if (null !== this.sessionName) {\n                            Log.log('Session Name present multiple times in SDP');\n                            // reject();\n                            return false;\n                        }\n                        success = success && this._parseSessionName(line);\n                        break;\n\n                    case 't':\n                        if (null !== this.timing) {\n                            Log.log('Timing present multiple times in SDP');\n                            // reject();\n                            return false;\n                        }\n                        success = success && this._parseTiming(line);\n                        break;\n\n                    case 'm':\n                        if (null !== currentMediaBlock && this.sessionBlock !== currentMediaBlock) {\n                            /* Complete previous block and store it */\n                            this.media[currentMediaBlock.type] = currentMediaBlock;\n                        }\n\n                        /* A wild media block appears */\n                        currentMediaBlock = {};\n                        currentMediaBlock.rtpmap = {};\n                        this._parseMediaDescription(line, currentMediaBlock);\n                        break;\n\n                    case 'a':\n                        SDPParser._parseAttribute(line, currentMediaBlock);\n                        break;\n\n                    default:\n                        Log.log('Ignored unknown SDP directive: ' + line);\n                        break;\n                }\n\n                if (!success) {\n                    // reject();\n                    return false;\n                }\n            }\n\n            this.media[currentMediaBlock.type] = currentMediaBlock;\n\n        //     success?resolve():reject();\n        // });\n        return success;\n    }\n\n    _parseVersion(line) {\n        var matches = line.match(/^v=([0-9]+)$/);\n        if (!matches || !matches.length) {\n            Log.log('\\'v=\\' (Version) formatted incorrectly: ' + line);\n            return false;\n        }\n\n        this.version = matches[1];\n        if (0 != this.version) {\n            Log.log('Unsupported SDP version:' + this.version);\n            return false;\n        }\n\n        return true;\n    }\n\n    _parseOrigin(line) {\n        var matches = line.match(/^o=([^0-9]+) ([0-9]+) ([0-9]+) (IN) (IP4|IP6) ([^ ]+)$/);\n        if (!matches || !matches.length) {\n            Log.log('\\'o=\\' (Origin) formatted incorrectly: ' + line);\n            return false;\n        }\n\n        this.origin = {};\n        this.origin.username       = matches[1];\n        this.origin.sessionid      = matches[2];\n        this.origin.sessionversion = matches[3];\n        this.origin.nettype        = matches[4];\n        this.origin.addresstype    = matches[5];\n        this.origin.unicastaddress = matches[6];\n\n        return true;\n    }\n\n    _parseSessionName(line) {\n        var matches = line.match(/^s=([^\\r\\n]+)$/);\n        if (!matches || !matches.length) {\n            Log.log('\\'s=\\' (Session Name) formatted incorrectly: ' + line);\n            return false;\n        }\n\n        this.sessionName = matches[1];\n\n        return true;\n    }\n\n    _parseTiming(line) {\n        var matches = line.match(/^t=([0-9]+) ([0-9]+)$/);\n        if (!matches || !matches.length) {\n            Log.log('\\'t=\\' (Timing) formatted incorrectly: ' + line);\n            return false;\n        }\n\n        this.timing = {};\n        this.timing.start = matches[1];\n        this.timing.stop  = matches[2];\n\n        return true;\n    }\n\n    _parseMediaDescription(line, media) {\n        var matches = line.match(/^m=([^ ]+) ([^ ]+) ([^ ]+)[ ]/);\n        if (!matches || !matches.length) {\n            Log.log('\\'m=\\' (Media) formatted incorrectly: ' + line);\n            return false;\n        }\n\n        media.type  = matches[1];\n        media.port  = matches[2];\n        media.proto = matches[3];\n        media.fmt   = line.substr(matches[0].length).split(' ').map(function(fmt, index, array) {\n            return parseInt(fmt);\n        });\n\n        for (let fmt of media.fmt) {\n            this.mediaMap[fmt] = media;\n        }\n\n        return true;\n    }\n\n    static _parseAttribute(line, media) {\n        if (null === media) {\n            /* Not in a media block, can't be bothered parsing attributes for session */\n            return true;\n        }\n\n        var matches; /* Used for some cases of below switch-case */\n        var separator = line.indexOf(':');\n        var attribute = line.substr(0, (-1 === separator) ? 0x7FFFFFFF : separator); /* 0x7FF.. is default */\n\n        switch (attribute) {\n            case 'a=recvonly':\n            case 'a=sendrecv':\n            case 'a=sendonly':\n            case 'a=inactive':\n                media.mode = line.substr('a='.length);\n                break;\ncase 'a=range':\n                matches = line.match(/^a=range:\\s*([a-zA-Z-]+)=([0-9.]+|now)\\s*-\\s*([0-9.]*)$/);\n                media.range= [Number(matches[2]==\"now\"?-1:matches[2]), Number(matches[3]), matches[1]];\n                break;\n            case 'a=control':\n                media.control = line.substr('a=control:'.length);\n                break;\n\n            case 'a=rtpmap':\n                matches = line.match(/^a=rtpmap:(\\d+) (.*)$/);\n                if (null === matches) {\n                    Log.log('Could not parse \\'rtpmap\\' of \\'a=\\'');\n                    return false;\n                }\n\n                var payload = parseInt(matches[1]);\n                media.rtpmap[payload] = {};\n\n                var attrs = matches[2].split('/');\n                media.rtpmap[payload].name  = attrs[0].toUpperCase();\n                media.rtpmap[payload].clock = attrs[1];\n                if (undefined !== attrs[2]) {\n                    media.rtpmap[payload].encparams = attrs[2];\n                }\n                media.ptype = PayloadType.string_map[attrs[0].toUpperCase()];\n\n                break;\n\n            case 'a=fmtp':\n                matches = line.match(/^a=fmtp:(\\d+) (.*)$/);\n                if (!matches || !matches.length) {\n                    Log.log('Could not parse \\'fmtp\\'  of \\'a=\\'');\n                    return false;\n                }\n\n                media.fmtp = {};\n                for (var param of matches[2].split(';')) {\n                    var idx = param.indexOf('=');\n                    media.fmtp[param.substr(0, idx).toLowerCase().trim()] = param.substr(idx + 1).trim();\n                }\n                break;\n        }\n\n        return true;\n    }\n\n    getSessionBlock() {\n        return this.sessionBlock;\n    }\n\n    hasMedia(mediaType) {\n        return this.media[mediaType] != undefined;\n    }\n\n    getMediaBlock(mediaType) {\n        return this.media[mediaType];\n    }\n\n    getMediaBlockByPayloadType(pt) {\n        // for (var m in this.media) {\n        //     if (-1 !== this.media[m].fmt.indexOf(pt)) {\n        //         return this.media[m];\n        //     }\n        // }\n        return this.mediaMap[pt] || null;\n\n        //ErrorManager.dispatchError(826, [pt], true);\n        // Log.error(`failed to find media with payload type ${pt}`);\n        //\n        // return null;\n    }\n\n    getMediaBlockList() {\n        var res = [];\n        for (var m in this.media) {\n            res.push(m);\n        }\n\n        return res;\n    }\n}","// TODO: asm.js\nimport {Log} from 'bp_logger';\nexport default class RTP {\n    constructor(pkt/*uint8array*/, sdp) {\n        let bytes = new DataView(pkt.buffer, pkt.byteOffset, pkt.byteLength);\n\n        this.version   = bytes.getUint8(0) >>> 6;\n        this.padding   = bytes.getUint8(0) & 0x20 >>> 5;\n        this.has_extension = bytes.getUint8(0) & 0x10 >>> 4;\n        this.csrc      = bytes.getUint8(0) & 0x0F;\n        this.marker    = bytes.getUint8(1) >>> 7;\n        this.pt        = bytes.getUint8(1) & 0x7F;\n        this.sequence  = bytes.getUint16(2) ;\n        this.timestamp = bytes.getUint32(4);\n        this.ssrc      = bytes.getUint32(8);\n        this.csrcs     = [];\n\n        let pktIndex=12;\n        if (this.csrc>0) {\n            this.csrcs.push(bytes.getUint32(pktIndex));\n            pktIndex+=4;\n        }\n        if (this.has_extension==1) {\n            this.extension = bytes.getUint16(pktIndex);\n            this.ehl = bytes.getUint16(pktIndex+2);\n            pktIndex+=4;\n            this.header_data = pkt.slice(pktIndex, this.ehl);\n            pktIndex += this.ehl;\n        }\n\n        this.headerLength = pktIndex;\n        let padLength = 0;\n        if (this.padding) {\n            padLength = bytes.getUint8(pkt.byteLength-1);\n        }\n\n        // this.bodyLength   = pkt.byteLength-this.headerLength-padLength;\n\n        this.media = sdp.getMediaBlockByPayloadType(this.pt);\n        if (null === this.media) {\n            Log.log(`Media description for payload type: ${this.pt} not provided.`);\n        }\n        this.type = this.media.ptype;//PayloadType.string_map[this.media.rtpmap[this.media.fmt[0]].name];\n\n        this.data = pkt.subarray(pktIndex);\n        // this.timestamp = 1000 * (this.timestamp / this.media.rtpmap[this.pt].clock);\n        // console.log(this);\n    }\n    getPayload() {\n        return this.data;\n    }\n\n    getTimestampMS() {\n        return this.timestamp; //1000 * (this.timestamp / this.media.rtpmap[this.pt].clock);\n    }\n\n    toString() {\n        return \"RTP(\" +\n            \"version:\"   + this.version   + \", \" +\n            \"padding:\"   + this.padding   + \", \" +\n            \"has_extension:\" + this.has_extension + \", \" +\n            \"csrc:\"      + this.csrc      + \", \" +\n            \"marker:\"    + this.marker    + \", \" +\n            \"pt:\"        + this.pt        + \", \" +\n            \"sequence:\"  + this.sequence  + \", \" +\n            \"timestamp:\" + this.timestamp + \", \" +\n            \"ssrc:\"      + this.ssrc      + \")\";\n    }\n\n    isVideo(){return this.media.type == 'video';}\n    isAudio(){return this.media.type == 'audio';}\n\n    \n}","import RTP from './rtp';\n\nexport default class RTPFactory {\n    constructor(sdp) {\n        this.tsOffsets={};\n        for (let pay in sdp.media) {\n            for (let pt of sdp.media[pay].fmt) {\n                this.tsOffsets[pt] = {last: 0, overflow: 0};\n            }\n        }\n    }\n\n    build(pkt/*uint8array*/, sdp) {\n        let rtp = new RTP(pkt, sdp);\n\n        let tsOffset = this.tsOffsets[rtp.pt];\n        if (tsOffset) {\n            rtp.timestamp += tsOffset.overflow;\n            if (tsOffset.last && Math.abs(rtp.timestamp - tsOffset.last) > 0x7fffffff) {\n                console.log(`\\nlast ts: ${tsOffset.last}\\n\n                            new ts: ${rtp.timestamp}\\n\n                            new ts adjusted: ${rtp.timestamp+0xffffffff}\\n\n                            last overflow: ${tsOffset.overflow}\\n\n                            new overflow: ${tsOffset.overflow+0xffffffff}\\n\n                            `);\n                tsOffset.overflow += 0xffffffff;\n                rtp.timestamp += 0xffffffff;\n            }\n            /*if (rtp.timestamp>0xffffffff) {\n                console.log(`ts: ${rtp.timestamp}, seq: ${rtp.sequence}`);\n            }*/\n            tsOffset.last = rtp.timestamp;\n        }\n\n        return rtp;\n    }\n}","export class RTSPMessage {\n    static get RTSP_1_0() {return  \"RTSP/1.0\";}\n\n    constructor(_rtsp_version) {\n        this.version = _rtsp_version;\n    }\n\n    build(_cmd, _host, _params={}, _payload=null) {\n        let requestString = `${_cmd} ${_host} ${this.version}\\r\\n`;\n        for (let param in _params) {\n            requestString+=`${param}: ${_params[param]}\\r\\n`\n        }\n        // TODO: binary payload\n        if (_payload) {\n            requestString+=`Content-Length: ${_payload.length}\\r\\n`\n        }\n        requestString+='\\r\\n';\n        if (_payload) {\n            requestString+=_payload;\n        }\n        return requestString;\n    }\n\n    parse(_data) {\n        let lines = _data.split('\\r\\n');\n        let parsed = {\n            headers:{},\n            body:null,\n            code: 0,\n            statusLine: ''\n        };\n\n        let match;\n        [match, parsed.code, parsed.statusLine] = lines[0].match(new RegExp(`${this.version}[ ]+([0-9]{3})[ ]+(.*)`));\n        parsed.code = Number(parsed.code);\n        let lineIdx = 1;\n\n        while (lines[lineIdx]) {\n            let [k,v] = lines[lineIdx].split(/:(.+)/);\n            parsed.headers[k.toLowerCase()] = v.trim();\n            lineIdx++;\n        }\n\n        parsed.body = lines.slice(lineIdx).join('\\n\\r');\n\n        return parsed;\n    }\n\n}\n\nexport const MessageBuilder = new RTSPMessage(RTSPMessage.RTSP_1_0);","import {NALUAsm} from \"../../../../core/elementary/NALUAsm\";\nimport {AACAsm} from \"../../../../core/elementary/AACAsm\";\n\nexport class RTPPayloadParser {\n\n    constructor() {\n        this.h264parser = new RTPH264Parser();\n        this.aacparser = new RTPAACParser();\n    }\n\n    parse(rtp) {\n        if (rtp.media.type=='video') {\n            return this.h264parser.parse(rtp);\n        } else if (rtp.media.type == 'audio') {\n            return this.aacparser.parse(rtp);\n        }\n        return null;\n    }\n}\n\nclass RTPH264Parser {\n    constructor() {\n        this.naluasm = new NALUAsm();\n    }\n\n    parse(rtp) {\n        return this.naluasm.onNALUFragment(rtp.getPayload(), rtp.getTimestampMS());\n    }\n}\n\nclass RTPAACParser {\n\n    constructor() {\n        this.scale = 1;\n        this.asm = new AACAsm();\n    }\n\n    setConfig(conf) {\n        this.asm.config = conf;\n    }\n\n    parse(rtp) {\n        return this.asm.onAACFragment(rtp);\n    }\n}","import {Log} from 'bp_logger';\nimport {EventEmitter} from 'bp_event';\n\nexport class BaseClient {\n    constructor(transport, options={flush: 100}) {\n        this.options = options;\n        this.eventSource = new EventEmitter();\n\n        Object.defineProperties(this, {\n            url: {value: null, writable: true},\n            paused: {value: true, writable: true},\n            seekable: {value: false, writable: true},\n            connected: {value: false, writable: true}\n        });\n\n        this._onControl = ()=> {\n            this.connected = true;\n            while (this.transport.ctrlQueue.length) {\n                this.onControl(this.transport.ctrlQueue.pop());\n            }\n        };\n        this._onData = ()=>{\n            if (this.connected) {\n                while (this.transport.dataQueue.length) {\n                    this.onData(this.transport.dataQueue.pop());\n                }\n            }\n        };\n        this._onConnect = this.onConnected.bind(this);\n        this._onDisconnect = this.onDisconnected.bind(this);\n        this.attachTransport(transport);\n    }\n\n    static streamType() {\n        return null;\n    }\n\n    destroy() {\n        this.detachTransport();\n    }\n\n    attachTransport(transport) {\n        this.detachTransport();\n        this.transport = transport;\n        this.transport.eventSource.addEventListener('control', this._onControl);\n        this.transport.eventSource.addEventListener('data', this._onData);\n        this.transport.eventSource.addEventListener('connected', this._onConnect);\n        this.transport.eventSource.addEventListener('disconnected', this._onDisconnect);\n    }\n\n    detachTransport() {\n        if (this.transport) {\n            this.transport.eventSource.removeEventListener('control', this._onControl);\n            this.transport.eventSource.removeEventListener('data', this._onData);\n            this.transport.eventSource.removeEventListener('connected', this._onConnect);\n            this.transport.eventSource.removeEventListener('disconnected', this._onDisconnect);\n        }\n    }\n\n    start() {\n        Log.log('Client started');\n        this.paused = false;\n        // this.startStreamFlush();\n    }\n\n    stop() {\n        Log.log('Client paused');\n        this.paused = true;\n        // this.stopStreamFlush();\n    }\n\n    seek(timeOffset) {\n\n    }\n\n    setSource(url) {\n        // this.stop();\n        this.url = url;\n    }\n\n    startStreamFlush() {\n        this.flushInterval = setInterval(()=>{\n            if (!this.paused) {\n                this.eventSource.dispatchEvent('flush');\n            }\n        }, this.options.flush);\n    }\n\n    stopStreamFlush() {\n        clearInterval(this.flushInterval);\n    }\n\n    onControl(ctrl) {\n\n    }\n\n    onData(data) {\n\n    }\n\n    onConnected() {\n        if (!this.seekable) {\n            this.transport.dataQueue = [];\n            this.eventSource.dispatchEvent('clear');\n        }\n        this.connected = true;\n    }\n\n    onDisconnected() {\n        this.connected = false;\n    }\n}","import {StateMachine} from 'bp_statemachine';\nimport {SDPParser} from '../../core/parsers/sdp';\nimport {NALU} from '../../core/elementary/NALU';\n// import {RTSPStream} from './stream_joy4';\n// import {RTP} from './rtp/rtp';\nimport RTPFactory from './rtp/factory';\nimport {MessageBuilder} from './message';\nimport {RTPPayloadParser} from './rtp/payload/parser';\nimport {BaseClient} from '../../core/base_client';\nimport {getTagged} from 'bp_logger';\nimport {PayloadType} from '../../core/defs';\nimport {base64ToArrayBuffer, hexToByteArray} from '../../core/util/binary';\nimport {AACParser} from '../../core/parsers/aac';\n\nconst LOG_TAG = \"client:rtsp\";\nconst Log = getTagged(LOG_TAG);\n\nexport class RTPError {\n    constructor(message, file, line) {\n        //super(message, file, line);\n    }\n}\n\nexport class RTSPClient extends BaseClient {\n    constructor(transport, options={flush: 200}) {\n        super(transport, options);\n        this.clientSM = new RTSPClientSM(this, transport);\n        this.clientSM.ontracks = (tracks)=> {\n            this.eventSource.dispatchEvent('tracks', tracks);\n            this.startStreamFlush();\n        };\n        this.clientSM.untracks = ()=> {\n            this.stopStreamFlush();\n        };\n        this.sampleQueues = {};\n    }\n\n    static streamType() {\n        return 'rtsp';\n    }\n\n    setSource(url) {\n        super.setSource(url);\n        this.clientSM.setSource(url);\n    }\n\n    destroy() {\n        this.clientSM.destroy();\n        return super.destroy();\n    }\n\n    start() {\n        // if (!this.url) return;\n        super.start();\n        this.transport.ready.then(()=> {\n            this.clientSM.start();\n        });\n    }\n\n    onControl(ctrl) {\n        this.clientSM.onControl(ctrl);\n    }\n\n    onData(data) {\n        this.clientSM.onData(data);\n    }\n\n    onConnected() {\n        this.clientSM.onConnected();\n        super.onConnected();\n    }\n\n    onDisconnected() {\n        super.onDisconnected();\n        this.clientSM.onDisconnected();\n    }\n}\n\nexport class RTSPClientSM extends StateMachine {\n    static get STATE_INITIAL() {return  1 << 0;}\n    static get STATE_START() {return  1 << 1;}\n    static get STATE_OPEN() {return  1 << 2;}\n    static get STATE_TEARDOWN() {return  1 << 3;}\n\n    constructor(parent, transport) {\n        super();\n\n        this.parent = parent;\n        this.transport = transport;\n        this.payParser = new RTPPayloadParser();\n        this.rtp_channels = new Set();\n        this.ontracks = null;\n        this.untracks = null;\n\n        this.reset();\n\n        this.addState(RTSPClientSM.STATE_INITIAL, {\n        }).addState(RTSPClientSM.STATE_START, {\n            activate: this.sendStart,\n            finishTransition: ()=> {\n                return this.transitionTo(RTSPClientSM.STATE_OPEN)\n            },\n        }).addState(RTSPClientSM.STATE_OPEN, {\n        }).addState(RTSPClientSM.STATE_TEARDOWN, {\n            activate: ()=>{\n                this.started = false;\n            },\n            finishTransition: ()=>{\n                return this.transitionTo(RTSPClientSM.STATE_INITIAL)\n            }\n        }).addTransition(RTSPClientSM.STATE_INITIAL, RTSPClientSM.STATE_START)\n            .addTransition(RTSPClientSM.STATE_START, RTSPClientSM.STATE_OPEN)\n            .addTransition(RTSPClientSM.STATE_OPEN, RTSPClientSM.STATE_START)\n            .addTransition(RTSPClientSM.STATE_OPEN, RTSPClientSM.STATE_TEARDOWN)\n            .addTransition(RTSPClientSM.STATE_START, RTSPClientSM.STATE_TEARDOWN)\n            .addTransition(RTSPClientSM.STATE_INITIAL, RTSPClientSM.STATE_TEARDOWN)\n            .addTransition(RTSPClientSM.STATE_TEARDOWN, RTSPClientSM.STATE_INITIAL);\n\n        this.transitionTo(RTSPClientSM.STATE_INITIAL);\n\n        this.shouldReconnect = false;\n\n        // TODO: remove listeners\n        // this.connection.eventSource.addEventListener('connected', ()=>{\n        //     if (this.shouldReconnect) {\n        //         this.reconnect();\n        //     }\n        // });\n        // this.connection.eventSource.addEventListener('disconnected', ()=>{\n        //     if (this.started) {\n        //         this.shouldReconnect = true;\n        //     }\n        // });\n        // this.connection.eventSource.addEventListener('data', (data)=>{\n        //     let channel = new DataView(data).getUint8(1);\n        //     if (this.rtp_channels.has(channel)) {\n        //         this.onRTP({packet: new Uint8Array(data, 4), type: channel});\n        //     }\n        //\n        // });\n    }\n\n    destroy() {\n        this.parent = null;\n    }\n\n    onConnected() {\n        this.rtpFactory = null;\n        if (this.shouldReconnect) {\n            this.reconnect();\n        }\n    }\n    onDisconnected() {\n        this.reset();\n        this.shouldReconnect = true;\n        return this.transitionTo(RTSPClientSM.STATE_TEARDOWN);\n    }\n\n    setSource(url) {\n        this.url = url;\n        this.reconnect();\n    }\n    start() {\n        // this.reconnect();\n    }\n    stop() {\n        this.shouldReconnect = false;\n        // this.mse = null;\n    }\n\n    sendStart() {\n        this.send(this.url);\n        return Promise.resolve();\n    }\n\n\n    onControl(resp) {\n        switch (resp.id) {\n        case 'rtsp':\n            this.handleCtrl(resp.result);\n            break;\n        case 'stopped':\n        case 'error':\n            this.transitionTo(RTSPClientSM.STATE_TEARDOWN);\n            break;\n        }\n    }\n\n    onData(data) {\n        if (!this.ready) return;\n        let channel = data[1];\n        this.onRTP({packet: data.subarray(4), type: channel});\n    }\n\n    reset() {\n        this.ready = false;\n        if (this.untracks) {\n            this.untracks();\n        }\n        this.parent.eventSource.dispatchEvent('clear');\n        this.methods = [];\n        this.track = null;\n        this.sdp = null;\n        this.session = null;\n        this.timeOffset = {};\n    }\n\n    reconnect() {\n        this.state = RTSPClientSM.STATE_INITIAL;\n        // this.reset();\n        if (this.currentState && this.currentState.name != RTSPClientSM.STATE_INITIAL) {\n            this.transitionTo(RTSPClientSM.STATE_TEARDOWN).then(()=> {\n                this.transitionTo(RTSPClientSM.STATE_START);\n            });\n        } else {\n            this.transitionTo(RTSPClientSM.STATE_START);\n        }\n    }\n\n    supports(method) {\n        return this.methods.includes(method)\n    }\n\n    parse(payload) {\n        Log.debug(payload);\n        let d = payload.split('\\r\\n\\r\\n');\n        let parsed =  MessageBuilder.parse(d[0]);\n        let len = Number(parsed.headers['content-length']);\n        if (len) {\n            // let d = payload.split('\\r\\n\\r\\n');\n            parsed.body = d[1];\n        } else {\n            parsed.body=\"\";\n        }\n        return parsed\n    }\n\n    send(_data) {\n        this.transport.ready.then(()=> {\n            Log.debug(_data);\n            this.transport.send(_data);\n        });\n    }\n\n    // handleOptions(data) {\n    //     this.reset();\n    //     this.started = true;\n    //     this.cSeq = 0;\n    //     this.methods = data.headers['public'].split(',').map((e)=>e.trim());\n    // }\n\n    handleCtrl(resps) {\n        this.reset();\n        // DESCRIBE\n        this.handleDescribe(this.parse(resps.DESCRIBE));\n        // SETUP\n        // this.handleSetup(this.parse(resps.SETUP));\n        // PLAY\n        this.handlePlay(this.parse(resps.PLAY));\n    }\n    handleDescribe(data) {\n        this.sdp = new SDPParser();\n        if (!this.sdp.parse(data.body)) {\n            throw new Error(\"Failed to parse SDP\");\n        }\n        this.tracks = this.sdp.getMediaBlockList();\n        if (!this.tracks.length) {\n            throw new Error(\"No video track in SDP\");\n        }\n        this.rtpFactory = new RTPFactory(this.sdp);\n    }\n    handlePlay(data) {\n        // let streams=[];\n        let tracks = [];\n\n        // TODO: select first video and first audio tracks\n        for (let track_type of this.tracks) {\n            Log.log(\"setup track: \"+track_type);\n            // if (track_type=='audio') continue;\n            // if (track_type=='video') continue;\n            let track = this.sdp.getMediaBlock(track_type);\n            if (!PayloadType.string_map[track.rtpmap[track.fmt[0]].name]) continue;\n\n            // this.streams[track_type] = new RTSPStream(this, track);\n            // let playPromise = this.streams[track_type].start();\n            this.parent.sampleQueues[PayloadType.string_map[track.rtpmap[track.fmt[0]].name]]=[];\n            let timeOffset = 0;\n            try {\n                let rtp_info = data.headers[\"rtp-info\"].split(';');\n                this.timeOffset[track.fmt[0]] = Number(rtp_info[rtp_info.length - 1].split(\"=\")[1]) ;\n            } catch (e) {\n                this.timeOffset[track.fmt[0]] = new Date().getTime();\n            }\n\n            let params = {\n                timescale: 0,\n                scaleFactor: 0\n            };\n            if (track.fmtp['sprop-parameter-sets']) {\n                let sps_pps = track.fmtp['sprop-parameter-sets'].split(',');\n                params = {\n                    sps:base64ToArrayBuffer(sps_pps[0]),\n                    pps:base64ToArrayBuffer(sps_pps[1])\n                };\n            } else if (track.fmtp['config']) {\n                let config = track.fmtp['config'];\n                this.has_config = track.fmtp['cpresent']!='0';\n                let generic = track.rtpmap[track.fmt[0]].name == 'MPEG4-GENERIC';\n                if (generic) {\n                    params={config:\n                        AACParser.parseAudioSpecificConfig(hexToByteArray(config))\n                    };\n                    this.payParser.aacparser.setConfig(params.config);\n                } else if (config) {\n                    // todo: parse audio specific config for mpeg4-generic\n                    params={config:\n                        AACParser.parseStreamMuxConfig(hexToByteArray(config))\n                    };\n                    this.payParser.aacparser.setConfig(params.config);\n                }\n            }\n            params.duration = this.sdp.sessionBlock.range?this.sdp.sessionBlock.range[1]-this.sdp.sessionBlock.range[0]:1;\n            this.parent.seekable = (params.duration > 1);\n            tracks.push({\n                track: track,\n                offset: timeOffset,\n                type: PayloadType.string_map[track.rtpmap[track.fmt[0]].name],\n                params: params,\n                duration: params.duration\n            });\n        }\n        this.ready = true;\n        if (this.ontracks) {\n            this.ontracks(tracks);\n        }\n    }\n\n    onRTP(_data) {\n        if (!this.rtpFactory) return;\n\n        let rtp = this.rtpFactory.build(_data.packet, this.sdp);\n        rtp.timestamp -= this.timeOffset[rtp.pt];\n        // Log.debug(rtp);\n        if (rtp.media) {\n            let pay = this.payParser.parse(rtp);\n            if (pay) {\n                // if (pay.nftype !== 5) {\n                //     console.log('+++++++++++++++not idr frame, skipping');\n                //     return;\n                // }\n                // console.log('+++++++++++++++adding idr frame');\n                this.parent.sampleQueues[rtp.type].push([pay]);\n            }\n        }\n\n        // this.remuxer.feedRTP();\n    }\n}","import {EventEmitter} from \"bp_event\";\n\nexport class BaseRequest {\n    constructor(data) {\n        this.data = data;\n        this.before = (data)=>{return Promise.resolve(data)};\n    }\n\n    send() {\n        return this.before(this.data);\n    }\n\n    before(fn) {\n        return Promise.resolve\n    }\n}\n\nexport class BaseTransport {\n    constructor() {\n        this.eventSource = new EventEmitter();\n        this.ctrlQueue = [];\n        this.dataQueue = [];\n    }\n\n    static streamTypes() {\n        return [];\n    }\n\n    destroy() {\n        this.eventSource.destroy();\n    }\n\n    connect() {\n        // TO be impemented\n    }\n\n    disconnect() {\n        // TO be impemented\n    }\n\n    reconnect() {\n        return this.disconnect().then(()=>{\n            return this.connect();\n        });\n    }\n\n    setEndpoint(endpoint) {\n        this.endpoint = endpoint;\n        return this.reconnect();\n    }\n\n    send(data) {\n        // TO be impemented\n        // return this.prepare(data).send();\n    }\n\n    prepare(data) {\n        // TO be impemented\n        // return new Request(data);\n    }\n\n    // onData(type, data) {\n    //     this.eventSource.dispatchEvent(type, data);\n    // }\n}","export const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\nexport const CPU_CORES = 1;//navigator.hardwareConcurrency || 3;","// ASN.1 JavaScript decoder\n// Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>\n\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */\n/*global oids */\n\nvar hardLimit = 100,\n    ellipsis = \"\\u2026\",\n    DOM = {\n        tag: function (tagName, className) {\n            var t = document.createElement(tagName);\n            t.className = className;\n            return t;\n        },\n        text: function (str) {\n            return document.createTextNode(str);\n        }\n    };\n\nclass Stream {\n    static get hexDigits() {\n        return \"0123456789ABCDEF\";\n    };\n\n    static get reTime() {\n        return /^((?:1[89]|2\\d)?\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\n    }\n\n\n    constructor(enc, pos) {\n        if (enc instanceof Stream) {\n            this.enc = enc.enc;\n            this.pos = enc.pos;\n        } else {\n            this.enc = enc;\n            this.pos = pos;\n        }\n    }\n\n    get(pos) {\n        if (pos === undefined)\n            pos = this.pos++;\n        if (pos >= this.enc.length)\n            throw 'Requesting byte offset ' + pos + ' on a stream of length ' + this.enc.length;\n        return this.enc[pos];\n    };\n\n    hexByte(b) {\n        return Stream.hexDigits.charAt((b >> 4) & 0xF) + Stream.hexDigits.charAt(b & 0xF);\n    };\n\n    hexDump(start, end, raw) {\n        var s = \"\";\n        for (var i = start; i < end; ++i) {\n            s += this.hexByte(this.get(i));\n            if (raw !== true)\n                switch (i & 0xF) {\n                    case 0x7:\n                        s += \"  \";\n                        break;\n                    case 0xF:\n                        s += \"\\n\";\n                        break;\n                    default:\n                        s += \" \";\n                }\n        }\n        return s;\n    };\n\n    parseStringISO(start, end) {\n        var s = \"\";\n        for (var i = start; i < end; ++i)\n            s += String.fromCharCode(this.get(i));\n        return s;\n    };\n\n    parseStringUTF(start, end) {\n        var s = \"\";\n        for (var i = start; i < end;) {\n            var c = this.get(i++);\n            if (c < 128)\n                s += String.fromCharCode(c);\n            else if ((c > 191) && (c < 224))\n                s += String.fromCharCode(((c & 0x1F) << 6) | (this.get(i++) & 0x3F));\n            else\n                s += String.fromCharCode(((c & 0x0F) << 12) | ((this.get(i++) & 0x3F) << 6) | (this.get(i++) & 0x3F));\n        }\n        return s;\n    };\n\n    parseStringBMP(start, end) {\n        var str = \"\"\n        for (var i = start; i < end; i += 2) {\n            var high_byte = this.get(i);\n            var low_byte = this.get(i + 1);\n            str += String.fromCharCode((high_byte << 8) + low_byte);\n        }\n\n        return str;\n    };\n\n    parseTime(start, end) {\n        var s = this.parseStringISO(start, end),\n            m = Stream.reTime.exec(s);\n        if (!m)\n            return \"Unrecognized time: \" + s;\n        s = m[1] + \"-\" + m[2] + \"-\" + m[3] + \" \" + m[4];\n        if (m[5]) {\n            s += \":\" + m[5];\n            if (m[6]) {\n                s += \":\" + m[6];\n                if (m[7])\n                    s += \".\" + m[7];\n            }\n        }\n        if (m[8]) {\n            s += \" UTC\";\n            if (m[8] != 'Z') {\n                s += m[8];\n                if (m[9])\n                    s += \":\" + m[9];\n            }\n        }\n        return s;\n    };\n\n    parseInteger(start, end) {\n        //TODO support negative numbers\n        var len = end - start;\n        if (len > 4) {\n            len <<= 3;\n            var s = this.get(start);\n            if (s === 0)\n                len -= 8;\n            else\n                while (s < 128) {\n                    s <<= 1;\n                    --len;\n                }\n            return \"(\" + len + \" bit)\";\n        }\n        var n = 0;\n        for (var i = start; i < end; ++i)\n            n = (n << 8) | this.get(i);\n        return n;\n    };\n\n    parseBitString(start, end) {\n        var unusedBit = this.get(start),\n            lenBit = ((end - start - 1) << 3) - unusedBit,\n            s = \"(\" + lenBit + \" bit)\";\n        if (lenBit <= 20) {\n            var skip = unusedBit;\n            s += \" \";\n            for (var i = end - 1; i > start; --i) {\n                var b = this.get(i);\n                for (var j = skip; j < 8; ++j)\n                    s += (b >> j) & 1 ? \"1\" : \"0\";\n                skip = 0;\n            }\n        }\n        return s;\n    };\n\n    parseOctetString(start, end) {\n        var len = end - start,\n            s = \"(\" + len + \" byte) \";\n        if (len > hardLimit)\n            end = start + hardLimit;\n        for (var i = start; i < end; ++i)\n            s += this.hexByte(this.get(i)); //TODO: also try Latin1?\n        if (len > hardLimit)\n            s += ellipsis;\n        return s;\n    };\n\n    parseOID(start, end) {\n        var s = '',\n            n = 0,\n            bits = 0;\n        for (var i = start; i < end; ++i) {\n            var v = this.get(i);\n            n = (n << 7) | (v & 0x7F);\n            bits += 7;\n            if (!(v & 0x80)) { // finished\n                if (s === '') {\n                    var m = n < 80 ? n < 40 ? 0 : 1 : 2;\n                    s = m + \".\" + (n - m * 40);\n                } else\n                    s += \".\" + ((bits >= 31) ? \"bigint\" : n);\n                n = bits = 0;\n            }\n        }\n        return s;\n    };\n}\n\nexport class ASN1 {\n    static get reSeemsASCII() {\n        return /^[ -~]+$/;\n    }\n\n    constructor(stream, header, length, tag, sub) {\n        this.stream = stream;\n        this.header = header;\n        this.length = length;\n        this.tag = tag;\n        this.sub = sub;\n    }\n\n    typeName() {\n        if (this.tag === undefined)\n            return \"unknown\";\n        var tagClass = this.tag >> 6,\n            tagConstructed = (this.tag >> 5) & 1,\n            tagNumber = this.tag & 0x1F;\n        switch (tagClass) {\n            case 0: // universal\n                switch (tagNumber) {\n                    case 0x00:\n                        return \"EOC\";\n                    case 0x01:\n                        return \"BOOLEAN\";\n                    case 0x02:\n                        return \"INTEGER\";\n                    case 0x03:\n                        return \"BIT_STRING\";\n                    case 0x04:\n                        return \"OCTET_STRING\";\n                    case 0x05:\n                        return \"NULL\";\n                    case 0x06:\n                        return \"OBJECT_IDENTIFIER\";\n                    case 0x07:\n                        return \"ObjectDescriptor\";\n                    case 0x08:\n                        return \"EXTERNAL\";\n                    case 0x09:\n                        return \"REAL\";\n                    case 0x0A:\n                        return \"ENUMERATED\";\n                    case 0x0B:\n                        return \"EMBEDDED_PDV\";\n                    case 0x0C:\n                        return \"UTF8String\";\n                    case 0x10:\n                        return \"SEQUENCE\";\n                    case 0x11:\n                        return \"SET\";\n                    case 0x12:\n                        return \"NumericString\";\n                    case 0x13:\n                        return \"PrintableString\"; // ASCII subset\n                    case 0x14:\n                        return \"TeletexString\"; // aka T61String\n                    case 0x15:\n                        return \"VideotexString\";\n                    case 0x16:\n                        return \"IA5String\"; // ASCII\n                    case 0x17:\n                        return \"UTCTime\";\n                    case 0x18:\n                        return \"GeneralizedTime\";\n                    case 0x19:\n                        return \"GraphicString\";\n                    case 0x1A:\n                        return \"VisibleString\"; // ASCII subset\n                    case 0x1B:\n                        return \"GeneralString\";\n                    case 0x1C:\n                        return \"UniversalString\";\n                    case 0x1E:\n                        return \"BMPString\";\n                    default:\n                        return \"Universal_\" + tagNumber.toString(16);\n                }\n            case 1:\n                return \"Application_\" + tagNumber.toString(16);\n            case 2:\n                return \"[\" + tagNumber + \"]\"; // Context\n            case 3:\n                return \"Private_\" + tagNumber.toString(16);\n        }\n    }\n\n    content() {\n        if (this.tag === undefined)\n            return null;\n        var tagClass = this.tag >> 6,\n            tagNumber = this.tag & 0x1F,\n            content = this.posContent(),\n            len = Math.abs(this.length);\n        if (tagClass !== 0) { // universal\n            if (this.sub !== null)\n                return \"(\" + this.sub.length + \" elem)\";\n            //TODO: TRY TO PARSE ASCII STRING\n            var s = this.stream.parseStringISO(content, content + Math.min(len, hardLimit));\n            if (ASN1.reSeemsASCII.test(s))\n                return s.substring(0, 2 * hardLimit) + ((s.length > 2 * hardLimit) ? ellipsis : \"\");\n            else\n                return this.stream.parseOctetString(content, content + len);\n        }\n        switch (tagNumber) {\n            case 0x01: // BOOLEAN\n                return (this.stream.get(content) === 0) ? \"false\" : \"true\";\n            case 0x02: // INTEGER\n                return this.stream.parseInteger(content, content + len);\n            case 0x03: // BIT_STRING\n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\n                    this.stream.parseBitString(content, content + len);\n            case 0x04: // OCTET_STRING\n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\n                    this.stream.parseOctetString(content, content + len);\n            //case 0x05: // NULL\n            case 0x06: // OBJECT_IDENTIFIER\n                return this.stream.parseOID(content, content + len);\n            //case 0x07: // ObjectDescriptor\n            //case 0x08: // EXTERNAL\n            //case 0x09: // REAL\n            //case 0x0A: // ENUMERATED\n            //case 0x0B: // EMBEDDED_PDV\n            case 0x10: // SEQUENCE\n            case 0x11: // SET\n                return \"(\" + this.sub.length + \" elem)\";\n            case 0x0C: // UTF8String\n                return this.stream.parseStringUTF(content, content + len);\n            case 0x12: // NumericString\n            case 0x13: // PrintableString\n            case 0x14: // TeletexString\n            case 0x15: // VideotexString\n            case 0x16: // IA5String\n            //case 0x19: // GraphicString\n            case 0x1A: // VisibleString\n                //case 0x1B: // GeneralString\n                //case 0x1C: // UniversalString\n                return this.stream.parseStringISO(content, content + len);\n            case 0x1E: // BMPString\n                return this.stream.parseStringBMP(content, content + len);\n            case 0x17: // UTCTime\n            case 0x18: // GeneralizedTime\n                return this.stream.parseTime(content, content + len);\n        }\n        return null;\n    };\n\n    toString() {\n        return this.typeName() + \"@\" + this.stream.pos + \"[header:\" + this.header + \",length:\" + this.length + \",sub:\" + ((this.sub === null) ? 'null' : this.sub.length) + \"]\";\n    };\n\n    print(indent) {\n        if (indent === undefined) indent = '';\n        document.writeln(indent + this);\n        if (this.sub !== null) {\n            indent += '  ';\n            for (var i = 0, max = this.sub.length; i < max; ++i)\n                this.sub[i].print(indent);\n        }\n    };\n\n    toPrettyString(indent) {\n        if (indent === undefined) indent = '';\n        var s = indent + this.typeName() + \" @\" + this.stream.pos;\n        if (this.length >= 0)\n            s += \"+\";\n        s += this.length;\n        if (this.tag & 0x20)\n            s += \" (constructed)\";\n        else if (((this.tag == 0x03) || (this.tag == 0x04)) && (this.sub !== null))\n            s += \" (encapsulates)\";\n        s += \"\\n\";\n        if (this.sub !== null) {\n            indent += '  ';\n            for (var i = 0, max = this.sub.length; i < max; ++i)\n                s += this.sub[i].toPrettyString(indent);\n        }\n        return s;\n    };\n\n    toDOM() {\n        var node = DOM.tag(\"div\", \"node\");\n        node.asn1 = this;\n        var head = DOM.tag(\"div\", \"head\");\n        var s = this.typeName().replace(/_/g, \" \");\n        head.innerHTML = s;\n        var content = this.content();\n        if (content !== null) {\n            content = String(content).replace(/</g, \"&lt;\");\n            var preview = DOM.tag(\"span\", \"preview\");\n            preview.appendChild(DOM.text(content));\n            head.appendChild(preview);\n        }\n        node.appendChild(head);\n        this.node = node;\n        this.head = head;\n        var value = DOM.tag(\"div\", \"value\");\n        s = \"Offset: \" + this.stream.pos + \"<br/>\";\n        s += \"Length: \" + this.header + \"+\";\n        if (this.length >= 0)\n            s += this.length;\n        else\n            s += (-this.length) + \" (undefined)\";\n        if (this.tag & 0x20)\n            s += \"<br/>(constructed)\";\n        else if (((this.tag == 0x03) || (this.tag == 0x04)) && (this.sub !== null))\n            s += \"<br/>(encapsulates)\";\n        //TODO if (this.tag == 0x03) s += \"Unused bits: \"\n        if (content !== null) {\n            s += \"<br/>Value:<br/><b>\" + content + \"</b>\";\n            if ((typeof oids === 'object') && (this.tag == 0x06)) {\n                var oid = oids[content];\n                if (oid) {\n                    if (oid.d) s += \"<br/>\" + oid.d;\n                    if (oid.c) s += \"<br/>\" + oid.c;\n                    if (oid.w) s += \"<br/>(warning!)\";\n                }\n            }\n        }\n        value.innerHTML = s;\n        node.appendChild(value);\n        var sub = DOM.tag(\"div\", \"sub\");\n        if (this.sub !== null) {\n            for (var i = 0, max = this.sub.length; i < max; ++i)\n                sub.appendChild(this.sub[i].toDOM());\n        }\n        node.appendChild(sub);\n        head.onclick = function () {\n            node.className = (node.className == \"node collapsed\") ? \"node\" : \"node collapsed\";\n        };\n        return node;\n    };\n\n    posStart() {\n        return this.stream.pos;\n    };\n\n    posContent() {\n        return this.stream.pos + this.header;\n    };\n\n    posEnd() {\n        return this.stream.pos + this.header + Math.abs(this.length);\n    };\n\n    fakeHover(current) {\n        this.node.className += \" hover\";\n        if (current)\n            this.head.className += \" hover\";\n    };\n\n    fakeOut(current) {\n        var re = / ?hover/;\n        this.node.className = this.node.className.replace(re, \"\");\n        if (current)\n            this.head.className = this.head.className.replace(re, \"\");\n    };\n\n    toHexDOM_sub(node, className, stream, start, end) {\n        if (start >= end)\n            return;\n        var sub = DOM.tag(\"span\", className);\n        sub.appendChild(DOM.text(\n            stream.hexDump(start, end)));\n        node.appendChild(sub);\n    };\n\n    toHexDOM(root) {\n        var node = DOM.tag(\"span\", \"hex\");\n        if (root === undefined) root = node;\n        this.head.hexNode = node;\n        this.head.onmouseover = function () {\n            this.hexNode.className = \"hexCurrent\";\n        };\n        this.head.onmouseout = function () {\n            this.hexNode.className = \"hex\";\n        };\n        node.asn1 = this;\n        node.onmouseover = function () {\n            var current = !root.selected;\n            if (current) {\n                root.selected = this.asn1;\n                this.className = \"hexCurrent\";\n            }\n            this.asn1.fakeHover(current);\n        };\n        node.onmouseout = function () {\n            var current = (root.selected == this.asn1);\n            this.asn1.fakeOut(current);\n            if (current) {\n                root.selected = null;\n                this.className = \"hex\";\n            }\n        };\n        this.toHexDOM_sub(node, \"tag\", this.stream, this.posStart(), this.posStart() + 1);\n        this.toHexDOM_sub(node, (this.length >= 0) ? \"dlen\" : \"ulen\", this.stream, this.posStart() + 1, this.posContent());\n        if (this.sub === null)\n            node.appendChild(DOM.text(\n                this.stream.hexDump(this.posContent(), this.posEnd())));\n        else if (this.sub.length > 0) {\n            var first = this.sub[0];\n            var last = this.sub[this.sub.length - 1];\n            this.toHexDOM_sub(node, \"intro\", this.stream, this.posContent(), first.posStart());\n            for (var i = 0, max = this.sub.length; i < max; ++i)\n                node.appendChild(this.sub[i].toHexDOM(root));\n            this.toHexDOM_sub(node, \"outro\", this.stream, last.posEnd(), this.posEnd());\n        }\n        return node;\n    };\n\n    toHexString(root) {\n        return this.stream.hexDump(this.posStart(), this.posEnd(), true);\n    };\n\n}\n\nASN1.decodeLength = function (stream) {\n    var buf = stream.get(),\n        len = buf & 0x7F;\n    if (len == buf)\n        return len;\n    if (len > 3)\n        throw \"Length over 24 bits not supported at position \" + (stream.pos - 1);\n    if (len === 0)\n        return -1; // undefined\n    buf = 0;\n    for (var i = 0; i < len; ++i)\n        buf = (buf << 8) | stream.get();\n    return buf;\n};\nASN1.hasContent = function (tag, len, stream) {\n    if (tag & 0x20) // constructed\n        return true;\n    if ((tag < 0x03) || (tag > 0x04))\n        return false;\n    var p = new Stream(stream);\n    if (tag == 0x03) p.get(); // BitString unused bits, must be in [0, 7]\n    var subTag = p.get();\n    if ((subTag >> 6) & 0x01) // not (universal or context)\n        return false;\n    try {\n        var subLength = ASN1.decodeLength(p);\n        return ((p.pos - stream.pos) + subLength == len);\n    } catch (exception) {\n        return false;\n    }\n};\nASN1.decode = function (stream) {\n    if (!(stream instanceof Stream))\n        stream = new Stream(stream, 0);\n    var streamStart = new Stream(stream),\n        tag = stream.get(),\n        len = ASN1.decodeLength(stream),\n        header = stream.pos - streamStart.pos,\n        sub = null;\n    if (ASN1.hasContent(tag, len, stream)) {\n        // it has content, so we decode it\n        var start = stream.pos;\n        if (tag == 0x03) stream.get(); // skip BitString unused bits, must be in [0, 7]\n        sub = [];\n        if (len >= 0) {\n            // definite length\n            var end = start + len;\n            while (stream.pos < end)\n                sub[sub.length] = ASN1.decode(stream);\n            if (stream.pos != end)\n                throw \"Content size is not correct for container starting at offset \" + start;\n        } else {\n            // undefined length\n            try {\n                for (; ;) {\n                    var s = ASN1.decode(stream);\n                    if (s.tag === 0)\n                        break;\n                    sub[sub.length] = s;\n                }\n                len = start - stream.pos;\n            } catch (e) {\n                throw \"Exception while decoding undefined length content: \" + e;\n            }\n        }\n    } else\n        stream.pos += len; // skip content\n    return new ASN1(streamStart, header, len, tag, sub);\n};\nASN1.test = function () {\n    var test = [\n        {value: [0x27], expected: 0x27},\n        {value: [0x81, 0xC9], expected: 0xC9},\n        {value: [0x83, 0xFE, 0xDC, 0xBA], expected: 0xFEDCBA}\n    ];\n    for (var i = 0, max = test.length; i < max; ++i) {\n        var pos = 0,\n            stream = new Stream(test[i].value, 0),\n            res = ASN1.decodeLength(stream);\n        if (res != test[i].expected)\n            document.write(\"In test[\" + i + \"] expected \" + test[i].expected + \" got \" + res + \"\\n\");\n    }\n};","// prng4.js - uses Arcfour as a PRNG\n\nexport class Arcfour {\n  constructor() {\n    this.i = 0;\n    this.j = 0;\n    this.S = [];\n  }\n}\n\n// Initialize arcfour context from key, an array of ints, each from [0..255]\nfunction ARC4init(key) {\n  var i, j, t;\n  for(i = 0; i < 256; ++i)\n    this.S[i] = i;\n  j = 0;\n  for(i = 0; i < 256; ++i) {\n    j = (j + this.S[i] + key[i % key.length]) & 255;\n    t = this.S[i];\n    this.S[i] = this.S[j];\n    this.S[j] = t;\n  }\n  this.i = 0;\n  this.j = 0;\n}\n\nfunction ARC4next() {\n  var t;\n  this.i = (this.i + 1) & 255;\n  this.j = (this.j + this.S[this.i]) & 255;\n  t = this.S[this.i];\n  this.S[this.i] = this.S[this.j];\n  this.S[this.j] = t;\n  return this.S[(t + this.S[this.i]) & 255];\n}\n\nArcfour.prototype.init = ARC4init;\nArcfour.prototype.next = ARC4next;\n\n// Plug in your RNG constructor here\nexport function prng_newstate() {\n  return new Arcfour();\n}\n\n// Pool size must be a multiple of 4 and greater than 32.\n// An array of bytes the size of the pool will be passed to init()\nexport var rng_psize = 256;\n","import {rng_psize} from \"./prng4\";\nimport {prng_newstate} from \"./prng4\";\n// Random number generator - requires a PRNG backend, e.g. prng4.js\nvar rng_state;\nvar rng_pool;\nvar rng_pptr;\n\n// Initialize the pool with junk if needed.\nif(rng_pool == null) {\n  rng_pool = new Array();\n  rng_pptr = 0;\n  var t;\n  if(window.crypto && window.crypto.getRandomValues) {\n    // Extract entropy (2048 bits) from RNG if available\n    var z = new Uint32Array(256);\n    window.crypto.getRandomValues(z);\n    for (t = 0; t < z.length; ++t)\n      rng_pool[rng_pptr++] = z[t] & 255;\n  }\n\n  // Use mouse events for entropy, if we do not have enough entropy by the time\n  // we need it, entropy will be generated by Math.random.\n  var onMouseMoveListener = function(ev) {\n    this.count = this.count || 0;\n    if (this.count >= 256 || rng_pptr >= rng_psize) {\n      if (window.removeEventListener)\n        window.removeEventListener(\"mousemove\", onMouseMoveListener, false);\n      else if (window.detachEvent)\n        window.detachEvent(\"onmousemove\", onMouseMoveListener);\n      return;\n    }\n    try {\n      var mouseCoordinates = ev.x + ev.y;\n      rng_pool[rng_pptr++] = mouseCoordinates & 255;\n      this.count += 1;\n    } catch (e) {\n      // Sometimes Firefox will deny permission to access event properties for some reason. Ignore.\n    }\n  };\n  if (window.addEventListener)\n    window.addEventListener(\"mousemove\", onMouseMoveListener, false);\n  else if (window.attachEvent)\n    window.attachEvent(\"onmousemove\", onMouseMoveListener);\n\n}\n\nfunction rng_get_byte() {\n  if(rng_state == null) {\n    rng_state = prng_newstate();\n    // At this point, we may not have collected enough entropy.  If not, fall back to Math.random\n    while (rng_pptr < rng_psize) {\n      var random = Math.floor(65536 * Math.random());\n      rng_pool[rng_pptr++] = random & 255;\n    }\n    rng_state.init(rng_pool);\n    for(rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr)\n      rng_pool[rng_pptr] = 0;\n    rng_pptr = 0;\n  }\n  // TODO: allow reseeding after first request\n  return rng_state.next();\n}\n\nfunction rng_get_bytes(ba) {\n  var i;\n  for(i = 0; i < ba.length; ++i) ba[i] = rng_get_byte();\n}\n\nexport class SecureRandom {\n  constructor(){}\n}\n\nSecureRandom.prototype.nextBytes = rng_get_bytes;\n","// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nexport class BigInteger {\n  constructor(a,b,c) {\n    if (a != null)\n      if (\"number\" == typeof a) this.fromNumber(a, b, c);\n      else if (b == null && \"string\" != typeof a) this.fromString(a, 256);\n      else this.fromString(a, b);\n  }\n}\n\n// return new, unset BigInteger\nexport function nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this[i++]+w[j]+c;\n    c = Math.floor(v/0x4000000);\n    w[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this[i]&0x7fff;\n    var h = this[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this[i]&0x3fff;\n    var h = this[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w[j++] = l&0xfffffff;\n  }\n  return c;\n}\nif(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n}\nelse if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n}\nelse { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = [];\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nexport function int2char(n) { return BI_RM.charAt(n); }\nexport function intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r[i] = this[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this[0] = x;\n  else if(x < -1) this[0] = x+this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nexport function nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this[this.t++] = (x>>(this.DB-sh));\n    }\n    else\n      this[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this[i]&((1<<p)-1))<<(k-p);\n        d |= this[--i]>>(p+=this.DB-k);\n      }\n      else {\n        d = (this[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nexport function nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];\n  for(i = n-1; i >= 0; --i) r[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r[i-n] = this[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r[i+ds+1] = (this[i]>>cbs)|c;\n    c = (this[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r[i] = 0;\n  r[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r[0] = this[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r[i-ds-1] |= (this[i]&bm)<<cbs;\n    r[i-ds] = this[i]>>bs;\n  }\n  if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this[i]-a[i];\n    r[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  }\n  else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r[i++] = this.DV+c;\n  else if(c > 0) r[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r[i] = 0;\n  for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x[i],r,2*i,0,1);\n    if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r[i+x.t] -= x.DV;\n      r[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }\n  else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);\n    if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nexport class Classic{\n  constructor(m){\n    this.m = m;\n  }\n}\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nexport class Montgomery {\n  constructor(m) {\n    this.m = m;\n    this.mp = m.invDigit();\n    this.mpl = this.mp & 0x7fff;\n    this.mph = this.mp >> 15;\n    this.um = (1 << (m.DB - 15)) - 1;\n    this.mt2 = 2 * m.t;\n  }\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n","// Copyright (c) 2005-2009  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Extended JavaScript BN functions, required for RSA private ops.\n\n// Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n// Version 1.2: square() API, isProbablePrime fix\n\nimport {BigInteger, nbi, nbv, nbits, intAt, Classic, Montgomery} from \"./jsbn\";\nexport {BigInteger} from \"./jsbn\";\n// (public)\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n// (public) return value as integer\nfunction bnIntValue() {\n  if(this.s < 0) {\n    if(this.t == 1) return this[0]-this.DV;\n    else if(this.t == 0) return -1;\n  }\n  else if(this.t == 1) return this[0];\n  else if(this.t == 0) return 0;\n  // assumes 16 < DB < 32\n  return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];\n}\n\n// (public) return value as byte\nfunction bnByteValue() { return (this.t==0)?this.s:(this[0]<<24)>>24; }\n\n// (public) return value as short (assumes DB>=16)\nfunction bnShortValue() { return (this.t==0)?this.s:(this[0]<<16)>>16; }\n\n// (protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n// (public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\n  if(this.s < 0) return -1;\n  else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\n  else return 1;\n}\n\n// (protected) convert to radix string\nfunction bnpToRadix(b) {\n  if(b == null) b = 10;\n  if(this.signum() == 0 || b < 2 || b > 36) return \"0\";\n  var cs = this.chunkSize(b);\n  var a = Math.pow(b,cs);\n  var d = nbv(a), y = nbi(), z = nbi(), r = \"\";\n  this.divRemTo(d,y,z);\n  while(y.signum() > 0) {\n    r = (a+z.intValue()).toString(b).substr(1) + r;\n    y.divRemTo(d,y,z);\n  }\n  return z.intValue().toString(b) + r;\n}\n\n// (protected) convert from radix string\nfunction bnpFromRadix(s,b) {\n  this.fromInt(0);\n  if(b == null) b = 10;\n  var cs = this.chunkSize(b);\n  var d = Math.pow(b,cs), mi = false, j = 0, w = 0;\n  for(var i = 0; i < s.length; ++i) {\n    var x = intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n      continue;\n    }\n    w = b*w+x;\n    if(++j >= cs) {\n      this.dMultiply(d);\n      this.dAddOffset(w,0);\n      j = 0;\n      w = 0;\n    }\n  }\n  if(j > 0) {\n    this.dMultiply(Math.pow(b,j));\n    this.dAddOffset(w,0);\n  }\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) alternate constructor\nfunction bnpFromNumber(a,b,c) {\n  if(\"number\" == typeof b) {\n    // new BigInteger(int,int,RNG)\n    if(a < 2) this.fromInt(1);\n    else {\n      this.fromNumber(a,c);\n      if(!this.testBit(a-1))\t// force MSB set\n        this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n      if(this.isEven()) this.dAddOffset(1,0); // force odd\n      while(!this.isProbablePrime(b)) {\n        this.dAddOffset(2,0);\n        if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n      }\n    }\n  }\n  else {\n    // new BigInteger(int,RNG)\n    var x = [], t = a&7;\n    x.length = (a>>3)+1;\n    b.nextBytes(x);\n    if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n    this.fromString(x,256);\n  }\n}\n\n// (public) convert to bigendian byte array\nfunction bnToByteArray() {\n  var i = this.t, r = [];\n  r[0] = this.s;\n  var p = this.DB-(i*this.DB)%8, d, k = 0;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this[i]>>p) != (this.s&this.DM)>>p)\n      r[k++] = d|(this.s<<(this.DB-p));\n    while(i >= 0) {\n      if(p < 8) {\n        d = (this[i]&((1<<p)-1))<<(8-p);\n        d |= this[--i]>>(p+=this.DB-8);\n      }\n      else {\n        d = (this[i]>>(p-=8))&0xff;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if((d&0x80) != 0) d |= -256;\n      if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n      if(k > 0 || d != this.s) r[k++] = d;\n    }\n  }\n  return r;\n}\n\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n// (protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a,op,r) {\n  var i, f, m = Math.min(a.t,this.t);\n  for(i = 0; i < m; ++i) r[i] = op(this[i],a[i]);\n  if(a.t < this.t) {\n    f = a.s&this.DM;\n    for(i = m; i < this.t; ++i) r[i] = op(this[i],f);\n    r.t = this.t;\n  }\n  else {\n    f = this.s&this.DM;\n    for(i = m; i < a.t; ++i) r[i] = op(f,a[i]);\n    r.t = a.t;\n  }\n  r.s = op(this.s,a.s);\n  r.clamp();\n}\n\n// (public) this & a\nfunction op_and(x,y) { return x&y; }\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n// (public) this | a\nfunction op_or(x,y) { return x|y; }\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n// (public) this ^ a\nfunction op_xor(x,y) { return x^y; }\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n// (public) this & ~a\nfunction op_andnot(x,y) { return x&~y; }\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n// (public) ~this\nfunction bnNot() {\n  var r = nbi();\n  for(var i = 0; i < this.t; ++i) r[i] = this.DM&~this[i];\n  r.t = this.t;\n  r.s = ~this.s;\n  return r;\n}\n\n// (public) this << n\nfunction bnShiftLeft(n) {\n  var r = nbi();\n  if(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\n  return r;\n}\n\n// (public) this >> n\nfunction bnShiftRight(n) {\n  var r = nbi();\n  if(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\n  return r;\n}\n\n// return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\n  if(x == 0) return -1;\n  var r = 0;\n  if((x&0xffff) == 0) { x >>= 16; r += 16; }\n  if((x&0xff) == 0) { x >>= 8; r += 8; }\n  if((x&0xf) == 0) { x >>= 4; r += 4; }\n  if((x&3) == 0) { x >>= 2; r += 2; }\n  if((x&1) == 0) ++r;\n  return r;\n}\n\n// (public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\n  for(var i = 0; i < this.t; ++i)\n    if(this[i] != 0) return i*this.DB+lbit(this[i]);\n  if(this.s < 0) return this.t*this.DB;\n  return -1;\n}\n\n// return number of 1 bits in x\nfunction cbit(x) {\n  var r = 0;\n  while(x != 0) { x &= x-1; ++r; }\n  return r;\n}\n\n// (public) return number of set bits\nfunction bnBitCount() {\n  var r = 0, x = this.s&this.DM;\n  for(var i = 0; i < this.t; ++i) r += cbit(this[i]^x);\n  return r;\n}\n\n// (public) true iff nth bit is set\nfunction bnTestBit(n) {\n  var j = Math.floor(n/this.DB);\n  if(j >= this.t) return(this.s!=0);\n  return((this[j]&(1<<(n%this.DB)))!=0);\n}\n\n// (protected) this op (1<<n)\nfunction bnpChangeBit(n,op) {\n  var r = BigInteger.ONE.shiftLeft(n);\n  this.bitwiseTo(r,op,r);\n  return r;\n}\n\n// (public) this | (1<<n)\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\n\n// (public) this & ~(1<<n)\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n// (public) this ^ (1<<n)\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n// (protected) r = this + a\nfunction bnpAddTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this[i]+a[i];\n    r[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c += a.s;\n    while(i < this.t) {\n      c += this[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  }\n  else {\n    c += this.s;\n    while(i < a.t) {\n      c += a[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c > 0) r[i++] = c;\n  else if(c < -1) r[i++] = this.DV+c;\n  r.t = i;\n  r.clamp();\n}\n\n// (public) this + a\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n// (public) this - a\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n// (public) this * a\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n// (public) this^2\nfunction bnSquare() { var r = nbi(); this.squareTo(r); return r; }\n\n// (public) this / a\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n// (public) this % a\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n// (public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\n  var q = nbi(), r = nbi();\n  this.divRemTo(a,q,r);\n  return new Array(q,r);\n}\n\n// (protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\n  this[this.t] = this.am(0,n-1,this,0,0,this.t);\n  ++this.t;\n  this.clamp();\n}\n\n// (protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n,w) {\n  if(n == 0) return;\n  while(this.t <= w) this[this.t++] = 0;\n  this[w] += n;\n  while(this[w] >= this.DV) {\n    this[w] -= this.DV;\n    if(++w >= this.t) this[this.t++] = 0;\n    ++this[w];\n  }\n}\n\n// A \"null\" reducer\nfunction NullExp() {}\nfunction nNop(x) { return x; }\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\nfunction nSqrTo(x,r) { x.squareTo(r); }\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n// (public) this^e\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\n\n// (protected) r = lower n words of \"this * a\", a.t <= n\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a,n,r) {\n  var i = Math.min(this.t+a.t,n);\n  r.s = 0; // assumes a,this >= 0\n  r.t = i;\n  while(i > 0) r[--i] = 0;\n  var j;\n  for(j = r.t-this.t; i < j; ++i) r[i+this.t] = this.am(0,a[i],r,i,0,this.t);\n  for(j = Math.min(a.t,n); i < j; ++i) this.am(0,a[i],r,i,0,n-i);\n  r.clamp();\n}\n\n// (protected) r = \"this * a\" without lower n words, n > 0\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a,n,r) {\n  --n;\n  var i = r.t = this.t+a.t-n;\n  r.s = 0; // assumes a,this >= 0\n  while(--i >= 0) r[i] = 0;\n  for(i = Math.max(n-this.t,0); i < a.t; ++i)\n    r[this.t+i-n] = this.am(n-i,a[i],r,0,0,this.t+i-n);\n  r.clamp();\n  r.drShiftTo(1,r);\n}\n\n// Barrett modular reduction\nfunction Barrett(m) {\n  // setup Barrett\n  this.r2 = nbi();\n  this.q3 = nbi();\n  BigInteger.ONE.dlShiftTo(2*m.t,this.r2);\n  this.mu = this.r2.divide(m);\n  this.m = m;\n}\n\nfunction barrettConvert(x) {\n  if(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\n  else if(x.compareTo(this.m) < 0) return x;\n  else { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n// x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\n  x.drShiftTo(this.m.t-1,this.r2);\n  if(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\n  this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\n  this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\n  while(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\n  x.subTo(this.r2,x);\n  while(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e,m) {\n  var i = e.bitLength(), k, r = nbv(1), z;\n  if(i <= 0) return r;\n  else if(i < 18) k = 1;\n  else if(i < 48) k = 3;\n  else if(i < 144) k = 4;\n  else if(i < 768) k = 5;\n  else k = 6;\n  if(i < 8)\n    z = new Classic(m);\n  else if(m.isEven())\n    z = new Barrett(m);\n  else\n    z = new Montgomery(m);\n\n  // precomputation\n  var g = [], n = 3, k1 = k-1, km = (1<<k)-1;\n  g[1] = z.convert(this);\n  if(k > 1) {\n    var g2 = nbi();\n    z.sqrTo(g[1],g2);\n    while(n <= km) {\n      g[n] = nbi();\n      z.mulTo(g2,g[n-2],g[n]);\n      n += 2;\n    }\n  }\n\n  var j = e.t-1, w, is1 = true, r2 = nbi(), t;\n  i = nbits(e[j])-1;\n  while(j >= 0) {\n    if(i >= k1) w = (e[j]>>(i-k1))&km;\n    else {\n      w = (e[j]&((1<<(i+1))-1))<<(k1-i);\n      if(j > 0) w |= e[j-1]>>(this.DB+i-k1);\n    }\n\n    n = k;\n    while((w&1) == 0) { w >>= 1; --n; }\n    if((i -= n) < 0) { i += this.DB; --j; }\n    if(is1) {\t// ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r);\n      is1 = false;\n    }\n    else {\n      while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n      if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n      z.mulTo(r2,g[w],r);\n    }\n\n    while(j >= 0 && (e[j]&(1<<i)) == 0) {\n      z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n      if(--i < 0) { i = this.DB-1; --j; }\n    }\n  }\n  return z.revert(r);\n}\n\n// (public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\n  var x = (this.s<0)?this.negate():this.clone();\n  var y = (a.s<0)?a.negate():a.clone();\n  if(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\n  var i = x.getLowestSetBit(), g = y.getLowestSetBit();\n  if(g < 0) return x;\n  if(i < g) g = i;\n  if(g > 0) {\n    x.rShiftTo(g,x);\n    y.rShiftTo(g,y);\n  }\n  while(x.signum() > 0) {\n    if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n    if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n    if(x.compareTo(y) >= 0) {\n      x.subTo(y,x);\n      x.rShiftTo(1,x);\n    }\n    else {\n      y.subTo(x,y);\n      y.rShiftTo(1,y);\n    }\n  }\n  if(g > 0) y.lShiftTo(g,y);\n  return y;\n}\n\n// (protected) this % n, n < 2^26\nfunction bnpModInt(n) {\n  if(n <= 0) return 0;\n  var d = this.DV%n, r = (this.s<0)?n-1:0;\n  if(this.t > 0)\n    if(d == 0) r = this[0]%n;\n    else for(var i = this.t-1; i >= 0; --i) r = (d*r+this[i])%n;\n  return r;\n}\n\n// (public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\n  var ac = m.isEven();\n  if((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\n  var u = m.clone(), v = this.clone();\n  var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\n  while(u.signum() != 0) {\n    while(u.isEven()) {\n      u.rShiftTo(1,u);\n      if(ac) {\n        if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n        a.rShiftTo(1,a);\n      }\n      else if(!b.isEven()) b.subTo(m,b);\n      b.rShiftTo(1,b);\n    }\n    while(v.isEven()) {\n      v.rShiftTo(1,v);\n      if(ac) {\n        if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n        c.rShiftTo(1,c);\n      }\n      else if(!d.isEven()) d.subTo(m,d);\n      d.rShiftTo(1,d);\n    }\n    if(u.compareTo(v) >= 0) {\n      u.subTo(v,u);\n      if(ac) a.subTo(c,a);\n      b.subTo(d,b);\n    }\n    else {\n      v.subTo(u,v);\n      if(ac) c.subTo(a,c);\n      d.subTo(b,d);\n    }\n  }\n  if(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n  if(d.compareTo(m) >= 0) return d.subtract(m);\n  if(d.signum() < 0) d.addTo(m,d); else return d;\n  if(d.signum() < 0) return d.add(m); else return d;\n}\n\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n// (public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\n  var i, x = this.abs();\n  if(x.t == 1 && x[0] <= lowprimes[lowprimes.length-1]) {\n    for(i = 0; i < lowprimes.length; ++i)\n      if(x[0] == lowprimes[i]) return true;\n    return false;\n  }\n  if(x.isEven()) return false;\n  i = 1;\n  while(i < lowprimes.length) {\n    var m = lowprimes[i], j = i+1;\n    while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n    m = x.modInt(m);\n    while(i < j) if(m%lowprimes[i++] == 0) return false;\n  }\n  return x.millerRabin(t);\n}\n\n// (protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\n  var n1 = this.subtract(BigInteger.ONE);\n  var k = n1.getLowestSetBit();\n  if(k <= 0) return false;\n  var r = n1.shiftRight(k);\n  t = (t+1)>>1;\n  if(t > lowprimes.length) t = lowprimes.length;\n  var a = nbi();\n  for(var i = 0; i < t; ++i) {\n    //Pick bases at random, instead of starting at 2\n    a.fromInt(lowprimes[Math.floor(Math.random()*lowprimes.length)]);\n    var y = a.modPow(r,this);\n    if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n      var j = 1;\n      while(j++ < k && y.compareTo(n1) != 0) {\n        y = y.modPowInt(2,this);\n        if(y.compareTo(BigInteger.ONE) == 0) return false;\n      }\n      if(y.compareTo(n1) != 0) return false;\n    }\n  }\n  return true;\n}\n\n// protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n// public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n// JSBN-specific extension\nBigInteger.prototype.square = bnSquare;\n\n// BigInteger interfaces not implemented in jsbn:\n\n// BigInteger(int signum, byte[] magnitude)\n// double doubleValue()\n// float floatValue()\n// int hashCode()\n// long longValue()\n// static BigInteger valueOf(long val)\n","import {BigInteger} from \"../jsbn/jsbn2\";\n/*! asn1-1.0.2.js (c) 2013 Kenji Urushima | kjur.github.com/jsrsasign/license\n */\n\nexport const JSX = /*window.JSX || */{};\nJSX.env = JSX.env || {};\n\nvar L = JSX, OP = Object.prototype, FUNCTION_TOSTRING = '[object Function]',ADD = [\"toString\", \"valueOf\"];\n\nJSX.env.parseUA = function(agent) {\n\n    var numberify = function(s) {\n        var c = 0;\n        return parseFloat(s.replace(/\\./g, function() {\n            return (c++ == 1) ? '' : '.';\n        }));\n    },\n\n    nav = navigator,\n    o = {\n        ie: 0,\n        opera: 0,\n        gecko: 0,\n        webkit: 0,\n        chrome: 0,\n        mobile: null,\n        air: 0,\n        ipad: 0,\n        iphone: 0,\n        ipod: 0,\n        ios: null,\n        android: 0,\n        webos: 0,\n        caja: nav && nav.cajaVersion,\n        secure: false,\n        os: null\n\n    },\n\n    ua = agent || (navigator && navigator.userAgent),\n    loc = window && window.location,\n    href = loc && loc.href,\n    m;\n\n    o.secure = href && (href.toLowerCase().indexOf(\"https\") === 0);\n\n    if (ua) {\n\n        if ((/windows|win32/i).test(ua)) {\n            o.os = 'windows';\n        } else if ((/macintosh/i).test(ua)) {\n            o.os = 'macintosh';\n        } else if ((/rhino/i).test(ua)) {\n            o.os = 'rhino';\n        }\n        if ((/KHTML/).test(ua)) {\n            o.webkit = 1;\n        }\n        m = ua.match(/AppleWebKit\\/([^\\s]*)/);\n        if (m && m[1]) {\n            o.webkit = numberify(m[1]);\n            if (/ Mobile\\//.test(ua)) {\n                o.mobile = 'Apple'; // iPhone or iPod Touch\n                m = ua.match(/OS ([^\\s]*)/);\n                if (m && m[1]) {\n                    m = numberify(m[1].replace('_', '.'));\n                }\n                o.ios = m;\n                o.ipad = o.ipod = o.iphone = 0;\n                m = ua.match(/iPad|iPod|iPhone/);\n                if (m && m[0]) {\n                    o[m[0].toLowerCase()] = o.ios;\n                }\n            } else {\n                m = ua.match(/NokiaN[^\\/]*|Android \\d\\.\\d|webOS\\/\\d\\.\\d/);\n                if (m) {\n                    o.mobile = m[0];\n                }\n                if (/webOS/.test(ua)) {\n                    o.mobile = 'WebOS';\n                    m = ua.match(/webOS\\/([^\\s]*);/);\n                    if (m && m[1]) {\n                        o.webos = numberify(m[1]);\n                    }\n                }\n                if (/ Android/.test(ua)) {\n                    o.mobile = 'Android';\n                    m = ua.match(/Android ([^\\s]*);/);\n                    if (m && m[1]) {\n                        o.android = numberify(m[1]);\n                    }\n                }\n            }\n            m = ua.match(/Chrome\\/([^\\s]*)/);\n            if (m && m[1]) {\n                o.chrome = numberify(m[1]); // Chrome\n            } else {\n                m = ua.match(/AdobeAIR\\/([^\\s]*)/);\n                if (m) {\n                    o.air = m[0]; // Adobe AIR 1.0 or better\n                }\n            }\n        }\n        if (!o.webkit) {\n            m = ua.match(/Opera[\\s\\/]([^\\s]*)/);\n            if (m && m[1]) {\n                o.opera = numberify(m[1]);\n                m = ua.match(/Version\\/([^\\s]*)/);\n                if (m && m[1]) {\n                    o.opera = numberify(m[1]); // opera 10+\n                }\n                m = ua.match(/Opera Mini[^;]*/);\n                if (m) {\n                    o.mobile = m[0]; // ex: Opera Mini/2.0.4509/1316\n                }\n            } else { // not opera or webkit\n                m = ua.match(/MSIE\\s([^;]*)/);\n                if (m && m[1]) {\n                    o.ie = numberify(m[1]);\n                } else { // not opera, webkit, or ie\n                    m = ua.match(/Gecko\\/([^\\s]*)/);\n                    if (m) {\n                        o.gecko = 1; // Gecko detected, look for revision\n                        m = ua.match(/rv:([^\\s\\)]*)/);\n                        if (m && m[1]) {\n                            o.gecko = numberify(m[1]);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return o;\n};\n\nJSX.env.ua = JSX.env.parseUA();\n\nJSX.isFunction = function(o) {\n    return (typeof o === 'function') || OP.toString.apply(o) === FUNCTION_TOSTRING;\n};\n\nJSX._IEEnumFix = (JSX.env.ua.ie) ? function(r, s) {\n    var i, fname, f;\n    for (i=0;i<ADD.length;i=i+1) {\n\n        fname = ADD[i];\n        f = s[fname];\n\n        if (L.isFunction(f) && f!=OP[fname]) {\n            r[fname]=f;\n        }\n    }\n} : function(){};\n\nJSX.extend = function(subc, superc, overrides) {\n    if (!superc||!subc) {\n        throw new Error(\"extend failed, please check that \" +\n                        \"all dependencies are included.\");\n    }\n    var F = function() {}, i;\n    F.prototype=superc.prototype;\n    subc.prototype=new F();\n    subc.prototype.constructor=subc;\n    subc.superclass=superc.prototype;\n    if (superc.prototype.constructor == OP.constructor) {\n        superc.prototype.constructor=superc;\n    }\n\n    if (overrides) {\n        for (i in overrides) {\n            if (L.hasOwnProperty(overrides, i)) {\n                subc.prototype[i]=overrides[i];\n            }\n        }\n\n        L._IEEnumFix(subc.prototype, overrides);\n    }\n};\n\n/*\n * asn1.js - ASN.1 DER encoder classes\n *\n * Copyright (c) 2013 Kenji Urushima (kenji.urushima@gmail.com)\n *\n * This software is licensed under the terms of the MIT License.\n * http://kjur.github.com/jsrsasign/license\n *\n * The above copyright and license notice shall be \n * included in all copies or substantial portions of the Software.\n */\n\n/**\n * @fileOverview\n * @name asn1-1.0.js\n * @author Kenji Urushima kenji.urushima@gmail.com\n * @version 1.0.2 (2013-May-30)\n * @since 2.1\n * @license <a href=\"http://kjur.github.io/jsrsasign/license/\">MIT License</a>\n */\n\n/** \n * kjur's class library name space\n * <p>\n * This name space provides following name spaces:\n * <ul>\n * <li>{@link KJUR.asn1} - ASN.1 primitive hexadecimal encoder</li>\n * <li>{@link KJUR.asn1.x509} - ASN.1 structure for X.509 certificate and CRL</li>\n * <li>{@link KJUR.crypto} - Java Cryptographic Extension(JCE) style MessageDigest/Signature \n * class and utilities</li>\n * </ul>\n * </p> \n * NOTE: Please ignore method summary and document of this namespace. This caused by a bug of jsdoc2.\n  * @name KJUR\n * @namespace kjur's class library name space\n */\n// if (typeof KJUR == \"undefined\" || !KJUR)\nexport const KJUR = {};\n\n/**\n * kjur's ASN.1 class library name space\n * <p>\n * This is ITU-T X.690 ASN.1 DER encoder class library and\n * class structure and methods is very similar to \n * org.bouncycastle.asn1 package of \n * well known BouncyCaslte Cryptography Library.\n *\n * <h4>PROVIDING ASN.1 PRIMITIVES</h4>\n * Here are ASN.1 DER primitive classes.\n * <ul>\n * <li>{@link KJUR.asn1.DERBoolean}</li>\n * <li>{@link KJUR.asn1.DERInteger}</li>\n * <li>{@link KJUR.asn1.DERBitString}</li>\n * <li>{@link KJUR.asn1.DEROctetString}</li>\n * <li>{@link KJUR.asn1.DERNull}</li>\n * <li>{@link KJUR.asn1.DERObjectIdentifier}</li>\n * <li>{@link KJUR.asn1.DERUTF8String}</li>\n * <li>{@link KJUR.asn1.DERNumericString}</li>\n * <li>{@link KJUR.asn1.DERPrintableString}</li>\n * <li>{@link KJUR.asn1.DERTeletexString}</li>\n * <li>{@link KJUR.asn1.DERIA5String}</li>\n * <li>{@link KJUR.asn1.DERUTCTime}</li>\n * <li>{@link KJUR.asn1.DERGeneralizedTime}</li>\n * <li>{@link KJUR.asn1.DERSequence}</li>\n * <li>{@link KJUR.asn1.DERSet}</li>\n * </ul>\n *\n * <h4>OTHER ASN.1 CLASSES</h4>\n * <ul>\n * <li>{@link KJUR.asn1.ASN1Object}</li>\n * <li>{@link KJUR.asn1.DERAbstractString}</li>\n * <li>{@link KJUR.asn1.DERAbstractTime}</li>\n * <li>{@link KJUR.asn1.DERAbstractStructured}</li>\n * <li>{@link KJUR.asn1.DERTaggedObject}</li>\n * </ul>\n * </p>\n * NOTE: Please ignore method summary and document of this namespace. This caused by a bug of jsdoc2.\n * @name KJUR.asn1\n * @namespace\n */\nif (typeof KJUR.asn1 == \"undefined\" || !KJUR.asn1) KJUR.asn1 = {};\n\n/**\n * ASN1 utilities class\n * @name KJUR.asn1.ASN1Util\n * @classs ASN1 utilities class\n * @since asn1 1.0.2\n */\nKJUR.asn1.ASN1Util = new function() {\n    this.integerToByteHex = function(i) {\n\tvar h = i.toString(16);\n\tif ((h.length % 2) == 1) h = '0' + h;\n\treturn h;\n    };\n    this.bigIntToMinTwosComplementsHex = function(bigIntegerValue) {\n\tvar h = bigIntegerValue.toString(16);\n\tif (h.substr(0, 1) != '-') {\n\t    if (h.length % 2 == 1) {\n\t\th = '0' + h;\n\t    } else {\n\t\tif (! h.match(/^[0-7]/)) {\n\t\t    h = '00' + h;\n\t\t}\n\t    }\n\t} else {\n\t    var hPos = h.substr(1);\n\t    var xorLen = hPos.length;\n\t    if (xorLen % 2 == 1) {\n\t\txorLen += 1;\n\t    } else {\n\t\tif (! h.match(/^[0-7]/)) {\n\t\t    xorLen += 2;\n\t\t}\n\t    }\n\t    var hMask = '';\n\t    for (var i = 0; i < xorLen; i++) {\n\t\thMask += 'f';\n\t    }\n\t    var biMask = new BigInteger(hMask, 16);\n\t    var biNeg = biMask.xor(bigIntegerValue).add(BigInteger.ONE);\n\t    h = biNeg.toString(16).replace(/^-/, '');\n\t}\n\treturn h;\n    };\n    /**\n     * get PEM string from hexadecimal data and header string\n     * @name getPEMStringFromHex\n     * @memberOf KJUR.asn1.ASN1Util\n     * @function\n     * @param {String} dataHex hexadecimal string of PEM body\n     * @param {String} pemHeader PEM header string (ex. 'RSA PRIVATE KEY')\n     * @return {String} PEM formatted string of input data\n     * @description\n     * @example\n     * var pem  = KJUR.asn1.ASN1Util.getPEMStringFromHex('616161', 'RSA PRIVATE KEY');\n     * // value of pem will be:\n     * -----BEGIN PRIVATE KEY-----\n     * YWFh\n     * -----END PRIVATE KEY-----\n     */\n    this.getPEMStringFromHex = function(dataHex, pemHeader) {\n\tvar dataWA = CryptoJS.enc.Hex.parse(dataHex);\n\tvar dataB64 = CryptoJS.enc.Base64.stringify(dataWA);\n\tvar pemBody = dataB64.replace(/(.{64})/g, \"$1\\r\\n\");\n        pemBody = pemBody.replace(/\\r\\n$/, '');\n\treturn \"-----BEGIN \" + pemHeader + \"-----\\r\\n\" + \n               pemBody + \n               \"\\r\\n-----END \" + pemHeader + \"-----\\r\\n\";\n    };\n};\n\n// ********************************************************************\n//  Abstract ASN.1 Classes\n// ********************************************************************\n\n// ********************************************************************\n\n/**\n * base class for ASN.1 DER encoder object\n * @name KJUR.asn1.ASN1Object\n * @class base class for ASN.1 DER encoder object\n * @property {Boolean} isModified flag whether internal data was changed\n * @property {String} hTLV hexadecimal string of ASN.1 TLV\n * @property {String} hT hexadecimal string of ASN.1 TLV tag(T)\n * @property {String} hL hexadecimal string of ASN.1 TLV length(L)\n * @property {String} hV hexadecimal string of ASN.1 TLV value(V)\n * @description\n */\nKJUR.asn1.ASN1Object = function() {\n    var isModified = true;\n    var hTLV = null;\n    var hT = '00'\n    var hL = '00';\n    var hV = '';\n\n    /**\n     * get hexadecimal ASN.1 TLV length(L) bytes from TLV value(V)\n     * @name getLengthHexFromValue\n     * @memberOf KJUR.asn1.ASN1Object\n     * @function\n     * @return {String} hexadecimal string of ASN.1 TLV length(L)\n     */\n    this.getLengthHexFromValue = function() {\n\tif (typeof this.hV == \"undefined\" || this.hV == null) {\n\t    throw \"this.hV is null or undefined.\";\n\t}\n\tif (this.hV.length % 2 == 1) {\n\t    throw \"value hex must be even length: n=\" + hV.length + \",v=\" + this.hV;\n\t}\n\tvar n = this.hV.length / 2;\n\tvar hN = n.toString(16);\n\tif (hN.length % 2 == 1) {\n\t    hN = \"0\" + hN;\n\t}\n\tif (n < 128) {\n\t    return hN;\n\t} else {\n\t    var hNlen = hN.length / 2;\n\t    if (hNlen > 15) {\n\t\tthrow \"ASN.1 length too long to represent by 8x: n = \" + n.toString(16);\n\t    }\n\t    var head = 128 + hNlen;\n\t    return head.toString(16) + hN;\n\t}\n    };\n\n    /**\n     * get hexadecimal string of ASN.1 TLV bytes\n     * @name getEncodedHex\n     * @memberOf KJUR.asn1.ASN1Object\n     * @function\n     * @return {String} hexadecimal string of ASN.1 TLV\n     */\n    this.getEncodedHex = function() {\n\tif (this.hTLV == null || this.isModified) {\n\t    this.hV = this.getFreshValueHex();\n\t    this.hL = this.getLengthHexFromValue();\n\t    this.hTLV = this.hT + this.hL + this.hV;\n\t    this.isModified = false;\n\t    //console.error(\"first time: \" + this.hTLV);\n\t}\n\treturn this.hTLV;\n    };\n\n    /**\n     * get hexadecimal string of ASN.1 TLV value(V) bytes\n     * @name getValueHex\n     * @memberOf KJUR.asn1.ASN1Object\n     * @function\n     * @return {String} hexadecimal string of ASN.1 TLV value(V) bytes\n     */\n    this.getValueHex = function() {\n\tthis.getEncodedHex();\n\treturn this.hV;\n    }\n\n    this.getFreshValueHex = function() {\n\treturn '';\n    };\n};\n\n// == BEGIN DERAbstractString ================================================\n/**\n * base class for ASN.1 DER string classes\n * @name KJUR.asn1.DERAbstractString\n * @class base class for ASN.1 DER string classes\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @property {String} s internal string of value\n * @extends KJUR.asn1.ASN1Object\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>str - specify initial ASN.1 value(V) by a string</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n */\nKJUR.asn1.DERAbstractString = function(params) {\n    KJUR.asn1.DERAbstractString.superclass.constructor.call(this);\n    var s = null;\n    var hV = null;\n\n    /**\n     * get string value of this string object\n     * @name getString\n     * @memberOf KJUR.asn1.DERAbstractString\n     * @function\n     * @return {String} string value of this string object\n     */\n    this.getString = function() {\n\treturn this.s;\n    };\n\n    /**\n     * set value by a string\n     * @name setString\n     * @memberOf KJUR.asn1.DERAbstractString\n     * @function\n     * @param {String} newS value by a string to set\n     */\n    this.setString = function(newS) {\n\tthis.hTLV = null;\n\tthis.isModified = true;\n\tthis.s = newS;\n\tthis.hV = stohex(this.s);\n    };\n\n    /**\n     * set value by a hexadecimal string\n     * @name setStringHex\n     * @memberOf KJUR.asn1.DERAbstractString\n     * @function\n     * @param {String} newHexString value by a hexadecimal string to set\n     */\n    this.setStringHex = function(newHexString) {\n\tthis.hTLV = null;\n\tthis.isModified = true;\n\tthis.s = null;\n\tthis.hV = newHexString;\n    };\n\n    this.getFreshValueHex = function() {\n\treturn this.hV;\n    };\n\n    if (typeof params != \"undefined\") {\n\tif (typeof params['str'] != \"undefined\") {\n\t    this.setString(params['str']);\n\t} else if (typeof params['hex'] != \"undefined\") {\n\t    this.setStringHex(params['hex']);\n\t}\n    }\n};\nJSX.extend(KJUR.asn1.DERAbstractString, KJUR.asn1.ASN1Object);\n// == END   DERAbstractString ================================================\n\n// == BEGIN DERAbstractTime ==================================================\n/**\n * base class for ASN.1 DER Generalized/UTCTime class\n * @name KJUR.asn1.DERAbstractTime\n * @class base class for ASN.1 DER Generalized/UTCTime class\n * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})\n * @extends KJUR.asn1.ASN1Object\n * @description\n * @see KJUR.asn1.ASN1Object - superclass\n */\nKJUR.asn1.DERAbstractTime = function(params) {\n    KJUR.asn1.DERAbstractTime.superclass.constructor.call(this);\n    var s = null;\n    var date = null;\n\n    // --- PRIVATE METHODS --------------------\n    this.localDateToUTC = function(d) {\n\tutc = d.getTime() + (d.getTimezoneOffset() * 60000);\n\tvar utcDate = new Date(utc);\n\treturn utcDate;\n    };\n\n    this.formatDate = function(dateObject, type) {\n\tvar pad = this.zeroPadding;\n\tvar d = this.localDateToUTC(dateObject);\n\tvar year = String(d.getFullYear());\n\tif (type == 'utc') year = year.substr(2, 2);\n\tvar month = pad(String(d.getMonth() + 1), 2);\n\tvar day = pad(String(d.getDate()), 2);\n\tvar hour = pad(String(d.getHours()), 2);\n\tvar min = pad(String(d.getMinutes()), 2);\n\tvar sec = pad(String(d.getSeconds()), 2);\n\treturn year + month + day + hour + min + sec + 'Z';\n    };\n\n    this.zeroPadding = function(s, len) {\n\tif (s.length >= len) return s;\n\treturn new Array(len - s.length + 1).join('0') + s;\n    };\n\n    // --- PUBLIC METHODS --------------------\n    /**\n     * get string value of this string object\n     * @name getString\n     * @memberOf KJUR.asn1.DERAbstractTime\n     * @function\n     * @return {String} string value of this time object\n     */\n    this.getString = function() {\n\treturn this.s;\n    };\n\n    /**\n     * set value by a string\n     * @name setString\n     * @memberOf KJUR.asn1.DERAbstractTime\n     * @function\n     * @param {String} newS value by a string to set such like \"130430235959Z\"\n     */\n    this.setString = function(newS) {\n\tthis.hTLV = null;\n\tthis.isModified = true;\n\tthis.s = newS;\n\tthis.hV = stohex(this.s);\n    };\n\n    /**\n     * set value by a Date object\n     * @name setByDateValue\n     * @memberOf KJUR.asn1.DERAbstractTime\n     * @function\n     * @param {Integer} year year of date (ex. 2013)\n     * @param {Integer} month month of date between 1 and 12 (ex. 12)\n     * @param {Integer} day day of month\n     * @param {Integer} hour hours of date\n     * @param {Integer} min minutes of date\n     * @param {Integer} sec seconds of date\n     */\n    this.setByDateValue = function(year, month, day, hour, min, sec) {\n\tvar dateObject = new Date(Date.UTC(year, month - 1, day, hour, min, sec, 0));\n\tthis.setByDate(dateObject);\n    };\n\n    this.getFreshValueHex = function() {\n\treturn this.hV;\n    };\n};\nJSX.extend(KJUR.asn1.DERAbstractTime, KJUR.asn1.ASN1Object);\n// == END   DERAbstractTime ==================================================\n\n// == BEGIN DERAbstractStructured ============================================\n/**\n * base class for ASN.1 DER structured class\n * @name KJUR.asn1.DERAbstractStructured\n * @class base class for ASN.1 DER structured class\n * @property {Array} asn1Array internal array of ASN1Object\n * @extends KJUR.asn1.ASN1Object\n * @description\n * @see KJUR.asn1.ASN1Object - superclass\n */\nKJUR.asn1.DERAbstractStructured = function(params) {\n    KJUR.asn1.DERAbstractString.superclass.constructor.call(this);\n    var asn1Array = null;\n\n    /**\n     * set value by array of ASN1Object\n     * @name setByASN1ObjectArray\n     * @memberOf KJUR.asn1.DERAbstractStructured\n     * @function\n     * @param {array} asn1ObjectArray array of ASN1Object to set\n     */\n    this.setByASN1ObjectArray = function(asn1ObjectArray) {\n\tthis.hTLV = null;\n\tthis.isModified = true;\n\tthis.asn1Array = asn1ObjectArray;\n    };\n\n    /**\n     * append an ASN1Object to internal array\n     * @name appendASN1Object\n     * @memberOf KJUR.asn1.DERAbstractStructured\n     * @function\n     * @param {ASN1Object} asn1Object to add\n     */\n    this.appendASN1Object = function(asn1Object) {\n\tthis.hTLV = null;\n\tthis.isModified = true;\n\tthis.asn1Array.push(asn1Object);\n    };\n\n    this.asn1Array = new Array();\n    if (typeof params != \"undefined\") {\n\tif (typeof params['array'] != \"undefined\") {\n\t    this.asn1Array = params['array'];\n\t}\n    }\n};\nJSX.extend(KJUR.asn1.DERAbstractStructured, KJUR.asn1.ASN1Object);\n\n\n// ********************************************************************\n//  ASN.1 Object Classes\n// ********************************************************************\n\n// ********************************************************************\n/**\n * class for ASN.1 DER Boolean\n * @name KJUR.asn1.DERBoolean\n * @class class for ASN.1 DER Boolean\n * @extends KJUR.asn1.ASN1Object\n * @description\n * @see KJUR.asn1.ASN1Object - superclass\n */\nKJUR.asn1.DERBoolean = function() {\n    KJUR.asn1.DERBoolean.superclass.constructor.call(this);\n    this.hT = \"01\";\n    this.hTLV = \"0101ff\";\n};\nJSX.extend(KJUR.asn1.DERBoolean, KJUR.asn1.ASN1Object);\n\n// ********************************************************************\n/**\n * class for ASN.1 DER Integer\n * @name KJUR.asn1.DERInteger\n * @class class for ASN.1 DER Integer\n * @extends KJUR.asn1.ASN1Object\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>int - specify initial ASN.1 value(V) by integer value</li>\n * <li>bigint - specify initial ASN.1 value(V) by BigInteger object</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n */\nKJUR.asn1.DERInteger = function(params) {\n    KJUR.asn1.DERInteger.superclass.constructor.call(this);\n    this.hT = \"02\";\n\n    /**\n     * set value by Tom Wu's BigInteger object\n     * @name setByBigInteger\n     * @memberOf KJUR.asn1.DERInteger\n     * @function\n     * @param {BigInteger} bigIntegerValue to set\n     */\n    this.setByBigInteger = function(bigIntegerValue) {\n\tthis.hTLV = null;\n\tthis.isModified = true;\n\tthis.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);\n    };\n\n    /**\n     * set value by integer value\n     * @name setByInteger\n     * @memberOf KJUR.asn1.DERInteger\n     * @function\n     * @param {Integer} integer value to set\n     */\n    this.setByInteger = function(intValue) {\n\tvar bi = new BigInteger(String(intValue), 10);\n\tthis.setByBigInteger(bi);\n    };\n\n    /**\n     * set value by integer value\n     * @name setValueHex\n     * @memberOf KJUR.asn1.DERInteger\n     * @function\n     * @param {String} hexadecimal string of integer value\n     * @description\n     * <br/>\n     * NOTE: Value shall be represented by minimum octet length of\n     * two's complement representation.\n     */\n    this.setValueHex = function(newHexString) {\n\tthis.hV = newHexString;\n    };\n\n    this.getFreshValueHex = function() {\n\treturn this.hV;\n    };\n\n    if (typeof params != \"undefined\") {\n\tif (typeof params['bigint'] != \"undefined\") {\n\t    this.setByBigInteger(params['bigint']);\n\t} else if (typeof params['int'] != \"undefined\") {\n\t    this.setByInteger(params['int']);\n\t} else if (typeof params['hex'] != \"undefined\") {\n\t    this.setValueHex(params['hex']);\n\t}\n    }\n};\nJSX.extend(KJUR.asn1.DERInteger, KJUR.asn1.ASN1Object);\n\n// ********************************************************************\n/**\n * class for ASN.1 DER encoded BitString primitive\n * @name KJUR.asn1.DERBitString\n * @class class for ASN.1 DER encoded BitString primitive\n * @extends KJUR.asn1.ASN1Object\n * @description \n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>bin - specify binary string (ex. '10111')</li>\n * <li>array - specify array of boolean (ex. [true,false,true,true])</li>\n * <li>hex - specify hexadecimal string of ASN.1 value(V) including unused bits</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n */\nKJUR.asn1.DERBitString = function(params) {\n    KJUR.asn1.DERBitString.superclass.constructor.call(this);\n    this.hT = \"03\";\n\n    /**\n     * set ASN.1 value(V) by a hexadecimal string including unused bits\n     * @name setHexValueIncludingUnusedBits\n     * @memberOf KJUR.asn1.DERBitString\n     * @function\n     * @param {String} newHexStringIncludingUnusedBits\n     */\n    this.setHexValueIncludingUnusedBits = function(newHexStringIncludingUnusedBits) {\n\tthis.hTLV = null;\n\tthis.isModified = true;\n\tthis.hV = newHexStringIncludingUnusedBits;\n    };\n\n    /**\n     * set ASN.1 value(V) by unused bit and hexadecimal string of value\n     * @name setUnusedBitsAndHexValue\n     * @memberOf KJUR.asn1.DERBitString\n     * @function\n     * @param {Integer} unusedBits\n     * @param {String} hValue\n     */\n    this.setUnusedBitsAndHexValue = function(unusedBits, hValue) {\n\tif (unusedBits < 0 || 7 < unusedBits) {\n\t    throw \"unused bits shall be from 0 to 7: u = \" + unusedBits;\n\t}\n\tvar hUnusedBits = \"0\" + unusedBits;\n\tthis.hTLV = null;\n\tthis.isModified = true;\n\tthis.hV = hUnusedBits + hValue;\n    };\n\n    /**\n     * set ASN.1 DER BitString by binary string\n     * @name setByBinaryString\n     * @memberOf KJUR.asn1.DERBitString\n     * @function\n     * @param {String} binaryString binary value string (i.e. '10111')\n     * @description\n     * Its unused bits will be calculated automatically by length of \n     * 'binaryValue'. <br/>\n     * NOTE: Trailing zeros '0' will be ignored.\n     */\n    this.setByBinaryString = function(binaryString) {\n\tbinaryString = binaryString.replace(/0+$/, '');\n\tvar unusedBits = 8 - binaryString.length % 8;\n\tif (unusedBits == 8) unusedBits = 0;\n\tfor (var i = 0; i <= unusedBits; i++) {\n\t    binaryString += '0';\n\t}\n\tvar h = '';\n\tfor (var i = 0; i < binaryString.length - 1; i += 8) {\n\t    var b = binaryString.substr(i, 8);\n\t    var x = parseInt(b, 2).toString(16);\n\t    if (x.length == 1) x = '0' + x;\n\t    h += x;  \n\t}\n\tthis.hTLV = null;\n\tthis.isModified = true;\n\tthis.hV = '0' + unusedBits + h;\n    };\n\n    /**\n     * set ASN.1 TLV value(V) by an array of boolean\n     * @name setByBooleanArray\n     * @memberOf KJUR.asn1.DERBitString\n     * @function\n     * @param {array} booleanArray array of boolean (ex. [true, false, true])\n     * @description\n     * NOTE: Trailing falses will be ignored.\n     */\n    this.setByBooleanArray = function(booleanArray) {\n\tvar s = '';\n\tfor (var i = 0; i < booleanArray.length; i++) {\n\t    if (booleanArray[i] == true) {\n\t\ts += '1';\n\t    } else {\n\t\ts += '0';\n\t    }\n\t}\n\tthis.setByBinaryString(s);\n    };\n\n    /**\n     * generate an array of false with specified length\n     * @name newFalseArray\n     * @memberOf KJUR.asn1.DERBitString\n     * @function\n     * @param {Integer} nLength length of array to generate\n     * @return {array} array of boolean faluse\n     * @description\n     * This static method may be useful to initialize boolean array.\n     */\n    this.newFalseArray = function(nLength) {\n\tvar a = new Array(nLength);\n\tfor (var i = 0; i < nLength; i++) {\n\t    a[i] = false;\n\t}\n\treturn a;\n    };\n\n    this.getFreshValueHex = function() {\n\treturn this.hV;\n    };\n\n    if (typeof params != \"undefined\") {\n\tif (typeof params['hex'] != \"undefined\") {\n\t    this.setHexValueIncludingUnusedBits(params['hex']);\n\t} else if (typeof params['bin'] != \"undefined\") {\n\t    this.setByBinaryString(params['bin']);\n\t} else if (typeof params['array'] != \"undefined\") {\n\t    this.setByBooleanArray(params['array']);\n\t}\n    }\n};\nJSX.extend(KJUR.asn1.DERBitString, KJUR.asn1.ASN1Object);\n\n// ********************************************************************\n/**\n * class for ASN.1 DER OctetString\n * @name KJUR.asn1.DEROctetString\n * @class class for ASN.1 DER OctetString\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * @see KJUR.asn1.DERAbstractString - superclass\n */\nKJUR.asn1.DEROctetString = function(params) {\n    KJUR.asn1.DEROctetString.superclass.constructor.call(this, params);\n    this.hT = \"04\";\n};\nJSX.extend(KJUR.asn1.DEROctetString, KJUR.asn1.DERAbstractString);\n\n// ********************************************************************\n/**\n * class for ASN.1 DER Null\n * @name KJUR.asn1.DERNull\n * @class class for ASN.1 DER Null\n * @extends KJUR.asn1.ASN1Object\n * @description\n * @see KJUR.asn1.ASN1Object - superclass\n */\nKJUR.asn1.DERNull = function() {\n    KJUR.asn1.DERNull.superclass.constructor.call(this);\n    this.hT = \"05\";\n    this.hTLV = \"0500\";\n};\nJSX.extend(KJUR.asn1.DERNull, KJUR.asn1.ASN1Object);\n\n// ********************************************************************\n/**\n * class for ASN.1 DER ObjectIdentifier\n * @name KJUR.asn1.DERObjectIdentifier\n * @class class for ASN.1 DER ObjectIdentifier\n * @param {Array} params associative array of parameters (ex. {'oid': '2.5.4.5'})\n * @extends KJUR.asn1.ASN1Object\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>oid - specify initial ASN.1 value(V) by a oid string (ex. 2.5.4.13)</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n */\nKJUR.asn1.DERObjectIdentifier = function(params) {\n    var itox = function(i) {\n\tvar h = i.toString(16);\n\tif (h.length == 1) h = '0' + h;\n\treturn h;\n    };\n    var roidtox = function(roid) {\n\tvar h = '';\n\tvar bi = new BigInteger(roid, 10);\n\tvar b = bi.toString(2);\n\tvar padLen = 7 - b.length % 7;\n\tif (padLen == 7) padLen = 0;\n\tvar bPad = '';\n\tfor (var i = 0; i < padLen; i++) bPad += '0';\n\tb = bPad + b;\n\tfor (var i = 0; i < b.length - 1; i += 7) {\n\t    var b8 = b.substr(i, 7);\n\t    if (i != b.length - 7) b8 = '1' + b8;\n\t    h += itox(parseInt(b8, 2));\n\t}\n\treturn h;\n    }\n\n    KJUR.asn1.DERObjectIdentifier.superclass.constructor.call(this);\n    this.hT = \"06\";\n\n    /**\n     * set value by a hexadecimal string\n     * @name setValueHex\n     * @memberOf KJUR.asn1.DERObjectIdentifier\n     * @function\n     * @param {String} newHexString hexadecimal value of OID bytes\n     */\n    this.setValueHex = function(newHexString) {\n\tthis.hTLV = null;\n\tthis.isModified = true;\n\tthis.s = null;\n\tthis.hV = newHexString;\n    };\n\n    /**\n     * set value by a OID string\n     * @name setValueOidString\n     * @memberOf KJUR.asn1.DERObjectIdentifier\n     * @function\n     * @param {String} oidString OID string (ex. 2.5.4.13)\n     */\n    this.setValueOidString = function(oidString) {\n\tif (! oidString.match(/^[0-9.]+$/)) {\n\t    throw \"malformed oid string: \" + oidString;\n\t}\n\tvar h = '';\n\tvar a = oidString.split('.');\n\tvar i0 = parseInt(a[0]) * 40 + parseInt(a[1]);\n\th += itox(i0);\n\ta.splice(0, 2);\n\tfor (var i = 0; i < a.length; i++) {\n\t    h += roidtox(a[i]);\n\t}\n\tthis.hTLV = null;\n\tthis.isModified = true;\n\tthis.s = null;\n\tthis.hV = h;\n    };\n\n    /**\n     * set value by a OID name\n     * @name setValueName\n     * @memberOf KJUR.asn1.DERObjectIdentifier\n     * @function\n     * @param {String} oidName OID name (ex. 'serverAuth')\n     * @since 1.0.1\n     * @description\n     * OID name shall be defined in 'KJUR.asn1.x509.OID.name2oidList'.\n     * Otherwise raise error.\n     */\n    this.setValueName = function(oidName) {\n\tif (typeof KJUR.asn1.x509.OID.name2oidList[oidName] != \"undefined\") {\n\t    var oid = KJUR.asn1.x509.OID.name2oidList[oidName];\n\t    this.setValueOidString(oid);\n\t} else {\n\t    throw \"DERObjectIdentifier oidName undefined: \" + oidName;\n\t}\n    };\n\n    this.getFreshValueHex = function() {\n\treturn this.hV;\n    };\n\n    if (typeof params != \"undefined\") {\n\tif (typeof params['oid'] != \"undefined\") {\n\t    this.setValueOidString(params['oid']);\n\t} else if (typeof params['hex'] != \"undefined\") {\n\t    this.setValueHex(params['hex']);\n\t} else if (typeof params['name'] != \"undefined\") {\n\t    this.setValueName(params['name']);\n\t}\n    }\n};\nJSX.extend(KJUR.asn1.DERObjectIdentifier, KJUR.asn1.ASN1Object);\n\n// ********************************************************************\n/**\n * class for ASN.1 DER UTF8String\n * @name KJUR.asn1.DERUTF8String\n * @class class for ASN.1 DER UTF8String\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * @see KJUR.asn1.DERAbstractString - superclass\n */\nKJUR.asn1.DERUTF8String = function(params) {\n    KJUR.asn1.DERUTF8String.superclass.constructor.call(this, params);\n    this.hT = \"0c\";\n};\nJSX.extend(KJUR.asn1.DERUTF8String, KJUR.asn1.DERAbstractString);\n\n// ********************************************************************\n/**\n * class for ASN.1 DER NumericString\n * @name KJUR.asn1.DERNumericString\n * @class class for ASN.1 DER NumericString\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * @see KJUR.asn1.DERAbstractString - superclass\n */\nKJUR.asn1.DERNumericString = function(params) {\n    KJUR.asn1.DERNumericString.superclass.constructor.call(this, params);\n    this.hT = \"12\";\n};\nJSX.extend(KJUR.asn1.DERNumericString, KJUR.asn1.DERAbstractString);\n\n// ********************************************************************\n/**\n * class for ASN.1 DER PrintableString\n * @name KJUR.asn1.DERPrintableString\n * @class class for ASN.1 DER PrintableString\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * @see KJUR.asn1.DERAbstractString - superclass\n */\nKJUR.asn1.DERPrintableString = function(params) {\n    KJUR.asn1.DERPrintableString.superclass.constructor.call(this, params);\n    this.hT = \"13\";\n};\nJSX.extend(KJUR.asn1.DERPrintableString, KJUR.asn1.DERAbstractString);\n\n// ********************************************************************\n/**\n * class for ASN.1 DER TeletexString\n * @name KJUR.asn1.DERTeletexString\n * @class class for ASN.1 DER TeletexString\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * @see KJUR.asn1.DERAbstractString - superclass\n */\nKJUR.asn1.DERTeletexString = function(params) {\n    KJUR.asn1.DERTeletexString.superclass.constructor.call(this, params);\n    this.hT = \"14\";\n};\nJSX.extend(KJUR.asn1.DERTeletexString, KJUR.asn1.DERAbstractString);\n\n// ********************************************************************\n/**\n * class for ASN.1 DER IA5String\n * @name KJUR.asn1.DERIA5String\n * @class class for ASN.1 DER IA5String\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * @see KJUR.asn1.DERAbstractString - superclass\n */\nKJUR.asn1.DERIA5String = function(params) {\n    KJUR.asn1.DERIA5String.superclass.constructor.call(this, params);\n    this.hT = \"16\";\n};\nJSX.extend(KJUR.asn1.DERIA5String, KJUR.asn1.DERAbstractString);\n\n// ********************************************************************\n/**\n * class for ASN.1 DER UTCTime\n * @name KJUR.asn1.DERUTCTime\n * @class class for ASN.1 DER UTCTime\n * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})\n * @extends KJUR.asn1.DERAbstractTime\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>str - specify initial ASN.1 value(V) by a string (ex.'130430235959Z')</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * <li>date - specify Date object.</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n * <h4>EXAMPLES</h4>\n * @example\n * var d1 = new KJUR.asn1.DERUTCTime();\n * d1.setString('130430125959Z');\n *\n * var d2 = new KJUR.asn1.DERUTCTime({'str': '130430125959Z'});\n *\n * var d3 = new KJUR.asn1.DERUTCTime({'date': new Date(Date.UTC(2015, 0, 31, 0, 0, 0, 0))});\n */\nKJUR.asn1.DERUTCTime = function(params) {\n    KJUR.asn1.DERUTCTime.superclass.constructor.call(this, params);\n    this.hT = \"17\";\n\n    /**\n     * set value by a Date object\n     * @name setByDate\n     * @memberOf KJUR.asn1.DERUTCTime\n     * @function\n     * @param {Date} dateObject Date object to set ASN.1 value(V)\n     */\n    this.setByDate = function(dateObject) {\n\tthis.hTLV = null;\n\tthis.isModified = true;\n\tthis.date = dateObject;\n\tthis.s = this.formatDate(this.date, 'utc');\n\tthis.hV = stohex(this.s);\n    };\n\n    if (typeof params != \"undefined\") {\n\tif (typeof params['str'] != \"undefined\") {\n\t    this.setString(params['str']);\n\t} else if (typeof params['hex'] != \"undefined\") {\n\t    this.setStringHex(params['hex']);\n\t} else if (typeof params['date'] != \"undefined\") {\n\t    this.setByDate(params['date']);\n\t}\n    }\n};\nJSX.extend(KJUR.asn1.DERUTCTime, KJUR.asn1.DERAbstractTime);\n\n// ********************************************************************\n/**\n * class for ASN.1 DER GeneralizedTime\n * @name KJUR.asn1.DERGeneralizedTime\n * @class class for ASN.1 DER GeneralizedTime\n * @param {Array} params associative array of parameters (ex. {'str': '20130430235959Z'})\n * @extends KJUR.asn1.DERAbstractTime\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>str - specify initial ASN.1 value(V) by a string (ex.'20130430235959Z')</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * <li>date - specify Date object.</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n */\nKJUR.asn1.DERGeneralizedTime = function(params) {\n    KJUR.asn1.DERGeneralizedTime.superclass.constructor.call(this, params);\n    this.hT = \"18\";\n\n    /**\n     * set value by a Date object\n     * @name setByDate\n     * @memberOf KJUR.asn1.DERGeneralizedTime\n     * @function\n     * @param {Date} dateObject Date object to set ASN.1 value(V)\n     * @example\n     * When you specify UTC time, use 'Date.UTC' method like this:<br/>\n     * var o = new DERUTCTime();\n     * var date = new Date(Date.UTC(2015, 0, 31, 23, 59, 59, 0)); #2015JAN31 23:59:59\n     * o.setByDate(date);\n     */\n    this.setByDate = function(dateObject) {\n\tthis.hTLV = null;\n\tthis.isModified = true;\n\tthis.date = dateObject;\n\tthis.s = this.formatDate(this.date, 'gen');\n\tthis.hV = stohex(this.s);\n    };\n\n    if (typeof params != \"undefined\") {\n\tif (typeof params['str'] != \"undefined\") {\n\t    this.setString(params['str']);\n\t} else if (typeof params['hex'] != \"undefined\") {\n\t    this.setStringHex(params['hex']);\n\t} else if (typeof params['date'] != \"undefined\") {\n\t    this.setByDate(params['date']);\n\t}\n    }\n};\nJSX.extend(KJUR.asn1.DERGeneralizedTime, KJUR.asn1.DERAbstractTime);\n\n// ********************************************************************\n/**\n * class for ASN.1 DER Sequence\n * @name KJUR.asn1.DERSequence\n * @class class for ASN.1 DER Sequence\n * @extends KJUR.asn1.DERAbstractStructured\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>array - specify array of ASN1Object to set elements of content</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n */\nKJUR.asn1.DERSequence = function(params) {\n    KJUR.asn1.DERSequence.superclass.constructor.call(this, params);\n    this.hT = \"30\";\n    this.getFreshValueHex = function() {\n\tvar h = '';\n\tfor (var i = 0; i < this.asn1Array.length; i++) {\n\t    var asn1Obj = this.asn1Array[i];\n\t    h += asn1Obj.getEncodedHex();\n\t}\n\tthis.hV = h;\n\treturn this.hV;\n    };\n};\nJSX.extend(KJUR.asn1.DERSequence, KJUR.asn1.DERAbstractStructured);\n\n// ********************************************************************\n/**\n * class for ASN.1 DER Set\n * @name KJUR.asn1.DERSet\n * @class class for ASN.1 DER Set\n * @extends KJUR.asn1.DERAbstractStructured\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>array - specify array of ASN1Object to set elements of content</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n */\nKJUR.asn1.DERSet = function(params) {\n    KJUR.asn1.DERSet.superclass.constructor.call(this, params);\n    this.hT = \"31\";\n    this.getFreshValueHex = function() {\n\tvar a = new Array();\n\tfor (var i = 0; i < this.asn1Array.length; i++) {\n\t    var asn1Obj = this.asn1Array[i];\n\t    a.push(asn1Obj.getEncodedHex());\n\t}\n\ta.sort();\n\tthis.hV = a.join('');\n\treturn this.hV;\n    };\n};\nJSX.extend(KJUR.asn1.DERSet, KJUR.asn1.DERAbstractStructured);\n\n// ********************************************************************\n/**\n * class for ASN.1 DER TaggedObject\n * @name KJUR.asn1.DERTaggedObject\n * @class class for ASN.1 DER TaggedObject\n * @extends KJUR.asn1.ASN1Object\n * @description\n * <br/>\n * Parameter 'tagNoNex' is ASN.1 tag(T) value for this object.\n * For example, if you find '[1]' tag in a ASN.1 dump, \n * 'tagNoHex' will be 'a1'.\n * <br/>\n * As for optional argument 'params' for constructor, you can specify *ANY* of\n * following properties:\n * <ul>\n * <li>explicit - specify true if this is explicit tag otherwise false \n *     (default is 'true').</li>\n * <li>tag - specify tag (default is 'a0' which means [0])</li>\n * <li>obj - specify ASN1Object which is tagged</li>\n * </ul>\n * @example\n * d1 = new KJUR.asn1.DERUTF8String({'str':'a'});\n * d2 = new KJUR.asn1.DERTaggedObject({'obj': d1});\n * hex = d2.getEncodedHex();\n */\nKJUR.asn1.DERTaggedObject = function(params) {\n    KJUR.asn1.DERTaggedObject.superclass.constructor.call(this);\n    this.hT = \"a0\";\n    this.hV = '';\n    this.isExplicit = true;\n    this.asn1Object = null;\n\n    /**\n     * set value by an ASN1Object\n     * @name setString\n     * @memberOf KJUR.asn1.DERTaggedObject\n     * @function\n     * @param {Boolean} isExplicitFlag flag for explicit/implicit tag\n     * @param {Integer} tagNoHex hexadecimal string of ASN.1 tag\n     * @param {ASN1Object} asn1Object ASN.1 to encapsulate\n     */\n    this.setASN1Object = function(isExplicitFlag, tagNoHex, asn1Object) {\n\tthis.hT = tagNoHex;\n\tthis.isExplicit = isExplicitFlag;\n\tthis.asn1Object = asn1Object;\n\tif (this.isExplicit) {\n\t    this.hV = this.asn1Object.getEncodedHex();\n\t    this.hTLV = null;\n\t    this.isModified = true;\n\t} else {\n\t    this.hV = null;\n\t    this.hTLV = asn1Object.getEncodedHex();\n\t    this.hTLV = this.hTLV.replace(/^../, tagNoHex);\n\t    this.isModified = false;\n\t}\n    };\n\n    this.getFreshValueHex = function() {\n\treturn this.hV;\n    };\n\n    if (typeof params != \"undefined\") {\n\tif (typeof params['tag'] != \"undefined\") {\n\t    this.hT = params['tag'];\n\t}\n\tif (typeof params['explicit'] != \"undefined\") {\n\t    this.isExplicit = params['explicit'];\n\t}\n\tif (typeof params['obj'] != \"undefined\") {\n\t    this.asn1Object = params['obj'];\n\t    this.setASN1Object(this.isExplicit, this.hT, this.asn1Object);\n\t}\n    }\n};\nJSX.extend(KJUR.asn1.DERTaggedObject, KJUR.asn1.ASN1Object);","import {getTagged} from 'bp_logger';\nimport {BaseTransport} from \"../core/base_transport\";\nimport {CPU_CORES} from \"../core/util/browser\";\nimport {JSEncrypt} from 'jsencrypt';\n\nconst LOG_TAG = \"transport:ws\";\nconst Log = getTagged(LOG_TAG);\nconst WORKER_COUNT = CPU_CORES;\n\nexport class WebsocketTransport extends BaseTransport {\n    constructor(wsurl) {\n        super();\n        this.proxies = [];\n        this.currentProxy = 0;\n        this.workers = 1;\n        this.socket_url = wsurl;\n        this.ready = this.connect();\n    }\n\n    connect() {\n        return this.disconnect().then(()=>{\n            let promises = [];\n            // TODO: get mirror list\n            for (let i=0; i<this.workers; ++i) {\n                let proxy = new WebSocketProxy(this.socket_url);\n\n                proxy.set_disconnect_handler((e)=> {\n                    this.eventSource.dispatchEvent('disconnected', {code: e.code, reason: e.reason});\n                    // TODO: only reconnect on demand\n                    if ([1000, 1006, 1013, 1011].includes(e.code)) {\n                        setTimeout(()=> {\n                            if (this.ready && this.ready.reject) {\n                                this.ready.reject();\n                            }\n                            this.ready = this.connect();\n                        }, 3000);\n                    }\n                });\n\n                proxy.set_control_handler((ctrl)=> {\n                    this.ctrlQueue.push(ctrl);\n                    this.eventSource.dispatchEvent('control');\n                });\n\n                proxy.set_data_handler((data)=> {\n                    this.dataQueue.push(new Uint8Array(data));\n                    this.eventSource.dispatchEvent('data');\n                });\n\n                promises.push(proxy.connect().then(()=> {\n                    this.eventSource.dispatchEvent('connected');\n                }).catch((e)=> {\n                    this.eventSource.dispatchEvent('error');\n                    throw new Error(e);\n                }));\n                this.proxies.push(proxy);\n            }\n            return Promise.all(promises);\n        });\n    }\n\n    disconnect() {\n        let promises = [];\n        for (let i=0; i<this.proxies.length; ++i) {\n            this.proxies[i].close();\n        }\n        this.proxies= [];\n        if (this.proxies.length) {\n            return Promise.all(promises);\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    socket() {\n        return this.proxies[(this.currentProxy++)%this.proxies.length];\n    }\n\n    send(_data, fn) {\n        this.socket().send(_data);\n    }\n}\n\nclass WebSocketProxy {\n    constructor(wsurl) {\n        this.url = wsurl;\n        this.ctrl_handler = ()=>{};\n        this.data_handler = ()=>{};\n        this.disconnect_handler = ()=>{};\n        this.awaitingPromises = [];\n    }\n\n    set_control_handler(handler) {\n        this.ctrl_handler = handler;\n    }\n\n    set_data_handler(handler) {\n        this.data_handler = handler;\n    }\n\n    set_disconnect_handler(handler) {\n        this.disconnect_handler = handler;\n    }\n\n    close() {\n        Log.log('closing connection');\n        return new Promise((resolve)=>{\n            this.ws.onclose = ()=> {\n                resolve();\n            };\n            this.ws.close();\n        });\n    }\n\n    onDisconnect(){\n        this.ws.onclose = null;\n        this.ws.close();\n        if (this.dataChannel) {\n            this.dataChannel.onclose = null;\n            this.dataChannel.close();\n        }\n        this.disconnect_handler(this);\n    }\n\n    connect() {\n        return new Promise((resolve, reject)=> {\n            this.ws = new WebSocket(this.url);\n            this.ws.binaryType = 'arraybuffer';\n\n            this.connected = false;\n\n            this.ws.onopen = ()=> {\n                resolve();\n                // let headers = {\n                //     proto: this.stream_type\n                // };\n                // if (this.endpoint.socket) {\n                //     headers.socket = this.endpoint.socket;\n                // } else {\n                //     Object.assign(headers, {\n                //         host:  this.endpoint.host,\n                //         port:  this.endpoint.port\n                //     })\n                // }\n                // let msg = this.builder.build(WSPProtocol.CMD_INIT, headers);\n                // Log.debug(msg);\n                // this.ws.send(this.endpoint);\n            };\n\n            let old = false;\n            let used = false;\n            this.ws.onmessage = (ev)=> {\n                if (typeof ev.data === typeof '') {\n                    Log.debug(`[text] ${ev.data}`);\n                    const p = this.awaitingPromises.shift();\n                    if (p) p.resolve(); // ???\n                    if (this.ctrl_handler) {\n                        this.ctrl_handler(JSON.parse(ev.data));\n                    }\n                } else {\n                    // console.info(ev.timeStamp, window.performance.now());\n                    if (!used && ev.timeStamp + 5000 < window.performance.now()) {\n                        old = true;\n                        Log.debug('[rtp block] ignored old');\n                        return;\n                    }\n                    if (old) {\n                        used = true;\n                    }\n                    Log.debug('[rtp block] ', ev.data.byteLength);\n                    if (this.data_handler) {\n                        this.data_handler(ev.data);\n                    }\n                }\n            };\n\n            this.ws.onerror = (e)=>{\n                Log.error(`[ctrl] ${e.type}`);\n                this.ws.close();\n            };\n            this.ws.onclose = (e)=>{\n                Log.error(`[ctrl] ${e.type}. code: ${e.code} ${e.reason || 'unknown reason'}`);\n                this.onDisconnect(e);\n            };\n        });\n    }\n\n    send(data) {\n        if (this.ws.readyState != WebSocket.OPEN) {\n            this.close();\n            // .then(this.connect.bind(this));\n            // return;\n            throw new Error('disconnected');\n        }\n        Log.debug(data);\n        if (typeof data !== typeof '') {\n            data = JSON.stringify(data);\n        }\n        return new Promise((resolve, reject)=> {\n            this.awaitingPromises.push({resolve, reject});\n            this.ws.send(data);\n        });\n    }\n}","import {Remuxer} from './core/remuxer/remuxer';\nimport {RTSPClient} from './client/rtsp/client';\nimport {WebsocketTransport} from './transport/websocket';\n\nexport class Player {\n    constructor(playerEl, wsurl) {//, url) {\n        this.player = playerEl;\n        this.transport = new WebsocketTransport(wsurl);\n        this.client = new RTSPClient(this.transport);\n        this.remuxer = new Remuxer(this.player);\n        this.remuxer.attachClient(this.client);\n        // this.setSource(url);\n        // if (this.player.autoplay) {\n        //     this.start();\n        // }\n\n        // this.player.addEventListener('durationchange', ()=> {\n        //     const {duration, currentTime} = this.player;\n        //     // console.log('duration changed', duration, currentTime);\n        //     if (currentTime + 1 < duration) {\n        //         this.player.currentTime = duration;\n        //     }\n        //\n        //     // if (duration > 20) {\n        //     //     this.remuxer.mse.initCleanup();\n        //     // }\n        // }, false);\n\n        this.player.addEventListener('play', ()=> {\n            if (!this.isPlaying()) {\n                this.start();\n            }\n        }, false);\n        this.player.addEventListener('pause', ()=> {\n            this.stop();\n        }, false);\n\n        this.playTimer = setInterval(()=> {\n            if (!this.isPlaying()) {\n                this.player.play();\n            }\n        }, 5000);\n    }\n\n    isPlaying() {\n        return !(this.player.paused || this.client.paused);\n    }\n    setSource(url) {\n        this.client.setSource(url);\n    }\n    start() {\n        this.client.start();\n    }\n    stop() {\n        this.client.stop();\n    }\n\n    destroy() {\n        clearTimeout(this.playTimer);\n        this.client.destroy();\n        return this.transport.disconnect();\n    }\n}","import {LogLevel, getTagged, setDefaultLogLevel} from 'bp_logger';\nimport {Player} from './src/player.js';\n\n// setDefaultLogLevel(LogLevel.Debug);\nsetDefaultLogLevel(LogLevel.Error);\ngetTagged(\"transport:ws\").setLevel(LogLevel.Error);\ngetTagged(\"client:rtsp\").setLevel(LogLevel.Error);\n\nexport default {\n  LogLevel,\n  getTagged,\n  setDefaultLogLevel,\n  Player,\n};"],"names":["LOG_TAG","Log","logger"],"mappings":"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"}